{"repository_name":"crysda","body":"# CrysDA\n\n[![CI](https://github.com/naqvis/CrysDA/workflows/CrysDA%20CI/badge.svg)](https://github.com/naqvis/CrysDA/actions?query=workflow%3ACrysDA%20CI)\n[![Latest release](https://img.shields.io/github/release/naqvis/CrysDA.svg)](https://github.com/naqvis/CrysDA/releases)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://naqvis.github.io/CrysDA/)\n\n`CrysDA` is a **Crys**tal shard for **D**ata **A**nalysis. Provides you modern functional-style API for data manipulation to filter, transform, aggregate and reshape tabular data. Core of the library is `Crysda::DataFrame` an immutable data structure interface.\n\n`CrysDA` is heavily inspired by the amazing [`dplyr`](https://github.com/hadley/dplyr) for [R](https://www.r-project.org/). `CrysDA` is written in pure Crystal and have no external dependencies. It is mimicking the API of `dplyr`, while carefully adding more typed constructs where possible.\n\n## Features\n\n\n- [X] Filter, transform, aggregate and reshape tabular data\n- [X] Modern, user-friendly and easy-to-learn data-science API\n- [X] Reads from plain and compressed tsv, csv, json, or any delimited format with or without header from local or remote with auto inferring the types of data.\n- [X] Supports reading data from DB\n- [X] Supports grouped operations\n- [X] Tables can contain atomic columns (Number, Float, Bool, String) as well as object columns\n- [X] Reshape tables from wide to long and back\n- [X] Table joins (left, right, semi, inner, outer)\n- [X] Cross tabulation\n- [X] Descriptive statistics (mean, min, max, median, ...)\n- [X] Functional API inspired by [dplyr](http://dplyr.tidyverse.org/), [pandas](http://pandas.pydata.org/)\n\n- [X] many more...\n\n\n## Quick glimpse and comparison with R/dplyr\n\n```crystal\nflights = Crysda.read_csv(\"./spec/data/nycflights.tsv.gz\", separator: '\\t')\n\nflights\n.group_by(\"year\", \"month\", \"day\")\n.select(\n  Crysda.selector { |e| e[\"year\"..\"day\"] }, # columns range\n  Crysda.selector { |e| e.list_of(\"arr_delay\", \"dep_delay\") })\n.summarize(\n  \"mean_arr_delay\".with {|s| s[\"arr_delay\"].mean(remove_na: true)},\n  \"mean_dep_delay\".with {|s| s[\"dep_delay\"].mean(true)})\n.filter {|f| (f[\"mean_arr_delay\"] > 30) .or (f[\"mean_dep_delay\"] > 30)}\n.print(\"Flights mean delay of arrival and departure\")\n```\n**output**\n```shell\nFlights mean delay of arrival and departure: 49 x 5\n     year   month   day   mean_arr_delay   mean_dep_delay\n 1   2013       1    16           34.247           24.613\n 2   2013       1    31           32.603           28.658\n 3   2013      10     7           39.017           39.147\n 4   2013      10    11           18.923           31.232\n 5   2013      12     5           51.666           52.328\n 6   2013      12     8           36.912           21.515\n 7   2013      12     9           42.576           34.800\n 8   2013      12    10           44.509           26.465\n 9   2013      12    14           46.398           28.362\n10   2013      12    17           55.872           40.706\nand 39 more rows\n```\n\n**And the same snippet written in `dplyr`**\n```r\nflights %>%\n    group_by(year, month, day) %>%\n    select(year:day, arr_delay, dep_delay) %>%\n    summarise(\n        mean_arr_delay = mean(arr_delay, na.rm = TRUE),\n        mean_dep_delay = mean(dep_delay, na.rm = TRUE)\n    ) %>%\n    filter(mean_arr_delay > 30 | mean_dep_delay > 30)\n```\n---\n## Tutorial - Short 1 minute Introduction\nFor this quick and short tutorial, we will be using [ramen-ratings](https://www.kaggle.com/residentmario/ramen-ratings) dataset from kaggle. You are free to use any of your choice.\n\n```crystal\n# load dataset\ndf = Crysda.read_csv(\"./spec/data/ramen-ratings.csv\")\n```\nShard provide support for loading data from CSV, TSV, JSON, DB, URL etc and auto infer the types of columns by peeking into data and make a best choice of data type. Once we’ve read the data into a DataFrame, we can start poking it to see what it looks like. A couple of things one typically look at first are the schema and a few rows.\n```crystal\ndf.print(max_rows: 5) # just show us first 5 rows of data\n```\n```shell\nA DataFrame: 2580 x 7\n    Review #            Brand                                                       Variety   Style   Country   Stars   Top Ten\n1       2580        New Touch                                     T's Restaurant Tantanmen      Cup     Japan    3.75\n2       2579         Just Way   Noodles Spicy Hot Sesame Spicy Hot Sesame Guan-miao Noodles    Pack    Taiwan       1\n3       2578           Nissin                                 Cup Noodles Chicken Vegetable     Cup       USA    2.25\n4       2577          Wei Lih                                 GGE Ramen Snack Tomato Flavor    Pack    Taiwan    2.75\n5       2576   Ching's Secret                                               Singapore Curry    Pack     India    3.75\nand 2575 more rows\n```\nabove output shows that our dataset contains 2580 observations (rows) with 7 variables (or they are called columns here)\n\n```crystal\ndf.schema # show the structure of data.\n```\n\n```shell\nDataFrame with 2580 observations\nReview # [Int32]  2580, 2579, 2578, 2577, 2576, 2575, 2574, 2573, 2572, 2571, 2570, 2569, 2568, 2567, 2566, 2565, 2564...\nBrand    [String] New Touch, Just Way, Nissin, Wei Lih, Ching's Secret, Samyang Foods, Acecook, Ikeda Shoku, Ripe'n'Dr...\nVariety  [String] T's Restaurant Tantanmen , Noodles Spicy Hot Sesame Spicy Hot Sesame Guan-miao Noodles, Cup Noodles ...\nStyle    [String] Cup, Pack, Cup, Pack, Pack, Pack, Cup, Tray, Pack, Pack, Pack, Pack, Pack, Bowl, Pack, Cup, Pack, Pa...\nCountry  [String] Japan, Taiwan, USA, Taiwan, India, South Korea, Japan, Japan, Japan, Singapore, Thailand, USA, South...\nStars    [String] 3.75, 1, 2.25, 2.75, 3.75, 4.75, 4, 3.75, 0.25, 2.5, 5, 5, 4.25, 4.5, 5, 3.5, 3.75, 5, 4, 4, 4.25, 5...\nTop Ten  [String] , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ...\n```\nAlready at this point we can notice that for some reason, the ratings (`Stars` column) themselves inferred to be of `String` type. That might be due to some weirdness in the data itself. Exploring various datasets you’ll encounter all sorts of strange things. Some are easy to fix, like in this case. Let's try to see what is causing the problem\n```crystal\ndf.count(\"Stars\").print(max_rows: 15)\n```\n\n```shell\nA DataFrame: 51 x 2\n       Stars     n\n 1      3.75   350\n 2         1    26\n 3      2.25    21\n 4      2.75    85\n 5      4.75    64\n 6         4   384\n 7      0.25    11\n 8       2.5    67\n 9         5   369\n10      4.25   143\n11       4.5   132\n12       3.5   326\n13   Unrated     3\n14       1.5    37\n15      3.25   170\nand 36 more rows\n```\n\nTurns out three records have a rating of “Unrated”, and since there are so few of them, it’s easier to just drop those records or we can reload the dataset and set the `na_value` argument to `\"Unrated\"`, entries with this value will then be treated as `nil`. use this approach if you want to treat some values as nil, or you don't want to lose other columns values.\n\n```crystal\ndf = Crysda.read_csv(\"./spec/data/ramen-ratings.csv\", na_value: \"Unrated\") # this will retain all rows, while column values with \"Unrated\" will be treated as `nil`\n```\n\nBut in this tutorial we are just going to drop those 3 rows and addd new column to dataframe loaded in above step.\n```crystal\nnew_df = df.filter { |f| f[\"Stars\"].matching { |s| !s.starts_with?(\"Un\") } }\n  .add_column(\"Stars_New\") { |c| c[\"Stars\"].map { |m| m.to_s.to_f } }.tap(&.schema)\n```\n\n```shell\nDataFrame with 2577 observations\nReview #  [Int32]   2580, 2579, 2578, 2577, 2576, 2575, 2574, 2573, 2572, 2571, 2570, 2569, 2568, 2567, 2566, 2565, 2564...\nBrand     [String]  New Touch, Just Way, Nissin, Wei Lih, Ching's Secret, Samyang Foods, Acecook, Ikeda Shoku, Ripe'n'Dr...\nVariety   [String]  T's Restaurant Tantanmen , Noodles Spicy Hot Sesame Spicy Hot Sesame Guan-miao Noodles, Cup Noodles ...\nStyle     [String]  Cup, Pack, Cup, Pack, Pack, Pack, Cup, Tray, Pack, Pack, Pack, Pack, Pack, Bowl, Pack, Cup, Pack, Pa...\nCountry   [String]  Japan, Taiwan, USA, Taiwan, India, South Korea, Japan, Japan, Japan, Singapore, Thailand, USA, South...\nStars     [String]  3.75, 1, 2.25, 2.75, 3.75, 4.75, 4, 3.75, 0.25, 2.5, 5, 5, 4.25, 4.5, 5, 3.5, 3.75, 5, 4, 4, 4.25, 5...\nTop Ten   [String]  , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ...\nStars_New [Float64] 3.750, 1.000, 2.250, 2.750, 3.750, 4.750, 4.000, 3.750, 0.250, 2.500, 5.000, 5.000, 4.250, 4.500, 5....\n```\nSo we added a new column `Stars_New` and we can see that its now of `Float64` type. We can perform simple statistics operations on this column now. Let's just calculate the average rating.\n```crystal\n# we can either create summary dataframe\nnew_df.summarize(\"Average Rating\".with {|c| c[\"Stars_New\"].mean}).tap(&.print)\n# or we can store the value to some local variable\nputs new_df[\"Stars_New\"].mean # => 3.654675979821498\n```\nOf course, you can have questions to your data that can require some data manipulation, like grouping. For example, let’s find out how many unique Ramen brands are there per country.\n```crystal\nbrands_per_country = new_df\n.group_by(\"Country\")\n.distinct(\"Brand\")\n.group_by(\"Country\")\n.count.tap(&.print)\n```\n\n```shell\nA DataFrame: 31 x 2\n         Country    n\n 1         Japan   58\n 2        Taiwan   47\n 3           USA   44\n 4         India    7\n 5   South Korea   32\n 6     Singapore    5\n 7      Thailand   22\n 8     Hong Kong    9\n 9       Vietnam   14\n10         Ghana    2\nand 21 more rows\n```\nLet's sort the dataframe on unique brand count in descending order (with highest count on top)\n```crystal\nbrands_per_country.sort_desc_by(\"n\").print\n```\n\n```shell\nA DataFrame: 31 x 2\n         Country    n\n 1         Japan   58\n 2        Taiwan   47\n 3           USA   44\n 4   South Korea   32\n 5      Malaysia   28\n 6         China   22\n 7      Thailand   22\n 8     Indonesia   18\n 9       Vietnam   14\n10            UK   11\nand 21 more rows\n```\nThese were just a very few and basic examples to give you a taste of what you can do with `Crysda`. As every data wrangler’s path is different, I would encourage you to grab a dataset that interests you and explore it.\n\n---\n## Tutorial 2 - Reshaping Data\nData analysis can be divided into three parts\n- Extraction : First, we need to collect the data from many sources and combine them.\n- Transform: This step involves the data manipulation. Once we have consolidated all the sources of data, we can begin to clean the data.\n- Visualize: The last move is to visualize our data to check irregularity.\n\nOne of the most significant challenges faced by data scientist is the data manipulation. Data is never available in the desired format. The data scientist needs to spend at least half of his time, cleaning and manipulating the data. That is one of the most critical assignments in the job. If the data manipulation process is not complete, precise and rigorous, the model will not perform correctly.\n\n### Merging(joining) Data\nCrysDA provides a nice and convenient way to combine datasets. We may have many sources of input data, and at some point, we need to combine them. A join with CrysDA adds variables to the right of the original dataset. The beauty is CrysDA is that it handles four types of joins similar to SQL\n\n- Left join\n- right join\n- inner join\n- outer join\n\nWe will study all the joins types via an easy example.\n\nFirst of all, we build two datasets. Table 1 contains two variables, ID, and y, whereas Table 2 gathers ID and z. In each situation, we need to have a key-pair variable. In our case, ID is our key variable. The function will look for identical values in both tables and bind the returning values to the right of table 1.\n![Table 1](images/table1.png)\n\n```crystal\ndf_primary = Crysda.dataframe_of(\"ID\",\"y\").values(\n  \"A\", 5,\n   \"B\", 5,\n   \"C\", 8,\n   \"D\", 0,\n  \"F\", 9\n)\n\ndf_secondary = Crysda.dataframe_of(\"ID\",\"z\").values(\n  \"A\", 30,\n   \"B\", 21,\n   \"C\", 22,\n   \"D\", 25,\n   \"E\", 29\n)\n```\n\n#### left_join()\n\nThe most common way to merge two datasets is to use the `left_join` function. We can see from the picture below that the key-pair matches perfectly the rows A, B, C and D from both datasets. However, E and F are left over. How do we treat these two observations? With the `left_join`, we will keep all the variables in the original table and don't consider the variables that do not have a key-paired in the destination table. In our example, the variable E does not exist in table 1. Therefore, the row will be dropped. The variable F comes from the origin table; it will be kept after the `left_join` and return NA in the column z. The figure below reproduces what will happen with a `left_join`.\n![Left Join](images/left_join.png)\n\n```crystal\ndf_primary.left_join(df_secondary, \"ID\").print(\"Left Join\")\n```\nOutput:\n\n```shell\nLeft Join: 5 x 3\n    ID   y      z\n1    A   5     30\n2    B   5     21\n3    C   8     22\n4    D   0     25\n5    F   9   <NA>\n```\n\n#### right_join()\n\nThe `right_join` function works exactly like `left_join`. The only difference is the row dropped. The value E, available in the destination data frame, exists in the new table and takes the value NA for the column y.\n![Right Join](images/right_join.png)\n\n```crystal\ndf_primary.right_join(df_secondary, \"ID\").print(\"Right Join\")\n```\n\nOutput:\n\n```shell\nRight Join: 5 x 3\n    ID      y    z\n1    A      5   30\n2    B      5   21\n3    C      8   22\n4    D      0   25\n5    E   <NA>   29\n```\n\n#### inner_join()\n\nWhen we are 100% sure that the two datasets won't match, we can consider to return only rows existing in both dataset. This is possible when we need a clean dataset or when we don't want to impute missing values with the mean or median.\n\nThe `inner_join` comes to help. This function excludes the unmatched rows.\n![Inner Join](images/inner_join.png)\n\n```crystal\ndf_primary.inner_join(df_secondary, \"ID\").print(\"Inner Join\")\n```\n\nOutput:\n\n```shell\nInner Join: 4 x 3\n    ID   y    z\n1    A   5   30\n2    B   5   21\n3    C   8   22\n4    D   0   25\n```\n\n#### outer_join()\nFinally, the `outer_join` function keeps all observations and replace missing values with `NA`.\n![Outer Join](images/outer_join.png)\n\n```crystal\ndf_primary.outer_join(df_secondary, \"ID\").print(\"Outer Join\")\n```\nOutput:\n\n```shell\nOuter Join: 6 x 3\n    ID      y      z\n1    A      5     30\n2    B      5     21\n3    C      8     22\n4    D      0     25\n5    E   <NA>     29\n6    F      9   <NA>\n```\n\n#### Multiple keys pairs\n\nWe can have multiple keys in our dataset. Consider the following dataset where we have a years or a list of products bought by the customer.\n![Duplicate keys](images/multikey_join.png)\n\n```crystal\ndf_primary = Crysda.dataframe_of(\"ID\",\"year\",\"items\").values(\n  \"A\", 2015,3,\n  \"A\", 2016,7,\n  \"A\", 2017,6,\n  \"B\", 2015,4,\n  \"B\", 2016,8,\n  \"B\", 2017,7,\n  \"C\", 2015,4,\n  \"C\", 2016,6,\n  \"C\", 2017,6\n)\n\ndf_secondary = Crysda.dataframe_of(\"ID\",\"year\",\"prices\").values(\n  \"A\", 2015,9,\n  \"A\", 2016,8,\n  \"A\", 2017,12,\n  \"B\", 2015,13,\n  \"B\", 2016,14,\n  \"B\", 2017,6,\n  \"C\", 2015,15,\n  \"C\", 2016,15,\n  \"C\", 2017,13\n)\n\ndf_primary.left_join(df_secondary, by: [\"ID\",\"year\"]).print(\"Multikey Join\")\n```\n\nOutput:\n\n```shell\nMultikey Join: 9 x 4\n    ID   year   items   prices\n1    A   2015       3        9\n2    A   2016       7        8\n3    A   2017       6       12\n4    B   2015       4       13\n5    B   2016       8       14\n6    B   2017       7        6\n7    C   2015       4       15\n8    C   2016       6       15\n9    C   2017       6       13\n```\n\n### Data Cleaning functions\nFollowing are four important functions to tidy the data:\n\n- gather: Transform the data from wide to long\n- spread: Transform the data from long to wide\n- separate: Split one variable into multiples\n- unite: Unite multiple variables into one\n\n#### gather()\nThe objectives of the `gather` function is to transform the data from wide to long.\n\nBelow we can visualize the concept of reshaping wide to long. We want to create a single column named growth, filled by the rows of the quarter variables.\n![gather](images/gather.png)\n\n```crystal\n# Create a dataset\ndf = Crysda.dataframe_of(\"country\", \"q1_2017\", \"q2_2017\", \"q3_2017\", \"q4_2017\").values(\n  \"A\", 0.03, 0.05, 0.04, 0.03,\n  \"B\", 0.05, 0.07, 0.05, 0.02,\n  \"C\", 0.01, 0.02, 0.01, 0.04)\ndf.print\n```\nOutput:\n\n```shell\nA DataFrame: 3 x 5\n    country   q1_2017   q2_2017   q3_2017   q4_2017\n1         A     0.030     0.050     0.040     0.030\n2         B     0.050     0.070     0.050     0.020\n3         C     0.010     0.020     0.010     0.040\n```\n\nReshape the data\n\n```crystal\nreshaped = df.gather(\"quarter\",\"growth\", Crysda.selector{|c| c[\"q1_2017\"..\"q4_2017\"]}).tap(&.print(max_rows: 12))\n```\n\nOutput:\n\n```shell\nA DataFrame: 12 x 3\n     country   quarter   growth\n 1         A   q1_2017    0.030\n 2         B   q1_2017    0.050\n 3         C   q1_2017    0.010\n 4         A   q2_2017    0.050\n 5         B   q2_2017    0.070\n 6         C   q2_2017    0.020\n 7         A   q3_2017    0.040\n 8         B   q3_2017    0.050\n 9         C   q3_2017    0.010\n10         A   q4_2017    0.030\n11         B   q4_2017    0.020\n12         C   q4_2017    0.040\n```\n\nIn the `gather` function, we created two new variables **qurater** and **growth** because our original dataset has one group variable: **country** and the key-value pairs.\n\n#### spread()\nThe `spread` function does the opposite of `gather`. We can reshape data in above example back to its original form.\n\n```crystal\nreshaped.spread(\"quarter\",\"growth\").print\n```\n\nOutput:\n\n```shell\nA DataFrame: 3 x 5\n    country   q1_2017   q2_2017   q3_2017   q4_2017\n1         A     0.030     0.050     0.040     0.030\n2         B     0.050     0.070     0.050     0.020\n3         C     0.010     0.020     0.010     0.040\n```\n\n#### separate()\nThe `separate` function splits a column into multiples according to a separator. This function is helpful in some situations where the variable is a list of values seprated by a separator. For example, our analysis require focusing on month and year and we want to separate the column into two new variables.\n\n```crystal\nreshaped.separate(\"quarter\", into: [\"Qtr\",\"Year\"], sep: \"_\").print(\"Separated\", max_rows: 12)\n```\n\nOutput:\n\n```shell\nSeparated: 12 x 4\n     country   growth   Qtr   Year\n 1         A    0.030    q1   2017\n 2         B    0.050    q1   2017\n 3         C    0.010    q1   2017\n 4         A    0.050    q2   2017\n 5         B    0.070    q2   2017\n 6         C    0.020    q2   2017\n 7         A    0.040    q3   2017\n 8         B    0.050    q3   2017\n 9         C    0.010    q3   2017\n10         A    0.030    q4   2017\n11         B    0.020    q4   2017\n12         C    0.040    q4   2017\n```\n\n#### unite()\nThe `unite` function concatenate multiple columns into one.\n\n```crystal\nseparated.unite(\"Quarter\",[\"Qtr\",\"Year\"], sep: \"_\").print(\"United\")\n```\n\nOutput:\n\n```shell\n     country   growth   Quarter\n 1         A    0.030   q1_2017\n 2         B    0.050   q1_2017\n 3         C    0.010   q1_2017\n 4         A    0.050   q2_2017\n 5         B    0.070   q2_2017\n 6         C    0.020   q2_2017\n 7         A    0.040   q3_2017\n 8         B    0.050   q3_2017\n 9         C    0.010   q3_2017\n10         A    0.030   q4_2017\nand 2 more rows\n```\n---\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n```yaml\n   dependencies:\n     crysda:\n       github: naqvis/CrysDA\n```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"crysda\"\n\n# Read tab-delimited data-frame from disk\ndf = Crysda.read_csv(\"data/iris.txt\", separator: '\\t')\n\n# Read data-frame from URL\ndf = Crysda.read_csv(\"http://url/file.csv\")\n\n# Create data-frame in memory\ndf = Crysda.dataframe_of(\"first_name\", \"last_name\", \"age\", \"weight\", \"adult\").values(\n  \"Max\", \"Doe\", 23, 55.8, true,\n  \"Franz\", \"Smith\", 23, 88.3, true,\n  \"Horst\", \"Keanes\", 12, 82.5, false,\n)\n\n# print rows\ndf.print\n\n# print structure of data-frame\ndf.schema\n\n# Subset columns with select/reject\ndf.select(\"last_name\", \"weight\")\ndf.reject(\"weight\", \"age\")\ndf.select(&.ends_with?(\"name\"))\ndf.select? { |v| v.is_a?(Crysda::Int32Col) }\ndf.select? { |v| v.name.starts_with?(\"foo\") }\n\n# Subset rows with filter\ndf.filter { |e| e.[\"age\"] == 23 }\ndf.filter { |e| e.[\"weight\"] > 50 }\ndf.filter { |e| e[\"first_name\"].matching { |e| e.starts_with?(\"Ho\") } }\n\n# Sort your data\ndf.sort_by(\"age\")\n# and add secondary sorting attribute as variadic param\ndf.sort_by(\"age\", \"weight\")\n# sort in descending order\ndf.sort_desc_by(\"age\")\ndf.sort_by { |e| e[\"weight\"] }\n\n# add columns with mutate\n# by adding constant values as new column\ndf.add_column(\"salary_category\") { 3 }\n\n# by doing basic column arithmetics\ndf.add_column(\"age_3y_later\") { |e| e[\"age\"] + 3 }\n\n# Note: dataframes are immutable so we need to (re)assign results to preserve changes.\nnew_df = df.add_column(\"full_name\") { |e| e[\"first_name\"] + \" \" + e[\"last_name\"] }\n\n# Also feel free to mix types\ndf.add_column(\"user_id\") { |e| e[\"last_name\"] + \"_id\" + e.row_num }\n\n# add multiple columns at once\ndf.add_columns(\n  \"age_plus3\".with { |e| e[\"age\"] + 3 },\n  \"initials\".with { |e| e[\"first_name\"].map(&.to_s[0]).concatenate(e[\"last_name\"].map(&.to_s[0])) })\n\n# Summarize\n\n# do simple cross tabulations\ndf.count(\"age\", \"last_name\")\n\n# or calculate single summary statistic\ndf.summarize(\"min_age\") { |e| e[\"age\"].min }\n# or\ndf.summarize(\n  \"min_age\".with { |e| e[\"age\"].min },\n  \"max_age\".with { |e| e[\"age\"].max },\n  \"mean_weight\".with { |e| e[\"weight\"].mean },\n)\n\n# Group operations\ngrouped_df = df.group_by(\"age\") # or provide multiple grouping attributes\ngrouped_df.summarize(\n  \"mean_weight\".with { |e| e[\"weight\"].mean(remove_na: true) },\n  \"num_persons\".with {|e| e.num_row}\n)\n\n# optionally ungroup the data\ngrouped_df.ungroup.print\n\n# Join operations\na = Crysda.dataframe_of(\"name\", \"project_id\").values(\n  \"Max\", \"P1\",\n  \"Max\", \"P2\",\n  \"Tom\", \"P3\"\n)\n\nb = Crysda.dataframe_of(\"title\", \"project_id\").values(\n  \"foo\", \"P1\",\n  \"some_title\", \"P2\",\n  \"alt_title\", \"P2\"\n)\n\na.left_join(b, by: \"project_id\").print\na.outer_join(b).print\n\ndf = Crysda.dataframe_of(\"foo\", \"bar\").values(\n  \"a\", 2,\n  \"b\", 3,\n  \"c\", 4\n)\n\n# join on foo\ndf.inner_join(df, by: \"foo\", suffices: {\"_1\", \"_2\"}).tap do |d|\n  d.print\nend\n\n# again but now join on bar. Join columns are expected to come first\ndf.inner_join(df, \"bar\", {\"_1\", \"_2\"})\n\n# again but now join on nothing\ndf.inner_join(df, [] of String, {\"_1\", \"_2\"})\n\n# Reshape data\ndf = Crysda.dataframe_of(\"person\", \"year\", \"weight\", \"sex\").values(\n  \"max\", 2014, 33.1, \"M\",\n  \"max\", 2015, 32.3, \"M\",\n  \"max\", 2016, nil, \"M\",\n  \"anna\", 2013, 33.5, \"F\",\n  \"anna\", 2014, 37.3, \"F\",\n  \"anna\", 2015, 39.2, \"F\",\n  \"anna\", 2016, 39.9, \"F\"\n)\ndf.schema\ndf.spread(\"year\", \"weight\").print\n\ndf = Crysda.dataframe_of(\"person\", \"property\", \"value\", \"sex\").values(\n  \"max\", \"salary\", \"33.1\", \"M\",\n  \"max\", \"city\", \"London\", \"M\",\n  \"anna\", \"salary\", \"33.5\", \"F\",\n  \"anna\", \"city\", \"Berlin\", \"F\"\n)\nwide_df = df.spread(\"property\", \"value\")\n\nwide_df.gather(\"property\", \"value\", Crysda::ColumnSelector.new { |x| (x.except(\"person\")).and x.starts_with?(\"person\") })\n\nwide_df.gather(\"property\", \"value\", Crysda::ColumnSelector.new { |x| x.except(\"person\") })\n\nwide_df.gather(\"property\", \"value\", Crysda::ColumnSelector.new { |x| x.except(\"person\") })\n  .tap do |wf|\n    wf.print\n    annual_salary = wf.filter { |x| (x[\"person\"] == \"anna\").and (x[\"property\"] == \"salary\") }\n    annual_salary.print\n  end\n```\n**.....**\n\nUnable to cover each and every functionality in this README. So refer to `specs` for more sample usages and API documentation for all available functionality.\n\n## Development\n\nTo run all tests:\n\n```\ncrystal spec\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/naqvis/Crysda/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Ali Naqvi](https://github.com/naqvis) - creator and maintainer\n\n","program":{"html_id":"crysda/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"crysda","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"crysda/Crysda","path":"Crysda.html","kind":"module","full_name":"Crysda","name":"Crysda","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crysda.cr","line_number":16,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda.cr#L16"},{"filename":"src/crysda/builder.cr","line_number":7,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/builder.cr#L7"},{"filename":"src/crysda/columns.cr","line_number":3,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L3"},{"filename":"src/crysda/context.cr","line_number":4,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/context.cr#L4"},{"filename":"src/crysda/dataframe.cr","line_number":3,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L3"},{"filename":"src/crysda/groupdf.cr","line_number":1,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/groupdf.cr#L1"},{"filename":"src/crysda/joins.cr","line_number":1,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/joins.cr#L1"},{"filename":"src/crysda/reshape.cr","line_number":1,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/reshape.cr#L1"},{"filename":"src/crysda/select.cr","line_number":3,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L3"},{"filename":"src/crysda/simpledf.cr","line_number":4,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/simpledf.cr#L4"},{"filename":"src/crysda/utils.cr","line_number":1,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L1"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"MISSING_VALUE","name":"MISSING_VALUE","value":"\"NA\"","doc":null,"summary":null},{"id":"PRINT_MAX_DIGITS","name":"PRINT_MAX_DIGITS","value":"3","doc":null,"summary":null},{"id":"PRINT_MAX_ROWS","name":"PRINT_MAX_ROWS","value":"10","doc":null,"summary":null},{"id":"PRINT_MAX_WIDTH","name":"PRINT_MAX_WIDTH","value":"100","doc":null,"summary":null},{"id":"PRINT_ROW_NUMBERS","name":"PRINT_ROW_NUMBERS","value":"true","doc":null,"summary":null},{"id":"VERSION","name":"VERSION","value":"\"0.1.1\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"CrysDA` is a **{Crys}**tal shard for **{D}**ata **{A}**nalysis. Provides you modern functional-style API for data manipulation to filter, transform, aggregate and reshape tabular data.\nCore of the library is `CrysDA::DataFrame` an immutable data structure interface.\n## Features\n- [X] Filter, transform, aggregate and reshape tabular data\n- [X] Modern, user-friendly and easy-to-learn data-science API\n- [X] Reads from plain and compressed tsv, csv, json, or any delimited format with or without header from local or remote.\n- [X] Supports grouped operations\n- [X] Supports reading data from DB\n- [X] Tables can contain atomic columns (Number, Float, Bool, String) as well as object columns\n- [X] Reshape tables from wide to long and back\n- [X] Table joins (left, right, semi, inner, outer)\n- [X] Cross tabulation\n- [X] Descriptive statistics (mean, min, max, median, ...)\n- [X] Functional API inspired by [dplyr](http://dplyr.tidyverse.org/), [pandas](http://pandas.pydata.org/)\n- [X] many more...","summary":"<p>CrysDA` is a <strong>{Crys}</strong>tal shard for <strong>{D}</strong>ata <strong>{A}</strong>nalysis.</p>","class_methods":[{"id":"bind_cols(left:DataFrame,right:DataFrame,rename_duplicates=true):DataFrame-class-method","html_id":"bind_cols(left:DataFrame,right:DataFrame,rename_duplicates=true):DataFrame-class-method","name":"bind_cols","doc":"Binds dataframes by column. Rows are matched by position, so all data frames must have the same number of rows.","summary":"<p>Binds dataframes by column.</p>","abstract":false,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"DataFrame"},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"rename_duplicates","doc":null,"default_value":"true","external_name":"rename_duplicates","restriction":""}],"args_string":"(left : DataFrame, right : DataFrame, rename_duplicates = <span class=\"n\">true</span>) : DataFrame","args_html":"(left : <a href=\"Crysda/DataFrame.html\">DataFrame</a>, right : <a href=\"Crysda/DataFrame.html\">DataFrame</a>, rename_duplicates = <span class=\"n\">true</span>) : <a href=\"Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda.cr","line_number":129,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda.cr#L129"},"def":{"name":"bind_cols","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"DataFrame"},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"rename_duplicates","doc":null,"default_value":"true","external_name":"rename_duplicates","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"DataFrame.bind_cols(left, right, rename_duplicates)"}},{"id":"bind_rows(*dfs:DataFrame):DataFrame-class-method","html_id":"bind_rows(*dfs:DataFrame):DataFrame-class-method","name":"bind_rows","doc":"Adds new rows. Missing entries are set to null. The output of bind_rows will contain a column if that column appears in any of the inputs.\nWhen row-binding, columns are matched by name, and any missing columns will be filled with NA.\nGrouping will be discarded when binding rows","summary":"<p>Adds new rows.</p>","abstract":false,"args":[{"name":"dfs","doc":null,"default_value":"","external_name":"dfs","restriction":"DataFrame"}],"args_string":"(*dfs : DataFrame) : DataFrame","args_html":"(*dfs : <a href=\"Crysda/DataFrame.html\">DataFrame</a>) : <a href=\"Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda.cr","line_number":124,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda.cr#L124"},"def":{"name":"bind_rows","args":[{"name":"dfs","doc":null,"default_value":"","external_name":"dfs","restriction":"DataFrame"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"DataFrame.bind_rows(dfs.to_a)"}},{"id":"column_types(df:DataFrame):Array(ColSpec)-class-method","html_id":"column_types(df:DataFrame):Array(ColSpec)-class-method","name":"column_types","doc":"return column types as an array of `ColSpec` struct","summary":"<p>return column types as an array of <code><a href=\"Crysda/ColSpec.html\">ColSpec</a></code> struct</p>","abstract":false,"args":[{"name":"df","doc":null,"default_value":"","external_name":"df","restriction":"DataFrame"}],"args_string":"(df : DataFrame) : Array(ColSpec)","args_html":"(df : <a href=\"Crysda/DataFrame.html\">DataFrame</a>) : Array(<a href=\"Crysda/ColSpec.html\">ColSpec</a>)","location":{"filename":"src/crysda/builder.cr","line_number":36,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/builder.cr#L36"},"def":{"name":"column_types","args":[{"name":"df","doc":null,"default_value":"","external_name":"df","restriction":"DataFrame"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(ColSpec)","visibility":"Public","body":"if df.is_a?(GroupedDataFrame)\n  return column_types(df.ungroup)\nend\ndf.cols.map_with_index do |col, idx|\n  ColSpec.new(idx, col.name, get_col_type(col))\nend\n"}},{"id":"dataframe_of(rows:Iterable(Hash(String,Any)))-class-method","html_id":"dataframe_of(rows:Iterable(Hash(String,Any)))-class-method","name":"dataframe_of","doc":"Creates a new data-frame from Array of `{} of String => Any`","summary":"<p>Creates a new data-frame from Array of <code>{} of String => <a href=\"Crysda/Any.html\">Any</a></code></p>","abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Iterable(Hash(String, Any))"}],"args_string":"(rows : Iterable(Hash(String, Any)))","args_html":"(rows : Iterable(Hash(String, <a href=\"Crysda/Any.html\">Any</a>)))","location":{"filename":"src/crysda.cr","line_number":81,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda.cr#L81"},"def":{"name":"dataframe_of","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Iterable(Hash(String, Any))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"DataFrameBuilder.new(rows)"}},{"id":"dataframe_of(rows:Iterable(DataFrameRow))-class-method","html_id":"dataframe_of(rows:Iterable(DataFrameRow))-class-method","name":"dataframe_of","doc":"Creates a new data-frame from array of `DataFrameRow`","summary":"<p>Creates a new data-frame from array of <code><a href=\"Crysda/DataFrameRow.html\">DataFrameRow</a></code></p>","abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Iterable(DataFrameRow)"}],"args_string":"(rows : Iterable(DataFrameRow))","args_html":"(rows : Iterable(<a href=\"Crysda/DataFrameRow.html\">DataFrameRow</a>))","location":{"filename":"src/crysda.cr","line_number":71,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda.cr#L71"},"def":{"name":"dataframe_of","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Iterable(DataFrameRow)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"DataFrameBuilder.new(rows)"}},{"id":"dataframe_of(cols:Iterable(DataCol))-class-method","html_id":"dataframe_of(cols:Iterable(DataCol))-class-method","name":"dataframe_of","doc":"Creates a data-frame from Array of `DataCol`","summary":"<p>Creates a data-frame from Array of <code><a href=\"Crysda/DataCol.html\">DataCol</a></code></p>","abstract":false,"args":[{"name":"cols","doc":null,"default_value":"","external_name":"cols","restriction":"Iterable(DataCol)"}],"args_string":"(cols : Iterable(DataCol))","args_html":"(cols : Iterable(<a href=\"Crysda/DataCol.html\">DataCol</a>))","location":{"filename":"src/crysda.cr","line_number":91,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda.cr#L91"},"def":{"name":"dataframe_of","args":[{"name":"cols","doc":null,"default_value":"","external_name":"cols","restriction":"Iterable(DataCol)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SimpleDataFrame.new(cols)"}},{"id":"dataframe_of(*rows:Hash(String,Any))-class-method","html_id":"dataframe_of(*rows:Hash(String,Any))-class-method","name":"dataframe_of","doc":"Creates a new data-frame from `{} of String => Any`","summary":"<p>Creates a new data-frame from <code>{} of String => <a href=\"Crysda/Any.html\">Any</a></code></p>","abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Hash(String, Any)"}],"args_string":"(*rows : Hash(String, Any))","args_html":"(*rows : Hash(String, <a href=\"Crysda/Any.html\">Any</a>))","location":{"filename":"src/crysda.cr","line_number":76,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda.cr#L76"},"def":{"name":"dataframe_of","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Hash(String, Any)"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dataframe_of(rows.to_a)"}},{"id":"dataframe_of(*header:String)-class-method","html_id":"dataframe_of(*header:String)-class-method","name":"dataframe_of","doc":"Creates a new dataframe in place.\nheader - pass headers as variadic parameter\ncall `values` after this call to pass the values\n```\ndf = dataframe_of(\"quarter\", \"sales\", \"location\").values(1, 300.01, \"london\", 2, 290, \"chicago\")\n```","summary":"<p>Creates a new dataframe in place.</p>","abstract":false,"args":[{"name":"header","doc":null,"default_value":"","external_name":"header","restriction":"String"}],"args_string":"(*header : String)","args_html":"(*header : String)","location":{"filename":"src/crysda.cr","line_number":60,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda.cr#L60"},"def":{"name":"dataframe_of","args":[{"name":"header","doc":null,"default_value":"","external_name":"header","restriction":"String"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"DataFrameBuilder.new(*header)"}},{"id":"dataframe_of(*rows:DataFrameRow)-class-method","html_id":"dataframe_of(*rows:DataFrameRow)-class-method","name":"dataframe_of","doc":"Creates a new data-frame from records encoded as key-value maps\nColumn types will be inferred from the value types","summary":"<p>Creates a new data-frame from records encoded as key-value maps Column types will be inferred from the value types</p>","abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"DataFrameRow"}],"args_string":"(*rows : DataFrameRow)","args_html":"(*rows : <a href=\"Crysda/DataFrameRow.html\">DataFrameRow</a>)","location":{"filename":"src/crysda.cr","line_number":66,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda.cr#L66"},"def":{"name":"dataframe_of","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"DataFrameRow"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dataframe_of(rows.to_a)"}},{"id":"dataframe_of(*cols:DataCol)-class-method","html_id":"dataframe_of(*cols:DataCol)-class-method","name":"dataframe_of","doc":"Create a new data-frame from a list of `DataCol` instances","summary":"<p>Create a new data-frame from a list of <code><a href=\"Crysda/DataCol.html\">DataCol</a></code> instances</p>","abstract":false,"args":[{"name":"cols","doc":null,"default_value":"","external_name":"cols","restriction":"DataCol"}],"args_string":"(*cols : DataCol)","args_html":"(*cols : <a href=\"Crysda/DataCol.html\">DataCol</a>)","location":{"filename":"src/crysda.cr","line_number":86,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda.cr#L86"},"def":{"name":"dataframe_of","args":[{"name":"cols","doc":null,"default_value":"","external_name":"cols","restriction":"DataCol"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SimpleDataFrame.new(*cols)"}},{"id":"empty_df-class-method","html_id":"empty_df-class-method","name":"empty_df","doc":"Creates an empty dataframe with 0 observation","summary":"<p>Creates an empty dataframe with 0 observation</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda.cr","line_number":96,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda.cr#L96"},"def":{"name":"empty_df","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"DataFrame.empty"}},{"id":"from(resultset:DB::ResultSet)-class-method","html_id":"from(resultset:DB::ResultSet)-class-method","name":"from","doc":"build a data-frame from a `DB::ResultSet`","summary":"<p>build a data-frame from a <code>DB::ResultSet</code></p>","abstract":false,"args":[{"name":"resultset","doc":null,"default_value":"","external_name":"resultset","restriction":"DB::ResultSet"}],"args_string":"(resultset : DB::ResultSet)","args_html":"(resultset : DB::ResultSet)","location":{"filename":"src/crysda.cr","line_number":50,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda.cr#L50"},"def":{"name":"from","args":[{"name":"resultset","doc":null,"default_value":"","external_name":"resultset","restriction":"DB::ResultSet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"DataLoader.read_rs(resultset)"}},{"id":"from_json(json:String)-class-method","html_id":"from_json(json:String)-class-method","name":"from_json","doc":"builds a data-frame from a JSON string","summary":"<p>builds a data-frame from a JSON string</p>","abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"String"}],"args_string":"(json : String)","args_html":"(json : String)","location":{"filename":"src/crysda.cr","line_number":45,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda.cr#L45"},"def":{"name":"from_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"DataLoader.read_json(JSON.parse(json))"}},{"id":"read_csv(file:String|IO,separator:Char=&#39;,&#39;,quote_char:Char=&#39;&quot;&#39;,skip_blank_lines:Bool=true,skip:Int32=0,comment:Char?=&#39;#&#39;,header:Int32?=0,na_value:String=MISSING_VALUE,true_values=[&quot;T&quot;,&quot;TRUE&quot;],false_values=[&quot;F&quot;,&quot;FALSE&quot;])-class-method","html_id":"read_csv(file:String|IO,separator:Char=&#39;,&#39;,quote_char:Char=&#39;&quot;&#39;,skip_blank_lines:Bool=true,skip:Int32=0,comment:Char?=&#39;#&#39;,header:Int32?=0,na_value:String=MISSING_VALUE,true_values=[&quot;T&quot;,&quot;TRUE&quot;],false_values=[&quot;F&quot;,&quot;FALSE&quot;])-class-method","name":"read_csv","doc":"reads a comma separated value file/io into a dataframe.\n`file` could be local file path or a URL. It will read compressed(gz, gzip) files.\n`separator` defaults to `,` and can be changed to other separator (e.g `\\t` for tab separated files)\n`skip_blank_lines` defaults to true, will skip all blank lines\n`skip` defaults to 0, will skip this much lines from start of file.\n`comment` character default `#` will ignore all lines starting with this character\n`header` line defaults to 0 (first row), if set to `nil` then column names are auto generated starting with `Col1`.\nif skip_blank_lines and comment are enabled, header will start reading after removing blank and comment lines\n`na_value` defaults to `NA` Strings which should be treated as `Nil`. values matching this param will be treated as `nil`\n`true_values` defaults to `[\"T\",\"TRUE\"]` values to consider as boolean true\n`false_values` defaults to `[\"F\",\"FALSE\"]` values to consider as boolean false","summary":"<p>reads a comma separated value file/io into a dataframe.</p>","abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String | IO"},{"name":"separator","doc":null,"default_value":"','","external_name":"separator","restriction":"Char"},{"name":"quote_char","doc":null,"default_value":"'\"'","external_name":"quote_char","restriction":"Char"},{"name":"skip_blank_lines","doc":null,"default_value":"true","external_name":"skip_blank_lines","restriction":"Bool"},{"name":"skip","doc":null,"default_value":"0","external_name":"skip","restriction":"Int32"},{"name":"comment","doc":null,"default_value":"'#'","external_name":"comment","restriction":"Char | ::Nil"},{"name":"header","doc":null,"default_value":"0","external_name":"header","restriction":"Int32 | ::Nil"},{"name":"na_value","doc":null,"default_value":"MISSING_VALUE","external_name":"na_value","restriction":"String"},{"name":"true_values","doc":null,"default_value":"[\"T\", \"TRUE\"]","external_name":"true_values","restriction":""},{"name":"false_values","doc":null,"default_value":"[\"F\", \"FALSE\"]","external_name":"false_values","restriction":""}],"args_string":"(file : String | IO, separator : Char = <span class=\"s\">&#39;,&#39;</span>, quote_char : Char = <span class=\"s\">&#39;&quot;&#39;</span>, skip_blank_lines : Bool = <span class=\"n\">true</span>, skip : Int32 = <span class=\"n\">0</span>, comment : Char? = <span class=\"s\">&#39;#&#39;</span>, header : Int32? = <span class=\"n\">0</span>, na_value : String = <span class=\"t\">MISSING_VALUE</span>, true_values = [<span class=\"s\">&quot;T&quot;</span>, <span class=\"s\">&quot;TRUE&quot;</span>], false_values = [<span class=\"s\">&quot;F&quot;</span>, <span class=\"s\">&quot;FALSE&quot;</span>])","args_html":"(file : String | IO, separator : Char = <span class=\"s\">&#39;,&#39;</span>, quote_char : Char = <span class=\"s\">&#39;&quot;&#39;</span>, skip_blank_lines : Bool = <span class=\"n\">true</span>, skip : Int32 = <span class=\"n\">0</span>, comment : Char? = <span class=\"s\">&#39;#&#39;</span>, header : Int32? = <span class=\"n\">0</span>, na_value : String = <span class=\"t\">MISSING_VALUE</span>, true_values = [<span class=\"s\">&quot;T&quot;</span>, <span class=\"s\">&quot;TRUE&quot;</span>], false_values = [<span class=\"s\">&quot;F&quot;</span>, <span class=\"s\">&quot;FALSE&quot;</span>])","location":{"filename":"src/crysda.cr","line_number":30,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda.cr#L30"},"def":{"name":"read_csv","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String | IO"},{"name":"separator","doc":null,"default_value":"','","external_name":"separator","restriction":"Char"},{"name":"quote_char","doc":null,"default_value":"'\"'","external_name":"quote_char","restriction":"Char"},{"name":"skip_blank_lines","doc":null,"default_value":"true","external_name":"skip_blank_lines","restriction":"Bool"},{"name":"skip","doc":null,"default_value":"0","external_name":"skip","restriction":"Int32"},{"name":"comment","doc":null,"default_value":"'#'","external_name":"comment","restriction":"Char | ::Nil"},{"name":"header","doc":null,"default_value":"0","external_name":"header","restriction":"Int32 | ::Nil"},{"name":"na_value","doc":null,"default_value":"MISSING_VALUE","external_name":"na_value","restriction":"String"},{"name":"true_values","doc":null,"default_value":"[\"T\", \"TRUE\"]","external_name":"true_values","restriction":""},{"name":"false_values","doc":null,"default_value":"[\"F\", \"FALSE\"]","external_name":"false_values","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"DataLoader.read_csv(file, separator, quote_char, skip_blank_lines, skip, comment, header, na_value, true_values, false_values)"}},{"id":"read_json(file:String|IO)-class-method","html_id":"read_json(file:String|IO)-class-method","name":"read_json","doc":"reads a json file or URL","summary":"<p>reads a json file or URL</p>","abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String | IO"}],"args_string":"(file : String | IO)","args_html":"(file : String | IO)","location":{"filename":"src/crysda.cr","line_number":40,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda.cr#L40"},"def":{"name":"read_json","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String | IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"DataLoader.read_json(file)"}},{"id":"selector(&block:ColumnSelector)-class-method","html_id":"selector(&block:ColumnSelector)-class-method","name":"selector","doc":"helper method to return the block as `Proc`. Used when doing select with multiple criteria.\nKind of workaround as Crystal doesn't allow variadic blocks and `Proc` definition requires\ncomplete signature like `Crysda::ColumnSelector.new{|e| ....}`\nso instead of\n```\ndf.select(\n  Crysda::ColumnSelector.new { |s| ... },\n  Crysda::ColumnSelector.new { |s| ... }\n)\n```\nOne can simply use this helper\n```\ndf.select(\n Crysda.selector{|e| ....},\n Crysda.selector{|e| ....},\n)\n```","summary":"<p>helper method to return the block as <code>Proc</code>.</p>","abstract":false,"args":[],"args_string":"(&block : ColumnSelector)","args_html":"(&block : <a href=\"Crysda/ColumnSelector.html\">ColumnSelector</a>)","location":{"filename":"src/crysda.cr","line_number":117,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda.cr#L117"},"def":{"name":"selector","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"ColumnSelector"},"return_type":"","visibility":"Public","body":"block"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"crysda/Crysda/AggFunc","path":"Crysda/AggFunc.html","kind":"struct","full_name":"Crysda::AggFunc","name":"AggFunc","abstract":false,"superclass":{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crysda/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/columns.cr","line_number":7,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L7"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(value:SumFormula,suffix:String?=nil)-class-method","html_id":"new(value:SumFormula,suffix:String?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"SumFormula"},{"name":"suffix","doc":null,"default_value":"nil","external_name":"suffix","restriction":"String | ::Nil"}],"args_string":"(value : SumFormula, suffix : String? = <span class=\"n\">nil</span>)","args_html":"(value : <a href=\"../Crysda/SumFormula.html\">SumFormula</a>, suffix : String? = <span class=\"n\">nil</span>)","location":{"filename":"src/crysda/columns.cr","line_number":7,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L7"},"def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"SumFormula"},{"name":"suffix","doc":null,"default_value":"nil","external_name":"suffix","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value, suffix)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/columns.cr","line_number":7,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L7"},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@value.clone, @suffix.clone)"}},{"id":"copy_with(value_value=@value,suffix_suffix=@suffix)-instance-method","html_id":"copy_with(value_value=@value,suffix_suffix=@suffix)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_value","doc":null,"default_value":"@value","external_name":"value","restriction":""},{"name":"_suffix","doc":null,"default_value":"@suffix","external_name":"suffix","restriction":""}],"args_string":"(value _value = @value, suffix _suffix = @suffix)","args_html":"(value _value = @value, suffix _suffix = @suffix)","location":{"filename":"src/crysda/columns.cr","line_number":7,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L7"},"def":{"name":"copy_with","args":[{"name":"_value","doc":null,"default_value":"@value","external_name":"value","restriction":""},{"name":"_suffix","doc":null,"default_value":"@suffix","external_name":"suffix","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(_value, _suffix)"}},{"id":"suffix:String?-instance-method","html_id":"suffix:String?-instance-method","name":"suffix","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : String?","location":null,"def":{"name":"suffix","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@suffix"}},{"id":"value:SumFormula-instance-method","html_id":"value:SumFormula-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : SumFormula","args_html":" : <a href=\"../Crysda/SumFormula.html\">SumFormula</a>","location":null,"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SumFormula","visibility":"Public","body":"@value"}}],"macros":[],"types":[]},{"html_id":"crysda/Crysda/AggFuncs","path":"Crysda/AggFuncs.html","kind":"module","full_name":"Crysda::AggFuncs","name":"AggFuncs","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crysda/columns.cr","line_number":34,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L34"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"crysda/Crysda/AggFuncs","kind":"module","full_name":"Crysda::AggFuncs","name":"AggFuncs"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"Helper module to provide common aggregate methods to be used along `DataFrame#summarize_at`","summary":"<p>Helper module to provide common aggregate methods to be used along <code><a href=\"../Crysda/DataFrame.html#summarize_at(&col_sel:ColumnSelector):DataFrame-instance-method\">DataFrame#summarize_at</a></code></p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"mean-instance-method","html_id":"mean-instance-method","name":"mean","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/columns.cr","line_number":37,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L37"},"def":{"name":"mean","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AggFunc.new(SumFormula.new do |c|\n  c.mean\nend, \"mean\")"}},{"id":"median-instance-method","html_id":"median-instance-method","name":"median","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/columns.cr","line_number":41,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L41"},"def":{"name":"median","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AggFunc.new(SumFormula.new do |c|\n  c.median\nend, \"median\")"}},{"id":"n-instance-method","html_id":"n-instance-method","name":"n","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/columns.cr","line_number":49,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L49"},"def":{"name":"n","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AggFunc.new(SumFormula.new do |c|\n  c.size\nend, \"n\")"}},{"id":"na-instance-method","html_id":"na-instance-method","name":"na","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/columns.cr","line_number":53,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L53"},"def":{"name":"na","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AggFunc.new(SumFormula.new do |c|\n  c.is_na.filter do |_|\n    true\n  end.size\nend, \"na\")"}},{"id":"sd-instance-method","html_id":"sd-instance-method","name":"sd","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/columns.cr","line_number":45,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L45"},"def":{"name":"sd","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AggFunc.new(SumFormula.new do |c|\n  c.sd\nend, \"sd\")"}}],"macros":[],"types":[]},{"html_id":"crysda/Crysda/Any","path":"Crysda/Any.html","kind":"alias","full_name":"Crysda::Any","name":"Any","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crysda/context.cr","line_number":54,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/context.cr#L54"}],"repository_name":"crysda","program":false,"enum":false,"alias":true,"aliased":"(Bool | Crysda::CustomColumnValue | Float32 | Float64 | Int32 | Int64 | JSON::Any | String | Time | UUID | Nil)","aliased_html":"Bool | <a href=\"../Crysda/CustomColumnValue.html\">Crysda::CustomColumnValue</a> | Float32 | Float64 | Int32 | Int64 | JSON::Any | String | Time | UUID | Nil","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crysda/Crysda/AnyCol","path":"Crysda/AnyCol.html","kind":"struct","full_name":"Crysda::AnyCol","name":"AnyCol","abstract":false,"superclass":{"html_id":"crysda/Crysda/DataCol","kind":"struct","full_name":"Crysda::DataCol","name":"DataCol"},"ancestors":[{"html_id":"crysda/Crysda/DataCol","kind":"struct","full_name":"Crysda::DataCol","name":"DataCol"},{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crysda/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/columns.cr","line_number":765,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L765"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"Column for types other than implemented types and part of `Any` union type.","summary":"<p>Column for types other than implemented types and part of <code><a href=\"../Crysda/Any.html\">Any</a></code> union type.</p>","class_methods":[],"constructors":[{"id":"new(name:String,val:Array(Any))-class-method","html_id":"new(name:String,val:Array(Any))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Array(Any)"}],"args_string":"(name : String, val : Array(Any))","args_html":"(name : String, val : Array(<a href=\"../Crysda/Any.html\">Any</a>))","location":{"filename":"src/crysda/columns.cr","line_number":766,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L766"},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, val)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"compare(left:Int32,right:Int32,null_last=true):Int32-instance-method","html_id":"compare(left:Int32,right:Int32,null_last=true):Int32-instance-method","name":"compare","doc":null,"summary":null,"abstract":false,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int32"},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int32"},{"name":"null_last","doc":null,"default_value":"true","external_name":"null_last","restriction":""}],"args_string":"(left : Int32, right : Int32, null_last = <span class=\"n\">true</span>) : Int32","args_html":"(left : Int32, right : Int32, null_last = <span class=\"n\">true</span>) : Int32","location":{"filename":"src/crysda/columns.cr","line_number":775,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L775"},"def":{"name":"compare","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int32"},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int32"},{"name":"null_last","doc":null,"default_value":"true","external_name":"null_last","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"a = @values[left]\nb = @values[right]\ncase\nwhen a == b\n  0\nwhen a.nil?\n  null_last ? 1 : -1\nwhen b.nil?\n  null_last ? -1 : 1\nelse\n  (  a != b) ? (  a) ? -1 : 1 : 0\nend\n"}},{"id":"values:Array(Any)-instance-method","html_id":"values:Array(Any)-instance-method","name":"values","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Any)","args_html":" : Array(<a href=\"../Crysda/Any.html\">Any</a>)","location":{"filename":"src/crysda/columns.cr","line_number":771,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L771"},"def":{"name":"values","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Any)","visibility":"Public","body":"@values"}}],"macros":[],"types":[]},{"html_id":"crysda/Crysda/AnyVal","path":"Crysda/AnyVal.html","kind":"struct","full_name":"Crysda::AnyVal","name":"AnyVal","abstract":false,"superclass":{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crysda/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/utils.cr","line_number":3,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L3"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"Wrapper around `Any` and provide convenient methods like `as_xxx` to access the value in specific format.","summary":"<p>Wrapper around <code><a href=\"../Crysda/Any.html\">Any</a></code> and provide convenient methods like <code>as_xxx</code> to access the value in specific format.</p>","class_methods":[{"id":"[](val:Any|DataFrame)-class-method","html_id":"[](val:Any|DataFrame)-class-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Any | DataFrame"}],"args_string":"(val : Any | DataFrame)","args_html":"(val : <a href=\"../Crysda/Any.html\">Any</a> | <a href=\"../Crysda/DataFrame.html\">DataFrame</a>)","location":{"filename":"src/crysda/utils.cr","line_number":9,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L9"},"def":{"name":"[]","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Any | DataFrame"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(val)"}}],"constructors":[{"id":"new(raw)-class-method","html_id":"new(raw)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":""}],"args_string":"(raw)","args_html":"(raw)","location":{"filename":"src/crysda/utils.cr","line_number":6,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L6"},"def":{"name":"new","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(raw)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(other:self)-instance-method","html_id":"==(other:self)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","args_html":"(other : <span class=\"k\">self</span>)","location":null,"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @raw == (other.@raw)\nelse\n  return false\nend\ntrue\n"}},{"id":"as_bool:Bool-instance-method","html_id":"as_bool:Bool-instance-method","name":"as_bool","doc":"Checks that the underlying value is `Bool`, and returns its value.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>Bool</code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/crysda/utils.cr","line_number":15,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L15"},"def":{"name":"as_bool","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@raw.as(Bool)"}},{"id":"as_bool?:Bool?-instance-method","html_id":"as_bool?:Bool?-instance-method","name":"as_bool?","doc":"Checks that the underlying value is `Bool`, and returns its value.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code>Bool</code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : Bool?","args_html":" : Bool?","location":{"filename":"src/crysda/utils.cr","line_number":21,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L21"},"def":{"name":"as_bool?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool | ::Nil","visibility":"Public","body":"if @raw.is_a?(Bool)\n  as_bool\nend"}},{"id":"as_df:DataFrame-instance-method","html_id":"as_df:DataFrame-instance-method","name":"as_df","doc":"Checks that the underlying value is `DataFrame`, and returns its value.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code><a href=\"../Crysda/DataFrame.html\">DataFrame</a></code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : DataFrame","args_html":" : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/utils.cr","line_number":87,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L87"},"def":{"name":"as_df","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"@raw.as(DataFrame)"}},{"id":"as_df?:DataFrame?-instance-method","html_id":"as_df?:DataFrame?-instance-method","name":"as_df?","doc":"Checks that the underlying value is `DataFrame`, and returns its value.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code><a href=\"../Crysda/DataFrame.html\">DataFrame</a></code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : DataFrame?","args_html":" : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>?","location":{"filename":"src/crysda/utils.cr","line_number":93,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L93"},"def":{"name":"as_df?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame | ::Nil","visibility":"Public","body":"if @raw.is_a?(DataFrame)\n  as_s\nend"}},{"id":"as_f:Float64-instance-method","html_id":"as_f:Float64-instance-method","name":"as_f","doc":"Checks that the underlying value is `Float`, and returns its value as an `Float64`.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>Float</code>, and returns its value as an <code>Float64</code>.</p>","abstract":false,"args":[],"args_string":" : Float64","args_html":" : Float64","location":{"filename":"src/crysda/utils.cr","line_number":51,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L51"},"def":{"name":"as_f","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@raw.as(Float64)"}},{"id":"as_f32:Float32-instance-method","html_id":"as_f32:Float32-instance-method","name":"as_f32","doc":"Checks that the underlying value is `Float`, and returns its value as an `Float32`.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>Float</code>, and returns its value as an <code>Float32</code>.</p>","abstract":false,"args":[],"args_string":" : Float32","args_html":" : Float32","location":{"filename":"src/crysda/utils.cr","line_number":63,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L63"},"def":{"name":"as_f32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"(@raw.as(Float)).to_f32"}},{"id":"as_f32?:Float32?-instance-method","html_id":"as_f32?:Float32?-instance-method","name":"as_f32?","doc":"Checks that the underlying value is `Float`, and returns its value as an `Float32`.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code>Float</code>, and returns its value as an <code>Float32</code>.</p>","abstract":false,"args":[],"args_string":" : Float32?","args_html":" : Float32?","location":{"filename":"src/crysda/utils.cr","line_number":69,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L69"},"def":{"name":"as_f32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32 | ::Nil","visibility":"Public","body":"if @raw.is_a?(Float)\n  as_f32\nend"}},{"id":"as_f?:Float64?-instance-method","html_id":"as_f?:Float64?-instance-method","name":"as_f?","doc":"Checks that the underlying value is `Float`, and returns its value as an `Float64`.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code>Float</code>, and returns its value as an <code>Float64</code>.</p>","abstract":false,"args":[],"args_string":" : Float64?","args_html":" : Float64?","location":{"filename":"src/crysda/utils.cr","line_number":57,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L57"},"def":{"name":"as_f?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64 | ::Nil","visibility":"Public","body":"@raw.as?(Float64)"}},{"id":"as_i:Int32-instance-method","html_id":"as_i:Int32-instance-method","name":"as_i","doc":"Checks that the underlying value is `Int`, and returns its value as an `Int32`.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>Int</code>, and returns its value as an <code>Int32</code>.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/crysda/utils.cr","line_number":27,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L27"},"def":{"name":"as_i","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"(@raw.as(Int)).to_i"}},{"id":"as_i64:Int64-instance-method","html_id":"as_i64:Int64-instance-method","name":"as_i64","doc":"Checks that the underlying value is `Int`, and returns its value as an `Int64`.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>Int</code>, and returns its value as an <code>Int64</code>.</p>","abstract":false,"args":[],"args_string":" : Int64","args_html":" : Int64","location":{"filename":"src/crysda/utils.cr","line_number":39,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L39"},"def":{"name":"as_i64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"(@raw.as(Int)).to_i64"}},{"id":"as_i64?:Int64?-instance-method","html_id":"as_i64?:Int64?-instance-method","name":"as_i64?","doc":"Checks that the underlying value is `Int`, and returns its value as an `Int64`.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code>Int</code>, and returns its value as an <code>Int64</code>.</p>","abstract":false,"args":[],"args_string":" : Int64?","args_html":" : Int64?","location":{"filename":"src/crysda/utils.cr","line_number":45,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L45"},"def":{"name":"as_i64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64 | ::Nil","visibility":"Public","body":"if @raw.is_a?(Int64)\n  as_i64\nend"}},{"id":"as_i?:Int32?-instance-method","html_id":"as_i?:Int32?-instance-method","name":"as_i?","doc":"Checks that the underlying value is `Int`, and returns its value as an `Int32`.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code>Int</code>, and returns its value as an <code>Int32</code>.</p>","abstract":false,"args":[],"args_string":" : Int32?","args_html":" : Int32?","location":{"filename":"src/crysda/utils.cr","line_number":33,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L33"},"def":{"name":"as_i?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"if @raw.is_a?(Int)\n  as_i\nend"}},{"id":"as_nil:Nil-instance-method","html_id":"as_nil:Nil-instance-method","name":"as_nil","doc":"Checks that the underlying value is `Nil`, and returns `nil`.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>Nil</code>, and returns <code>nil</code>.</p>","abstract":false,"args":[],"args_string":" : Nil","args_html":" : Nil","location":{"filename":"src/crysda/utils.cr","line_number":99,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L99"},"def":{"name":"as_nil","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@raw.as(Nil)"}},{"id":"as_s:String-instance-method","html_id":"as_s:String-instance-method","name":"as_s","doc":"Checks that the underlying value is `String`, and returns its value.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>String</code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/crysda/utils.cr","line_number":75,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L75"},"def":{"name":"as_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@raw.as(String)"}},{"id":"as_s?:String?-instance-method","html_id":"as_s?:String?-instance-method","name":"as_s?","doc":"Checks that the underlying value is `String`, and returns its value.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code>String</code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : String?","args_html":" : String?","location":{"filename":"src/crysda/utils.cr","line_number":81,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L81"},"def":{"name":"as_s?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"if @raw.is_a?(String)\n  as_s\nend"}},{"id":"as_t:Time-instance-method","html_id":"as_t:Time-instance-method","name":"as_t","doc":"Checks that the underlying value is `Time`, and returns its value.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>Time</code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : Time","args_html":" : Time","location":{"filename":"src/crysda/utils.cr","line_number":105,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L105"},"def":{"name":"as_t","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"@raw.as(Time)"}},{"id":"as_t?:Time?-instance-method","html_id":"as_t?:Time?-instance-method","name":"as_t?","doc":"Checks that the underlying value is `Time`, and returns its value.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code>Time</code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : Time?","args_html":" : Time?","location":{"filename":"src/crysda/utils.cr","line_number":111,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L111"},"def":{"name":"as_t?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time | ::Nil","visibility":"Public","body":"if @raw.is_a?(Time)\n  as_s\nend"}},{"id":"hash(hasher)-instance-method","html_id":"hash(hasher)-instance-method","name":"hash","doc":"See `Object#hash(hasher)`","summary":"<p>See <code>Object#hash(hasher)</code></p>","abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","args_html":"(hasher)","location":null,"def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hasher = @raw.hash(hasher)\nhasher\n"}},{"id":"raw:Any|DataFrame-instance-method","html_id":"raw:Any|DataFrame-instance-method","name":"raw","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Any | DataFrame","args_html":" : <a href=\"../Crysda/Any.html\">Any</a> | <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/utils.cr","line_number":4,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L4"},"def":{"name":"raw","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any | DataFrame","visibility":"Public","body":"@raw"}},{"id":"to_s(io:IO):Nil-instance-method","html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Same as `#inspect(io)`.","summary":"<p>Same as <code>#inspect(io)</code>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/crysda/utils.cr","line_number":119,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L119"},"def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"io << to_s"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":"Returns a string representation of this object.\n\nDescendants must usually **not** override this method. Instead,\nthey must override `to_s(io)`, which must append to the given\nIO object.","summary":"<p>Returns a string representation of this object.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/utils.cr","line_number":115,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L115"},"def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw.nil? ? MISSING_VALUE : @raw.to_s"}}],"macros":[{"id":"method_missing(call)-macro","html_id":"method_missing(call)-macro","name":"method_missing","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","location":{"filename":"src/crysda/utils.cr","line_number":124,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L124"},"def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      @raw.\n{{ call }}\n\n    \n"}}],"types":[]},{"html_id":"crysda/Crysda/BoolCol","path":"Crysda/BoolCol.html","kind":"struct","full_name":"Crysda::BoolCol","name":"BoolCol","abstract":false,"superclass":{"html_id":"crysda/Crysda/DataCol","kind":"struct","full_name":"Crysda::DataCol","name":"DataCol"},"ancestors":[{"html_id":"crysda/Crysda/DataCol","kind":"struct","full_name":"Crysda::DataCol","name":"DataCol"},{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crysda/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/columns.cr","line_number":741,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L741"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"Column for Bool types","summary":"<p>Column for Bool types</p>","class_methods":[],"constructors":[{"id":"new(name:String,val:Array(Bool?))-class-method","html_id":"new(name:String,val:Array(Bool?))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Array(Bool | ::Nil)"}],"args_string":"(name : String, val : Array(Bool?))","args_html":"(name : String, val : Array(Bool?))","location":{"filename":"src/crysda/columns.cr","line_number":742,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L742"},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Array(Bool | ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, val)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"compare(left:Int32,right:Int32,null_last=true):Int32-instance-method","html_id":"compare(left:Int32,right:Int32,null_last=true):Int32-instance-method","name":"compare","doc":null,"summary":null,"abstract":false,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int32"},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int32"},{"name":"null_last","doc":null,"default_value":"true","external_name":"null_last","restriction":""}],"args_string":"(left : Int32, right : Int32, null_last = <span class=\"n\">true</span>) : Int32","args_html":"(left : Int32, right : Int32, null_last = <span class=\"n\">true</span>) : Int32","location":{"filename":"src/crysda/columns.cr","line_number":751,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L751"},"def":{"name":"compare","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int32"},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int32"},{"name":"null_last","doc":null,"default_value":"true","external_name":"null_last","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"a = @values[left]\nb = @values[right]\ncase\nwhen a == b\n  0\nwhen a.nil?\n  null_last ? 1 : -1\nwhen b.nil?\n  null_last ? -1 : 1\nelse\n  (  a != b) ? (  a) ? -1 : 1 : 0\nend\n"}},{"id":"values:Array(Bool?)-instance-method","html_id":"values:Array(Bool?)-instance-method","name":"values","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Bool?)","args_html":" : Array(Bool?)","location":{"filename":"src/crysda/columns.cr","line_number":747,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L747"},"def":{"name":"values","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Bool | ::Nil)","visibility":"Public","body":"@values"}}],"macros":[],"types":[]},{"html_id":"crysda/Crysda/ColNames","path":"Crysda/ColNames.html","kind":"struct","full_name":"Crysda::ColNames","name":"ColNames","abstract":false,"superclass":{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crysda/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/select.cr","line_number":42,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L42"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"Struct which is passed to block and provide helpful methods which can be invoked to perform filtering","summary":"<p>Struct which is passed to block and provide helpful methods which can be invoked to perform filtering</p>","class_methods":[],"constructors":[{"id":"new(names)-class-method","html_id":"new(names)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"names","doc":null,"default_value":"","external_name":"names","restriction":""}],"args_string":"(names)","args_html":"(names)","location":{"filename":"src/crysda/select.cr","line_number":45,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L45"},"def":{"name":"new","args":[{"name":"names","doc":null,"default_value":"","external_name":"names","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(names)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"=~(regex:String)-instance-method","html_id":"=~(regex:String)-instance-method","name":"=~","doc":null,"summary":null,"abstract":false,"args":[{"name":"regex","doc":null,"default_value":"","external_name":"regex","restriction":"String"}],"args_string":"(regex : String)","args_html":"(regex : String)","location":{"filename":"src/crysda/select.cr","line_number":48,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L48"},"def":{"name":"=~","args":[{"name":"regex","doc":null,"default_value":"","external_name":"regex","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"matches(regex)"}},{"id":"=~(regex:Regex)-instance-method","html_id":"=~(regex:Regex)-instance-method","name":"=~","doc":null,"summary":null,"abstract":false,"args":[{"name":"regex","doc":null,"default_value":"","external_name":"regex","restriction":"Regex"}],"args_string":"(regex : Regex)","args_html":"(regex : Regex)","location":{"filename":"src/crysda/select.cr","line_number":52,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L52"},"def":{"name":"=~","args":[{"name":"regex","doc":null,"default_value":"","external_name":"regex","restriction":"Regex"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"matches(regex)"}},{"id":"[](from:String,to:String)-instance-method","html_id":"[](from:String,to:String)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"String"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"String"}],"args_string":"(from : String, to : String)","args_html":"(from : String, to : String)","location":{"filename":"src/crysda/select.cr","line_number":84,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L84"},"def":{"name":"[]","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"String"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"rstart = (names.index(from)) || (raise(ColumnNotFoundException.new(from)))\nrend = (names.index(to)) || (raise(ColumnNotFoundException.new(to)))\nrange = names[rstart..rend]\nnames.map do |n|\n  range.includes?(n)\nend.false_as_nil\n"}},{"id":"[](range:Range(String?,String?))-instance-method","html_id":"[](range:Range(String?,String?))-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(String | ::Nil, String | ::Nil)"}],"args_string":"(range : Range(String?, String?))","args_html":"(range : Range(String?, String?))","location":{"filename":"src/crysda/select.cr","line_number":91,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L91"},"def":{"name":"[]","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range(String | ::Nil, String | ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begc = range.begin\nif begc.nil?\n  start_index = 0\nelse\n  start_index = (names.index(begc)) || (raise(ColumnNotFoundException.new(begc)))\nend\nendc = range.end\nif endc.nil?\n  end_index = names.size - start_index\nelse\n  end_index = (names.index(endc)) || (raise(ColumnNotFoundException.new(endc)))\n  if range.excludes_end?\n    end_index = end_index - 1\n  end\nend\ncols = names[start_index..end_index]\nnames.map do |n|\n  cols.includes?(n)\nend.false_as_nil\n"}},{"id":"all-instance-method","html_id":"all-instance-method","name":"all","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/select.cr","line_number":80,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L80"},"def":{"name":"all","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Array(Bool).new(names.size, true)"}},{"id":"ends_with?(prefix:String)-instance-method","html_id":"ends_with?(prefix:String)-instance-method","name":"ends_with?","doc":null,"summary":null,"abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":"String"}],"args_string":"(prefix : String)","args_html":"(prefix : String)","location":{"filename":"src/crysda/select.cr","line_number":68,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L68"},"def":{"name":"ends_with?","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"names.map do |n|\n  n.ends_with?(prefix)\nend.false_as_nil"}},{"id":"except(cols:Array(String))-instance-method","html_id":"except(cols:Array(String))-instance-method","name":"except","doc":null,"summary":null,"abstract":false,"args":[{"name":"cols","doc":null,"default_value":"","external_name":"cols","restriction":"Array(String)"}],"args_string":"(cols : Array(String))","args_html":"(cols : Array(String))","location":{"filename":"src/crysda/select.cr","line_number":118,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L118"},"def":{"name":"except","args":[{"name":"cols","doc":null,"default_value":"","external_name":"cols","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if cols.size == 0\n  names.map do |_|\n    true\n  end\nelse\n  names.map do |n|\n    !(cols.includes?(n))\n  end.true_as_nil\nend"}},{"id":"except(*cols:String)-instance-method","html_id":"except(*cols:String)-instance-method","name":"except","doc":"normally, there should be no need for them. We just do positive selection and either use\n`reject` or `select`.\nBUT: verbs like `gather` still need to support negative selection\nPerforms a negative selection by selecting all columns except the listed ones.","summary":"<p>normally, there should be no need for them.</p>","abstract":false,"args":[{"name":"cols","doc":null,"default_value":"","external_name":"cols","restriction":"String"}],"args_string":"(*cols : String)","args_html":"(*cols : String)","location":{"filename":"src/crysda/select.cr","line_number":114,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L114"},"def":{"name":"except","args":[{"name":"cols","doc":null,"default_value":"","external_name":"cols","restriction":"String"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"except(cols.to_a)"}},{"id":"except(&selector:ColumnSelector)-instance-method","html_id":"except(&selector:ColumnSelector)-instance-method","name":"except","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&selector : ColumnSelector)","args_html":"(&selector : <a href=\"../Crysda/ColumnSelector.html\">ColumnSelector</a>)","location":{"filename":"src/crysda/select.cr","line_number":126,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L126"},"def":{"name":"except","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"selector","doc":null,"default_value":"","external_name":"selector","restriction":"ColumnSelector"},"return_type":"","visibility":"Public","body":"(selector.call(self)).not"}},{"id":"list_of(col_names:Array(String))-instance-method","html_id":"list_of(col_names:Array(String))-instance-method","name":"list_of","doc":null,"summary":null,"abstract":false,"args":[{"name":"col_names","doc":null,"default_value":"","external_name":"col_names","restriction":"Array(String)"}],"args_string":"(col_names : Array(String))","args_html":"(col_names : Array(String))","location":{"filename":"src/crysda/select.cr","line_number":76,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L76"},"def":{"name":"list_of","args":[{"name":"col_names","doc":null,"default_value":"","external_name":"col_names","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"names.map do |n|\n  col_names.includes?(n)\nend.false_as_nil"}},{"id":"list_of(*col_names:String)-instance-method","html_id":"list_of(*col_names:String)-instance-method","name":"list_of","doc":null,"summary":null,"abstract":false,"args":[{"name":"col_names","doc":null,"default_value":"","external_name":"col_names","restriction":"String"}],"args_string":"(*col_names : String)","args_html":"(*col_names : String)","location":{"filename":"src/crysda/select.cr","line_number":72,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L72"},"def":{"name":"list_of","args":[{"name":"col_names","doc":null,"default_value":"","external_name":"col_names","restriction":"String"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"names.map do |n|\n  n.in?(col_names)\nend.false_as_nil"}},{"id":"matches(regex:String)-instance-method","html_id":"matches(regex:String)-instance-method","name":"matches","doc":null,"summary":null,"abstract":false,"args":[{"name":"regex","doc":null,"default_value":"","external_name":"regex","restriction":"String"}],"args_string":"(regex : String)","args_html":"(regex : String)","location":{"filename":"src/crysda/select.cr","line_number":56,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L56"},"def":{"name":"matches","args":[{"name":"regex","doc":null,"default_value":"","external_name":"regex","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"matches(Regex.new(regex))"}},{"id":"matches(regex:Regex)-instance-method","html_id":"matches(regex:Regex)-instance-method","name":"matches","doc":null,"summary":null,"abstract":false,"args":[{"name":"regex","doc":null,"default_value":"","external_name":"regex","restriction":"Regex"}],"args_string":"(regex : Regex)","args_html":"(regex : Regex)","location":{"filename":"src/crysda/select.cr","line_number":60,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L60"},"def":{"name":"matches","args":[{"name":"regex","doc":null,"default_value":"","external_name":"regex","restriction":"Regex"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"names.map do |n|\n  !(  n =~ regex).nil?\nend.false_as_nil"}},{"id":"names:Array(String)-instance-method","html_id":"names:Array(String)-instance-method","name":"names","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","args_html":" : Array(String)","location":{"filename":"src/crysda/select.cr","line_number":43,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L43"},"def":{"name":"names","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@names"}},{"id":"starts_with?(prefix:String)-instance-method","html_id":"starts_with?(prefix:String)-instance-method","name":"starts_with?","doc":null,"summary":null,"abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":"String"}],"args_string":"(prefix : String)","args_html":"(prefix : String)","location":{"filename":"src/crysda/select.cr","line_number":64,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L64"},"def":{"name":"starts_with?","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"names.map do |n|\n  n.starts_with?(prefix)\nend.false_as_nil"}}],"macros":[],"types":[]},{"html_id":"crysda/Crysda/ColSpec","path":"Crysda/ColSpec.html","kind":"struct","full_name":"Crysda::ColSpec","name":"ColSpec","abstract":false,"superclass":{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crysda/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/columns.cr","line_number":8,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L8"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(pos:Int32,name:String,type:String)-class-method","html_id":"new(pos:Int32,name:String,type:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":"Int32"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"}],"args_string":"(pos : Int32, name : String, type : String)","args_html":"(pos : Int32, name : String, type : String)","location":{"filename":"src/crysda/columns.cr","line_number":8,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L8"},"def":{"name":"new","args":[{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":"Int32"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(pos, name, type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/columns.cr","line_number":8,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L8"},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@pos.clone, @name.clone, @type.clone)"}},{"id":"copy_with(pos_pos=@pos,name_name=@name,type_type=@type)-instance-method","html_id":"copy_with(pos_pos=@pos,name_name=@name,type_type=@type)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_pos","doc":null,"default_value":"@pos","external_name":"pos","restriction":""},{"name":"_name","doc":null,"default_value":"@name","external_name":"name","restriction":""},{"name":"_type","doc":null,"default_value":"@type","external_name":"type","restriction":""}],"args_string":"(pos _pos = @pos, name _name = @name, type _type = @type)","args_html":"(pos _pos = @pos, name _name = @name, type _type = @type)","location":{"filename":"src/crysda/columns.cr","line_number":8,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L8"},"def":{"name":"copy_with","args":[{"name":"_pos","doc":null,"default_value":"@pos","external_name":"pos","restriction":""},{"name":"_name","doc":null,"default_value":"@name","external_name":"name","restriction":""},{"name":"_type","doc":null,"default_value":"@type","external_name":"type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(_pos, _name, _type)"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"pos:Int32-instance-method","html_id":"pos:Int32-instance-method","name":"pos","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":null,"def":{"name":"pos","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@pos"}},{"id":"type:String-instance-method","html_id":"type:String-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":null,"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@type"}}],"macros":[],"types":[]},{"html_id":"crysda/Crysda/ColumnException","path":"Crysda/ColumnException.html","kind":"class","full_name":"Crysda::ColumnException","name":"ColumnException","abstract":false,"superclass":{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crysda/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/columns.cr","line_number":12,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L12"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crysda/Crysda/ColumnFormula","path":"Crysda/ColumnFormula.html","kind":"struct","full_name":"Crysda::ColumnFormula","name":"ColumnFormula","abstract":false,"superclass":{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crysda/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/columns.cr","line_number":6,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L6"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:String,expression:TableExpression)-class-method","html_id":"new(name:String,expression:TableExpression)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"expression","doc":null,"default_value":"","external_name":"expression","restriction":"TableExpression"}],"args_string":"(name : String, expression : TableExpression)","args_html":"(name : String, expression : <a href=\"../Crysda/TableExpression.html\">TableExpression</a>)","location":{"filename":"src/crysda/columns.cr","line_number":6,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L6"},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"expression","doc":null,"default_value":"","external_name":"expression","restriction":"TableExpression"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, expression)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/columns.cr","line_number":6,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L6"},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@name.clone, @expression.clone)"}},{"id":"copy_with(name_name=@name,expression_expression=@expression)-instance-method","html_id":"copy_with(name_name=@name,expression_expression=@expression)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_name","doc":null,"default_value":"@name","external_name":"name","restriction":""},{"name":"_expression","doc":null,"default_value":"@expression","external_name":"expression","restriction":""}],"args_string":"(name _name = @name, expression _expression = @expression)","args_html":"(name _name = @name, expression _expression = @expression)","location":{"filename":"src/crysda/columns.cr","line_number":6,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L6"},"def":{"name":"copy_with","args":[{"name":"_name","doc":null,"default_value":"@name","external_name":"name","restriction":""},{"name":"_expression","doc":null,"default_value":"@expression","external_name":"expression","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(_name, _expression)"}},{"id":"expression:TableExpression-instance-method","html_id":"expression:TableExpression-instance-method","name":"expression","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : TableExpression","args_html":" : <a href=\"../Crysda/TableExpression.html\">TableExpression</a>","location":null,"def":{"name":"expression","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"TableExpression","visibility":"Public","body":"@expression"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}}],"macros":[],"types":[]},{"html_id":"crysda/Crysda/ColumnNotFoundException","path":"Crysda/ColumnNotFoundException.html","kind":"class","full_name":"Crysda::ColumnNotFoundException","name":"ColumnNotFoundException","abstract":false,"superclass":{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crysda/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/select.cr","line_number":14,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L14"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"Exception raised when column is not found inside dataset.","summary":"<p>Exception raised when column is not found inside dataset.</p>","class_methods":[],"constructors":[{"id":"new(name:String)-class-method","html_id":"new(name:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/crysda/select.cr","line_number":15,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L15"},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crysda/Crysda/ColumnSelector","path":"Crysda/ColumnSelector.html","kind":"alias","full_name":"Crysda::ColumnSelector","name":"ColumnSelector","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crysda/select.cr","line_number":5,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L5"}],"repository_name":"crysda","program":false,"enum":false,"alias":true,"aliased":"Proc(Crysda::ColNames, (Array(Bool | Nil) | Array(Bool)))","aliased_html":"<a href=\"../Crysda/ColNames.html\">Crysda::ColNames</a> -> Array(Bool?) | Array(Bool)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"`Proc` definition for Column Selector.","summary":"<p><code>Proc</code> definition for Column Selector.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crysda/Crysda/CrysdaException","path":"Crysda/CrysdaException.html","kind":"class","full_name":"Crysda::CrysdaException","name":"CrysdaException","abstract":false,"superclass":{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crysda/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/context.cr","line_number":56,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/context.cr#L56"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crysda/Crysda/CustomColumnValue","path":"Crysda/CustomColumnValue.html","kind":"class","full_name":"Crysda::CustomColumnValue","name":"CustomColumnValue","abstract":true,"superclass":{"html_id":"crysda/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crysda/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/context.cr","line_number":48,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/context.cr#L48"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"Base class for storing custom values inside columns. Crystal restricts usage of base `Reference` or `Object` classes in Unions\nso we need a mechanism to bypass that restriction. Child classes inheriting this base class need to only override `hashcode` method\nto ensure that call to this method returns the unique and consistent value on each invocation. This `hashcode` is different from one\nprovided by the language, as that ensures the consistency during same run, but provides different value on app different runs.\nHashing value is used in Grouping to ensure the order, so relying on Crystal implementation would reveal different grouping results on\ndifferent runs.\nShard provides `HashBuilder` interface which should be used to calculate the `hashcode`, as this ensures the same hashcode returns on\neach and every invocation. It is advised to override `to_s` methods, so that you see useful information when data is printed to console\nvia `schema` and/or `print` method.\n**Sample Usage**\n```\nclass Address < CustomColumnValue\n  getter street : String\n  getter city : String\n\n  def initialize(@street, @city)\n  end\n\n  def to_s\n    \"#{street}, #{city}\"\n  end\n\n  def to_s(io : IO) : Nil\n    io << to_s\n  end\n\n  def hashcode : Int64\n    hb = HashBuilder.new\n    hb.add(@street).add(@city).hashcode\n  end\nend\n```","summary":"<p>Base class for storing custom values inside columns.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"hashcode:Int64-instance-method","html_id":"hashcode:Int64-instance-method","name":"hashcode","doc":"returns the hash code value for this object.\nthis should be consistent in returning the value","summary":"<p>returns the hash code value for this object.</p>","abstract":true,"args":[],"args_string":" : Int64","args_html":" : Int64","location":{"filename":"src/crysda/context.cr","line_number":51,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/context.cr#L51"},"def":{"name":"hashcode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"crysda/Crysda/DataCol","path":"Crysda/DataCol.html","kind":"struct","full_name":"Crysda::DataCol","name":"DataCol","abstract":true,"superclass":{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crysda/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/columns.cr","line_number":59,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L59"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"crysda/Crysda/AnyCol","kind":"struct","full_name":"Crysda::AnyCol","name":"AnyCol"},{"html_id":"crysda/Crysda/BoolCol","kind":"struct","full_name":"Crysda::BoolCol","name":"BoolCol"},{"html_id":"crysda/Crysda/DFCol","kind":"struct","full_name":"Crysda::DFCol","name":"DFCol"},{"html_id":"crysda/Crysda/Float64Col","kind":"struct","full_name":"Crysda::Float64Col","name":"Float64Col"},{"html_id":"crysda/Crysda/Int32Col","kind":"struct","full_name":"Crysda::Int32Col","name":"Int32Col"},{"html_id":"crysda/Crysda/Int64Col","kind":"struct","full_name":"Crysda::Int64Col","name":"Int64Col"},{"html_id":"crysda/Crysda/StringCol","kind":"struct","full_name":"Crysda::StringCol","name":"StringCol"}],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"Abstract base struct for column types of Int32?, Int64?, Float64?, Bool?, String?, DataFrame? or Any type","summary":"<p>Abstract base struct for column types of Int32?, Int64?, Float64?, Bool?, String?, DataFrame? or Any type</p>","class_methods":[],"constructors":[{"id":"new(name)-class-method","html_id":"new(name)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","args_html":"(name)","location":{"filename":"src/crysda/columns.cr","line_number":62,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L62"},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"*(val:DataCol)-instance-method","html_id":"*(val:DataCol)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"DataCol"}],"args_string":"(val : DataCol)","args_html":"(val : <a href=\"../Crysda/DataCol.html\">DataCol</a>)","location":{"filename":"src/crysda/columns.cr","line_number":97,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L97"},"def":{"name":"*","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"DataCol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"times(val)"}},{"id":"*(val:Number)-instance-method","html_id":"*(val:Number)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"args_string":"(val : Number)","args_html":"(val : Number)","location":{"filename":"src/crysda/columns.cr","line_number":93,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L93"},"def":{"name":"*","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"times(val)"}},{"id":"+(val:Number)-instance-method","html_id":"+(val:Number)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"args_string":"(val : Number)","args_html":"(val : Number)","location":{"filename":"src/crysda/columns.cr","line_number":65,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L65"},"def":{"name":"+","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"plus(val)"}},{"id":"+(val:DataCol)-instance-method","html_id":"+(val:DataCol)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"DataCol"}],"args_string":"(val : DataCol)","args_html":"(val : <a href=\"../Crysda/DataCol.html\">DataCol</a>)","location":{"filename":"src/crysda/columns.cr","line_number":69,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L69"},"def":{"name":"+","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"DataCol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"plus(val)"}},{"id":"+(val:Iterable)-instance-method","html_id":"+(val:Iterable)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Iterable"}],"args_string":"(val : Iterable)","args_html":"(val : Iterable)","location":{"filename":"src/crysda/columns.cr","line_number":73,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L73"},"def":{"name":"+","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Iterable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"plus(Utils.handle_union(Crysda.temp_colname, val.to_a))"}},{"id":"+(val:String)-instance-method","html_id":"+(val:String)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"String"}],"args_string":"(val : String)","args_html":"(val : String)","location":{"filename":"src/crysda/columns.cr","line_number":101,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L101"},"def":{"name":"+","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"res = case (self)\nwhen StringCol\n  self.values.map do |v|\n    self.na_aware_plus(v.as?(String), val)\n  end\nelse\n  self.values.map do |v|\n    (v.nil? ? MISSING_VALUE : v.to_s) + val\n  end\nend\nStringCol.new(Crysda.temp_colname, Array(String | ::Nil).new(res.size) do |i|\n  res[i]\nend)\n"}},{"id":"-(val:Number)-instance-method","html_id":"-(val:Number)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"args_string":"(val : Number)","args_html":"(val : Number)","location":{"filename":"src/crysda/columns.cr","line_number":77,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L77"},"def":{"name":"-","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"minus(val)"}},{"id":"-(val:DataCol)-instance-method","html_id":"-(val:DataCol)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"DataCol"}],"args_string":"(val : DataCol)","args_html":"(val : <a href=\"../Crysda/DataCol.html\">DataCol</a>)","location":{"filename":"src/crysda/columns.cr","line_number":81,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L81"},"def":{"name":"-","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"DataCol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"minus(val)"}},{"id":"--instance-method","html_id":"--instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/columns.cr","line_number":110,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L110"},"def":{"name":"-","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self * -1"}},{"id":"/(val:DataCol)-instance-method","html_id":"/(val:DataCol)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"DataCol"}],"args_string":"(val : DataCol)","args_html":"(val : <a href=\"../Crysda/DataCol.html\">DataCol</a>)","location":{"filename":"src/crysda/columns.cr","line_number":89,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L89"},"def":{"name":"/","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"DataCol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"div(val)"}},{"id":"/(val:Number)-instance-method","html_id":"/(val:Number)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"args_string":"(val : Number)","args_html":"(val : Number)","location":{"filename":"src/crysda/columns.cr","line_number":85,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L85"},"def":{"name":"/","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"div(val)"}},{"id":"<(val:Any|DataCol)-instance-method","html_id":"<(val:Any|DataCol)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Any | DataCol"}],"args_string":"(val : Any | DataCol)","args_html":"(val : <a href=\"../Crysda/Any.html\">Any</a> | <a href=\"../Crysda/DataCol.html\">DataCol</a>)","location":{"filename":"src/crysda/columns.cr","line_number":114,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L114"},"def":{"name":"<","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Any | DataCol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(UnSupportedOperationException.new)"}},{"id":"<=(val:Any|DataCol)-instance-method","html_id":"<=(val:Any|DataCol)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Any | DataCol"}],"args_string":"(val : Any | DataCol)","args_html":"(val : <a href=\"../Crysda/Any.html\">Any</a> | <a href=\"../Crysda/DataCol.html\">DataCol</a>)","location":{"filename":"src/crysda/columns.cr","line_number":114,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L114"},"def":{"name":"<=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Any | DataCol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(UnSupportedOperationException.new)"}},{"id":"==(i:Any)-instance-method","html_id":"==(i:Any)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Any"}],"args_string":"(i : Any)","args_html":"(i : <a href=\"../Crysda/Any.html\">Any</a>)","location":{"filename":"src/crysda/columns.cr","line_number":120,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L120"},"def":{"name":"==","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values.map do |v|\n  v == i\nend"}},{"id":"==(other:self)-instance-method","html_id":"==(other:self)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","args_html":"(other : <span class=\"k\">self</span>)","location":null,"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @name == (other.@name)\nelse\n  return false\nend\nif size == other.size\nelse\n  return false\nend\nif values == other.values\nelse\n  return false\nend\ntrue\n"}},{"id":">(val:Any|DataCol)-instance-method","html_id":">(val:Any|DataCol)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Any | DataCol"}],"args_string":"(val : Any | DataCol)","args_html":"(val : <a href=\"../Crysda/Any.html\">Any</a> | <a href=\"../Crysda/DataCol.html\">DataCol</a>)","location":{"filename":"src/crysda/columns.cr","line_number":114,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L114"},"def":{"name":">","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Any | DataCol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(UnSupportedOperationException.new)"}},{"id":">=(val:Any|DataCol)-instance-method","html_id":">=(val:Any|DataCol)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Any | DataCol"}],"args_string":"(val : Any | DataCol)","args_html":"(val : <a href=\"../Crysda/Any.html\">Any</a> | <a href=\"../Crysda/DataCol.html\">DataCol</a>)","location":{"filename":"src/crysda/columns.cr","line_number":114,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L114"},"def":{"name":">=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Any | DataCol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(UnSupportedOperationException.new)"}},{"id":"[](*args,**options)-instance-method","html_id":"[](*args,**options)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crysda/columns.cr","line_number":425,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L425"},"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values[*args, **options]"}},{"id":"[](*args,**options,&)-instance-method","html_id":"[](*args,**options,&)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crysda/columns.cr","line_number":425,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L425"},"def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"values[*args, **options] do |*yield_args|\n  yield *yield_args\nend"}},{"id":"[]?(*args,**options,&)-instance-method","html_id":"[]?(*args,**options,&)-instance-method","name":"[]?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crysda/columns.cr","line_number":425,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L425"},"def":{"name":"[]?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"values[*args, **options]? do |*yield_args|\n  yield *yield_args\nend"}},{"id":"[]?(*args,**options)-instance-method","html_id":"[]?(*args,**options)-instance-method","name":"[]?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crysda/columns.cr","line_number":425,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L425"},"def":{"name":"[]?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values[*args, **options]?"}},{"id":"as_b-instance-method","html_id":"as_b-instance-method","name":"as_b","doc":"Returns `BoolCol` values as an array of `Bool?`","summary":"<p>Returns <code><a href=\"../Crysda/BoolCol.html\">BoolCol</a></code> values as an array of <code>Bool?</code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/columns.cr","line_number":374,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L374"},"def":{"name":"as_b","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Cast(BoolCol).cast(self)).values"}},{"id":"as_f64-instance-method","html_id":"as_f64-instance-method","name":"as_f64","doc":"Returns `Int32Col, Int64Col, Float64Col` values as an array of `Float64?`","summary":"<p>Returns <code><a href=\"../Crysda/Int32Col.html\">Int32Col</a>, <a href=\"../Crysda/Int64Col.html\">Int64Col</a>, <a href=\"../Crysda/Float64Col.html\">Float64Col</a></code> values as an array of <code>Float64?</code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/columns.cr","line_number":393,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L393"},"def":{"name":"as_f64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case self\nwhen Int32Col\n  Array(Float64 | ::Nil).new(values.size) do |i|\n    self[i].try(&.to_f64)\n  end\nwhen Int64Col\n  Array(Float64 | ::Nil).new(values.size) do |i|\n    self[i].try(&.to_f64)\n  end\nelse\n  (Cast(Float64Col).cast(self)).values\nend"}},{"id":"as_i-instance-method","html_id":"as_i-instance-method","name":"as_i","doc":"Returns `Int32Col` values as an array of `Int32?`","summary":"<p>Returns <code><a href=\"../Crysda/Int32Col.html\">Int32Col</a></code> values as an array of <code>Int32?</code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/columns.cr","line_number":379,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L379"},"def":{"name":"as_i","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(Cast(Int32Col).cast(self)).values"}},{"id":"as_i64-instance-method","html_id":"as_i64-instance-method","name":"as_i64","doc":"Returns `Int32Col or Int64Col` values as an array of `Int64?`","summary":"<p>Returns <code><a href=\"../Crysda/Int32Col.html\">Int32Col</a> or <a href=\"../Crysda/Int64Col.html\">Int64Col</a></code> values as an array of <code>Int64?</code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/columns.cr","line_number":384,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L384"},"def":{"name":"as_i64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case self\nwhen Int32Col\n  Array(Int64 | ::Nil).new(values.size) do |i|\n    self[i].try(&.to_i64)\n  end\nelse\n  (Cast(Int64Col).cast(self)).values\nend"}},{"id":"as_s-instance-method","html_id":"as_s-instance-method","name":"as_s","doc":"Returns values as Array of String?","summary":"<p>Returns values as Array of String?</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/columns.cr","line_number":364,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L364"},"def":{"name":"as_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case self\nwhen Int32Col, Int64Col, Float64Col, BoolCol, AnyCol\n  Array(String | ::Nil).new(values.size) do |i|\n    values[i].to_s\n  end\nelse\n  (Cast(StringCol).cast(self)).values\nend"}},{"id":"compare(left:Int32,right:Int32,null_last=true):Int32-instance-method","html_id":"compare(left:Int32,right:Int32,null_last=true):Int32-instance-method","name":"compare","doc":null,"summary":null,"abstract":true,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int32"},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int32"},{"name":"null_last","doc":null,"default_value":"true","external_name":"null_last","restriction":""}],"args_string":"(left : Int32, right : Int32, null_last = <span class=\"n\">true</span>) : Int32","args_html":"(left : Int32, right : Int32, null_last = <span class=\"n\">true</span>) : Int32","location":{"filename":"src/crysda/columns.cr","line_number":141,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L141"},"def":{"name":"compare","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int32"},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int32"},{"name":"null_last","doc":null,"default_value":"true","external_name":"null_last","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"cumsum-instance-method","html_id":"cumsum-instance-method","name":"cumsum","doc":"Calculates the cumulative sum of the column values.\nAn NA value in x causes the corresponding and following elements of the return value to be NA.\nraises `InvalidColumnOperationException` If the type of the column is not numeric","summary":"<p>Calculates the cumulative sum of the column values.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/columns.cr","line_number":301,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L301"},"def":{"name":"cumsum","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case e = self\nwhen Float64Col\n  (e.values.skip(1)).reduce([e.values.first]) do |list, val|\n    list + [list.last?.try do |v|\n      (      v.nil? || val.nil?) ? nil : (      v.not_nil! + val.not_nil!)\n    end]\n  end\nwhen Int32Col\n  (e.values.skip(1)).reduce([e.values.first]) do |list, val|\n    list + [list.last?.try do |v|\n      (      v.nil? || val.nil?) ? nil : (      v.not_nil! + val.not_nil!)\n    end]\n  end\nwhen Int64Col\n  (e.values.skip(1)).reduce([e.values.first]) do |list, val|\n    list + [list.last?.try do |v|\n      (      v.nil? || val.nil?) ? nil : (      v.not_nil! + val.not_nil!)\n    end]\n  end\nelse\n  raise(InvalidColumnOperationException.new)\nend"}},{"id":"desc-instance-method","html_id":"desc-instance-method","name":"desc","doc":"Creates a sorting attribute that inverts the order of the argument","summary":"<p>Creates a sorting attribute that inverts the order of the argument</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/columns.cr","line_number":162,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L162"},"def":{"name":"desc","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Int32Col.new(Crysda.temp_colname, (rank(false)).map(&.-))"}},{"id":"div(val)-instance-method","html_id":"div(val)-instance-method","name":"div","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/crysda/columns.cr","line_number":132,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L132"},"def":{"name":"div","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(UnSupportedOperationException.new)"}},{"id":"equals(other:self)-instance-method","html_id":"equals(other:self)-instance-method","name":"equals","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","args_html":"(other : <span class=\"k\">self</span>)","location":{"filename":"src/crysda/columns.cr","line_number":420,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L420"},"def":{"name":"equals","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((name == other.name) && (values.size == other.values.size)) && (values == other.values)"}},{"id":"has_nulls?-instance-method","html_id":"has_nulls?-instance-method","name":"has_nulls?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/columns.cr","line_number":166,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L166"},"def":{"name":"has_nulls?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values.any? do |v|\n  v.nil?\nend"}},{"id":"hash(hasher)-instance-method","html_id":"hash(hasher)-instance-method","name":"hash","doc":"See `Object#hash(hasher)`","summary":"<p>See <code>Object#hash(hasher)</code></p>","abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","args_html":"(hasher)","location":null,"def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hasher = @name.hash(hasher)\nhasher = size.hash(hasher)\nhasher = values.hash(hasher)\nhasher\n"}},{"id":"is_na-instance-method","html_id":"is_na-instance-method","name":"is_na","doc":"Maps a column to true for NA values and `false` otherwise\nReturns a `Bool` array with NA values marked as true, while others are marked as false","summary":"<p>Maps a column to true for NA values and <code>false</code> otherwise Returns a <code>Bool</code> array with NA values marked as true, while others are marked as false</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/columns.cr","line_number":186,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L186"},"def":{"name":"is_na","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values.map do |__arg2|\n  __arg2.nil?\nend"}},{"id":"is_not_na-instance-method","html_id":"is_not_na-instance-method","name":"is_not_na","doc":"Maps a column to false for NA values and `true` otherwise\nReturns a `Bool` array with NA values marked as false, while others are marked as true","summary":"<p>Maps a column to false for NA values and <code>true</code> otherwise Returns a <code>Bool</code> array with NA values marked as false, while others are marked as true</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/columns.cr","line_number":192,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L192"},"def":{"name":"is_not_na","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values.map do |v|\n  !v.nil?\nend"}},{"id":"lag(n=1,default:Any=nil)-instance-method","html_id":"lag(n=1,default:Any=nil)-instance-method","name":"lag","doc":"Returns the \"previous\" column values. Useful for comparing values ahead of the current values.\nn - positive integer, giving the number of positions to lead by (defaults to 1)","summary":"<p>Returns the \"previous\" column values.</p>","abstract":false,"args":[{"name":"n","doc":null,"default_value":"1","external_name":"n","restriction":""},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"Any"}],"args_string":"(n = <span class=\"n\">1</span>, default : Any = <span class=\"n\">nil</span>)","args_html":"(n = <span class=\"n\">1</span>, default : <a href=\"../Crysda/Any.html\">Any</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/crysda/columns.cr","line_number":344,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L344"},"def":{"name":"lag","args":[{"name":"n","doc":null,"default_value":"1","external_name":"n","restriction":""},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"val = case col = self\nwhen StringCol\n  col.values.lag(n, default.as?(String | ::Nil))\nwhen Float64Col\n  col.values.lag(n, default.as?(Float64 | ::Nil))\nwhen Int32Col\n  col.values.lag(n, default.as?(Int32 | ::Nil))\nwhen Int64Col\n  col.values.lag(n, default.as?(Int64 | ::Nil))\nwhen BoolCol\n  col.values.lag(n, default.as?(Bool | ::Nil))\nwhen AnyCol\n  col.values.lag(n, default)\nelse\n  raise(InvalidColumnOperationException.new)\nend\nUtils.handle_union(Crysda.temp_colname, val)\n"}},{"id":"lead(n=1,default:Any=nil)-instance-method","html_id":"lead(n=1,default:Any=nil)-instance-method","name":"lead","doc":"Returns the \"next\" column values. Useful for comparing values ahead of the current values.\nn - positive integer, giving the number of positions to lead by (defaults to 1)","summary":"<p>Returns the \"next\" column values.</p>","abstract":false,"args":[{"name":"n","doc":null,"default_value":"1","external_name":"n","restriction":""},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"Any"}],"args_string":"(n = <span class=\"n\">1</span>, default : Any = <span class=\"n\">nil</span>)","args_html":"(n = <span class=\"n\">1</span>, default : <a href=\"../Crysda/Any.html\">Any</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/crysda/columns.cr","line_number":328,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L328"},"def":{"name":"lead","args":[{"name":"n","doc":null,"default_value":"1","external_name":"n","restriction":""},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"val = case col = self\nwhen StringCol\n  col.values.lead(n, default.as?(String | ::Nil))\nwhen Float64Col\n  col.values.lead(n, default.as?(Float64 | ::Nil))\nwhen Int32Col\n  col.values.lead(n, default.as?(Int32 | ::Nil))\nwhen Int64Col\n  col.values.lead(n, default.as?(Int64 | ::Nil))\nwhen BoolCol\n  col.values.lead(n, default.as?(Bool | ::Nil))\nwhen AnyCol\n  col.values.lead(n, default)\nelse\n  raise(InvalidColumnOperationException.new)\nend\nUtils.handle_union(Crysda.temp_colname, val)\n"}},{"id":"map(&)-instance-method","html_id":"map(&)-instance-method","name":"map","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/crysda/columns.cr","line_number":170,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L170"},"def":{"name":"map","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"values.map do |v|\n  if v.nil?\n    nil\n  else\n    if v.is_a?(ArrayList)\n      yield (v.as(ArrayList)).values\n    else\n      yield v\n    end\n  end\nend"}},{"id":"matching(missing_as=false,&):Array(Bool)-instance-method","html_id":"matching(missing_as=false,&):Array(Bool)-instance-method","name":"matching","doc":"Match a text column in a NA-aware manner to create a predicate vector for filtering.","summary":"<p>Match a text column in a NA-aware manner to create a predicate vector for filtering.</p>","abstract":false,"args":[{"name":"missing_as","doc":null,"default_value":"false","external_name":"missing_as","restriction":""}],"args_string":"(missing_as = <span class=\"n\">false</span>, &) : Array(Bool)","args_html":"(missing_as = <span class=\"n\">false</span>, &) : Array(Bool)","location":{"filename":"src/crysda/columns.cr","line_number":359,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L359"},"def":{"name":"matching","args":[{"name":"missing_as","doc":null,"default_value":"false","external_name":"missing_as","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"Array(Bool)","visibility":"Public","body":"map do |e|\n  yield e.to_s\nend.map do |e|\n  e.nil? ? missing_as : e.not_nil!\nend"}},{"id":"max(remove_na=false)-instance-method","html_id":"max(remove_na=false)-instance-method","name":"max","doc":"Calculates the maximum of the column values.\nremove_na If `true` missing values will be excluded from the operation\nraises `MissingValueException` if `remove_na` is `false` but the data contains missing values\nraises `InvalidColumnOperationException` If the type of the column is not numeric","summary":"<p>Calculates the maximum of the column values.</p>","abstract":false,"args":[{"name":"remove_na","doc":null,"default_value":"false","external_name":"remove_na","restriction":""}],"args_string":"(remove_na = <span class=\"n\">false</span>)","args_html":"(remove_na = <span class=\"n\">false</span>)","location":{"filename":"src/crysda/columns.cr","line_number":217,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L217"},"def":{"name":"max","args":[{"name":"remove_na","doc":null,"default_value":"false","external_name":"remove_na","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(case e = self\nwhen Int32Col\n  remove_na ? NAOps(Int32).filter_not_nil(e.values) : NAOps(Int32).force_not_nil!(e.values)\nwhen Int64Col\n  remove_na ? NAOps(Int64).filter_not_nil(e.values) : NAOps(Int64).force_not_nil!(e.values)\nwhen Float64Col\n  remove_na ? NAOps(Float64).filter_not_nil(e.values) : NAOps(Float64).force_not_nil!(e.values)\nelse\n  raise(InvalidColumnOperationException.new)\nend).max"}},{"id":"mean(remove_na=false)-instance-method","html_id":"mean(remove_na=false)-instance-method","name":"mean","doc":"Calculates the arithmetic mean of the column values.\nremove_na If `true` missing values will be excluded from the operation\nraises `MissingValueException` if `remove_na` is `false` but the data contains missing values\nraises `InvalidColumnOperationException` If the type of the column is not numeric","summary":"<p>Calculates the arithmetic mean of the column values.</p>","abstract":false,"args":[{"name":"remove_na","doc":null,"default_value":"false","external_name":"remove_na","restriction":""}],"args_string":"(remove_na = <span class=\"n\">false</span>)","args_html":"(remove_na = <span class=\"n\">false</span>)","location":{"filename":"src/crysda/columns.cr","line_number":234,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L234"},"def":{"name":"mean","args":[{"name":"remove_na","doc":null,"default_value":"false","external_name":"remove_na","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(case e = self\nwhen Int32Col\n  remove_na ? NAOps(Int32).filter_not_nil(e.values) : NAOps(Int32).force_not_nil!(e.values)\nwhen Int64Col\n  remove_na ? NAOps(Int64).filter_not_nil(e.values) : NAOps(Int64).force_not_nil!(e.values)\nwhen Float64Col\n  remove_na ? NAOps(Float64).filter_not_nil(e.values) : NAOps(Float64).force_not_nil!(e.values)\nelse\n  raise(InvalidColumnOperationException.new)\nend).mean"}},{"id":"median(remove_na=false)-instance-method","html_id":"median(remove_na=false)-instance-method","name":"median","doc":"Calculates the median of the column values.\nremove_na If `true` missing values will be excluded from the operation\nraises `MissingValueException` if `remove_na` is `false` but the data contains missing values\nraises `InvalidColumnOperationException` If the type of the column is not numeric","summary":"<p>Calculates the median of the column values.</p>","abstract":false,"args":[{"name":"remove_na","doc":null,"default_value":"false","external_name":"remove_na","restriction":""}],"args_string":"(remove_na = <span class=\"n\">false</span>)","args_html":"(remove_na = <span class=\"n\">false</span>)","location":{"filename":"src/crysda/columns.cr","line_number":268,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L268"},"def":{"name":"median","args":[{"name":"remove_na","doc":null,"default_value":"false","external_name":"remove_na","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(case e = self\nwhen Int32Col\n  remove_na ? NAOps(Int32).filter_not_nil(e.values) : NAOps(Int32).force_not_nil!(e.values)\nwhen Int64Col\n  remove_na ? NAOps(Int64).filter_not_nil(e.values) : NAOps(Int64).force_not_nil!(e.values)\nwhen Float64Col\n  remove_na ? NAOps(Float64).filter_not_nil(e.values) : NAOps(Float64).force_not_nil!(e.values)\nelse\n  raise(InvalidColumnOperationException.new)\nend).median"}},{"id":"min(remove_na=false)-instance-method","html_id":"min(remove_na=false)-instance-method","name":"min","doc":"Calculates the minimum of the column values.\nremove_na If `true` missing values will be excluded from the operation\nraises `MissingValueException` if `remove_na` is `false` but the data contains missing values\nraises `InvalidColumnOperationException` If the type of the column is not numeric","summary":"<p>Calculates the minimum of the column values.</p>","abstract":false,"args":[{"name":"remove_na","doc":null,"default_value":"false","external_name":"remove_na","restriction":""}],"args_string":"(remove_na = <span class=\"n\">false</span>)","args_html":"(remove_na = <span class=\"n\">false</span>)","location":{"filename":"src/crysda/columns.cr","line_number":200,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L200"},"def":{"name":"min","args":[{"name":"remove_na","doc":null,"default_value":"false","external_name":"remove_na","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(case e = self\nwhen Int32Col\n  remove_na ? NAOps(Int32).filter_not_nil(e.values) : NAOps(Int32).force_not_nil!(e.values)\nwhen Int64Col\n  remove_na ? NAOps(Int64).filter_not_nil(e.values) : NAOps(Int64).force_not_nil!(e.values)\nwhen Float64Col\n  remove_na ? NAOps(Float64).filter_not_nil(e.values) : NAOps(Float64).force_not_nil!(e.values)\nelse\n  raise(InvalidColumnOperationException.new)\nend).min"}},{"id":"minus(val)-instance-method","html_id":"minus(val)-instance-method","name":"minus","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/crysda/columns.cr","line_number":128,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L128"},"def":{"name":"minus","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(UnSupportedOperationException.new)"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/crysda/columns.cr","line_number":60,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L60"},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"order(na_last=true)-instance-method","html_id":"order(na_last=true)-instance-method","name":"order","doc":"`order` returns the index each element would have in an ascending list\n```\ny = Float64Col.new(\"foo\", [3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1])\ny.order # => [8, 1, 3, 9, 2, 6, 7, 0, 4, 5]\n```","summary":"<p><code><a href=\"../Crysda/DataCol.html#order(na_last=true)-instance-method\">#order</a></code> returns the index each element would have in an ascending list <code></code>` y = Float64Col.new(\"foo\", [3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1]) y.order # => [8, 1, 3, 9, 2, 6, 7, 0, 4, 5] <code></code>`</p>","abstract":false,"args":[{"name":"na_last","doc":null,"default_value":"true","external_name":"na_last","restriction":""}],"args_string":"(na_last = <span class=\"n\">true</span>)","args_html":"(na_last = <span class=\"n\">true</span>)","location":{"filename":"src/crysda/columns.cr","line_number":148,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L148"},"def":{"name":"order","args":[{"name":"na_last","doc":null,"default_value":"true","external_name":"na_last","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(0..(values.size - 1)).to_a.sort do |a, b|\n  self.compare(a, b, na_last)\nend"}},{"id":"pct_change:DataCol-instance-method","html_id":"pct_change:DataCol-instance-method","name":"pct_change","doc":"Calculates the percentage change between the current and a prior column value.\nraises `InvalidColumnOperationException` If the type of the receiver column is not numeric","summary":"<p>Calculates the percentage change between the current and a prior column value.</p>","abstract":false,"args":[],"args_string":" : DataCol","args_html":" : <a href=\"../Crysda/DataCol.html\">DataCol</a>","location":{"filename":"src/crysda/columns.cr","line_number":322,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L322"},"def":{"name":"pct_change","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataCol","visibility":"Public","body":"(self / (lag(1))) + (-1)"}},{"id":"plus(val)-instance-method","html_id":"plus(val)-instance-method","name":"plus","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/crysda/columns.cr","line_number":124,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L124"},"def":{"name":"plus","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(UnSupportedOperationException.new)"}},{"id":"rank(na_last=true)-instance-method","html_id":"rank(na_last=true)-instance-method","name":"rank","doc":"`rank` returns the order of each element in an ascending list\n```\ny = Float64Col.new(\"foo\", [3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1])\ny.rank # => [7, 1, 4, 2, 8, 9, 5, 6, 0, 3]\n```","summary":"<p><code><a href=\"../Crysda/DataCol.html#rank(na_last=true)-instance-method\">#rank</a></code> returns the order of each element in an ascending list <code></code>` y = Float64Col.new(\"foo\", [3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1]) y.rank # => [7, 1, 4, 2, 8, 9, 5, 6, 0, 3] <code></code>`</p>","abstract":false,"args":[{"name":"na_last","doc":null,"default_value":"true","external_name":"na_last","restriction":""}],"args_string":"(na_last = <span class=\"n\">true</span>)","args_html":"(na_last = <span class=\"n\">true</span>)","location":{"filename":"src/crysda/columns.cr","line_number":157,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L157"},"def":{"name":"rank","args":[{"name":"na_last","doc":null,"default_value":"true","external_name":"na_last","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(order(na_last)).map_with_index do |v, i|\n  {i, v}\nend.sort_by do |a|\n  a[1]\nend.map(&.[](0))"}},{"id":"sd(remove_na=false)-instance-method","html_id":"sd(remove_na=false)-instance-method","name":"sd","doc":"Calculates the standard deviation of the column values.\nremove_na If `true` missing values will be excluded from the operation\nraises `MissingValueException` if `remove_na` is `false` but the data contains missing values\nraises `InvalidColumnOperationException` If the type of the column is not numeric","summary":"<p>Calculates the standard deviation of the column values.</p>","abstract":false,"args":[{"name":"remove_na","doc":null,"default_value":"false","external_name":"remove_na","restriction":""}],"args_string":"(remove_na = <span class=\"n\">false</span>)","args_html":"(remove_na = <span class=\"n\">false</span>)","location":{"filename":"src/crysda/columns.cr","line_number":285,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L285"},"def":{"name":"sd","args":[{"name":"remove_na","doc":null,"default_value":"false","external_name":"remove_na","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(case e = self\nwhen Int32Col\n  remove_na ? NAOps(Int32).filter_not_nil(e.values) : NAOps(Int32).force_not_nil!(e.values)\nwhen Int64Col\n  remove_na ? NAOps(Int64).filter_not_nil(e.values) : NAOps(Int64).force_not_nil!(e.values)\nwhen Float64Col\n  remove_na ? NAOps(Float64).filter_not_nil(e.values) : NAOps(Float64).force_not_nil!(e.values)\nelse\n  raise(InvalidColumnOperationException.new)\nend).sd"}},{"id":"size(*args,**options)-instance-method","html_id":"size(*args,**options)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crysda/columns.cr","line_number":425,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L425"},"def":{"name":"size","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values.size(*args, **options)"}},{"id":"size(*args,**options,&)-instance-method","html_id":"size(*args,**options,&)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crysda/columns.cr","line_number":425,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L425"},"def":{"name":"size","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"values.size(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"sum(remove_na=false)-instance-method","html_id":"sum(remove_na=false)-instance-method","name":"sum","doc":"Calculates the sum of the column values.\nremove_na If `true` missing values will be excluded from the operation\nraises `MissingValueException` if `remove_na` is `false` but the data contains missing values\nraises `InvalidColumnOperationException` If the type of the column is not numeric","summary":"<p>Calculates the sum of the column values.</p>","abstract":false,"args":[{"name":"remove_na","doc":null,"default_value":"false","external_name":"remove_na","restriction":""}],"args_string":"(remove_na = <span class=\"n\">false</span>)","args_html":"(remove_na = <span class=\"n\">false</span>)","location":{"filename":"src/crysda/columns.cr","line_number":251,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L251"},"def":{"name":"sum","args":[{"name":"remove_na","doc":null,"default_value":"false","external_name":"remove_na","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(case e = self\nwhen Int32Col\n  remove_na ? NAOps(Int32).filter_not_nil(e.values) : NAOps(Int32).force_not_nil!(e.values)\nwhen Int64Col\n  remove_na ? NAOps(Int64).filter_not_nil(e.values) : NAOps(Int64).force_not_nil!(e.values)\nwhen Float64Col\n  remove_na ? NAOps(Float64).filter_not_nil(e.values) : NAOps(Float64).force_not_nil!(e.values)\nelse\n  raise(InvalidColumnOperationException.new)\nend).sum"}},{"id":"times(val)-instance-method","html_id":"times(val)-instance-method","name":"times","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/crysda/columns.cr","line_number":136,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L136"},"def":{"name":"times","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(UnSupportedOperationException.new)"}},{"id":"to_s(io:IO):Nil-instance-method","html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Same as `#inspect(io)`.","summary":"<p>Same as <code>#inspect(io)</code>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/crysda/columns.cr","line_number":402,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L402"},"def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"io << to_s"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":"Returns a string representation of this object.\n\nDescendants must usually **not** override this method. Instead,\nthey must override `to_s(io)`, which must append to the given\nIO object.","summary":"<p>Returns a string representation of this object.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/columns.cr","line_number":406,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L406"},"def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"prefix = \"#{@name} [#{Crysda.get_col_type(self)}][#{size}]: \"\npeek = values[..255].map do |v|\n  v.nil? ? \"NA\" : (  v.is_a?(DataFrame) ? \"<DataFrame [#{v.num_row} x #{v.num_col}]>\" : v)\nend.join(\", \")\ndisp_size = Crysda::PRINT_MAX_WIDTH - prefix.size\nw = peek[..disp_size]\ncount = w.size - 1\nwhile (peek.size > disp_size && count > 0) && (!(w[count].in?([',', ' '])))\n  count = count - 1\nend\nret = prefix + w[...(count + 1)]\nif count < (w.size - 1)\n  ret = ret + \"...\"\nend\nret\n"}},{"id":"values:Array-instance-method","html_id":"values:Array-instance-method","name":"values","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Array","args_html":" : Array","location":{"filename":"src/crysda/columns.cr","line_number":140,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L140"},"def":{"name":"values","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"crysda/Crysda/DataFrame","path":"Crysda/DataFrame.html","kind":"module","full_name":"Crysda::DataFrame","name":"DataFrame","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crysda/dataframe.cr","line_number":11,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L11"},{"filename":"src/crysda/joins.cr","line_number":2,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/joins.cr#L2"},{"filename":"src/crysda/reshape.cr","line_number":2,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/reshape.cr#L2"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"DEF_NEST_COLUMN_NAME","name":"DEF_NEST_COLUMN_NAME","value":"\"data\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"A \"tabular\" data structure representing cases/records (rows), each of which consists of a number of observations or measurements (columns)\nDataFrame is an immutable object, any mutation will return a new object.","summary":"<p>A \"tabular\" data structure representing cases/records (rows), each of which consists of a number of observations or measurements (columns) DataFrame is an immutable object, any mutation will return a new object.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"[](name:String):DataCol-instance-method","html_id":"[](name:String):DataCol-instance-method","name":"[]","doc":"Returns a column by name","summary":"<p>Returns a column by name</p>","abstract":true,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : DataCol","args_html":"(name : String) : <a href=\"../Crysda/DataCol.html\">DataCol</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":22,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L22"},"def":{"name":"[]","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataCol","visibility":"Public","body":""}},{"id":"[](index:Int32)-instance-method","html_id":"[](index:Int32)-instance-method","name":"[]","doc":"Returns a column by index","summary":"<p>Returns a column by index</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"}],"args_string":"(index : Int32)","args_html":"(index : Int32)","location":{"filename":"src/crysda/dataframe.cr","line_number":62,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L62"},"def":{"name":"[]","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[names[index]]"}},{"id":"add_column(col_name:String,&expression:TableExpression):DataFrame-instance-method","html_id":"add_column(col_name:String,&expression:TableExpression):DataFrame-instance-method","name":"add_column","doc":"Add a new column and preserve existing ones.\n```\ndf.add_column(\"salary_category\") { 3 }             # with constant value\ndf.add_column(\"age_3y_later\") { |e| e[\"age\"] + 3 } # by doing basic column arithmetics\n```","summary":"<p>Add a new column and preserve existing ones.</p>","abstract":false,"args":[{"name":"col_name","doc":null,"default_value":"","external_name":"col_name","restriction":"String"}],"args_string":"(col_name : String, &expression : TableExpression) : DataFrame","args_html":"(col_name : String, &expression : <a href=\"../Crysda/TableExpression.html\">TableExpression</a>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":71,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L71"},"def":{"name":"add_column","args":[{"name":"col_name","doc":null,"default_value":"","external_name":"col_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"expression","doc":null,"default_value":"","external_name":"expression","restriction":"TableExpression"},"return_type":"DataFrame","visibility":"Public","body":"add_column(ColumnFormula.new(col_name, expression))"}},{"id":"add_column(tf:ColumnFormula):DataFrame-instance-method","html_id":"add_column(tf:ColumnFormula):DataFrame-instance-method","name":"add_column","doc":"Adds new variables and preserves existing","summary":"<p>Adds new variables and preserves existing</p>","abstract":true,"args":[{"name":"tf","doc":null,"default_value":"","external_name":"tf","restriction":"ColumnFormula"}],"args_string":"(tf : ColumnFormula) : DataFrame","args_html":"(tf : <a href=\"../Crysda/ColumnFormula.html\">ColumnFormula</a>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":34,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L34"},"def":{"name":"add_column","args":[{"name":"tf","doc":null,"default_value":"","external_name":"tf","restriction":"ColumnFormula"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":""}},{"id":"add_columns(cols:Iterable(ColumnFormula)):DataFrame-instance-method","html_id":"add_columns(cols:Iterable(ColumnFormula)):DataFrame-instance-method","name":"add_columns","doc":null,"summary":null,"abstract":false,"args":[{"name":"cols","doc":null,"default_value":"","external_name":"cols","restriction":"Iterable(ColumnFormula)"}],"args_string":"(cols : Iterable(ColumnFormula)) : DataFrame","args_html":"(cols : Iterable(<a href=\"../Crysda/ColumnFormula.html\">ColumnFormula</a>)) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":86,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L86"},"def":{"name":"add_columns","args":[{"name":"cols","doc":null,"default_value":"","external_name":"cols","restriction":"Iterable(ColumnFormula)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"cols.reduce(self) do |df, tf|\n  df.add_column(tf)\nend"}},{"id":"add_columns(*cols:ColumnFormula):DataFrame-instance-method","html_id":"add_columns(*cols:ColumnFormula):DataFrame-instance-method","name":"add_columns","doc":"add multiple columns\n```\ndf.add_columns(\n  \"age_plus3\".with { |e| e[\"age\"] + 3 },\n  \"initials\".with { |e| e[\"first_name\"].map(&.to_s[0]).concatenate(e[\"last_name\"].map(&.to_s[0])) }\n)\n```","summary":"<p>add multiple columns <code></code>` df.add_columns(   \"age_plus3\".with { |e| e[\"age\"] + 3 },   \"initials\".with { |e| e[\"first_name\"].map(&.to_s[0]).concatenate(e[\"last_name\"].map(&.to_s[0])) } ) <code></code>`</p>","abstract":false,"args":[{"name":"cols","doc":null,"default_value":"","external_name":"cols","restriction":"ColumnFormula"}],"args_string":"(*cols : ColumnFormula) : DataFrame","args_html":"(*cols : <a href=\"../Crysda/ColumnFormula.html\">ColumnFormula</a>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":82,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L82"},"def":{"name":"add_columns","args":[{"name":"cols","doc":null,"default_value":"","external_name":"cols","restriction":"ColumnFormula"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"add_columns(cols.to_a)"}},{"id":"add_row(*row)-instance-method","html_id":"add_row(*row)-instance-method","name":"add_row","doc":"Returns a DataFrame containing the new row.\nThe new row length must match the number of columns in the DataFrame","summary":"<p>Returns a DataFrame containing the new row.</p>","abstract":false,"args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":""}],"args_string":"(*row)","args_html":"(*row)","location":{"filename":"src/crysda/dataframe.cr","line_number":92,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L92"},"def":{"name":"add_row","args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if row.size == names.size\nelse\n  raise(CrysdaException.new((  \"Row length must match number of columns\")))\nend\nnew_row = DataFrameRow.new\nnames.each_with_index do |n, i|\n  new_row[n] = AnyVal[row[i]]\nend\nCrysda.dataframe_of(self.rows.to_a + [new_row])\n"}},{"id":"add_row_number(name=&quot;row_number&quot;)-instance-method","html_id":"add_row_number(name=&quot;row_number&quot;)-instance-method","name":"add_row_number","doc":"Add the row-number as column to data-frame","summary":"<p>Add the row-number as column to data-frame</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"\"row_number\"","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"s\">&quot;row_number&quot;</span>)","args_html":"(name = <span class=\"s\">&quot;row_number&quot;</span>)","location":{"filename":"src/crysda/dataframe.cr","line_number":100,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L100"},"def":{"name":"add_row_number","args":[{"name":"name","doc":null,"default_value":"\"row_number\"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(add_column(name) do\n  row_number\nend).move_left(name)"}},{"id":"bind_cols(cols:Iterable(DataCol))-instance-method","html_id":"bind_cols(cols:Iterable(DataCol))-instance-method","name":"bind_cols","doc":"Add new columns. rows are matched by position, so all data frames must have the same number of rows.","summary":"<p>Add new columns.</p>","abstract":false,"args":[{"name":"cols","doc":null,"default_value":"","external_name":"cols","restriction":"Iterable(DataCol)"}],"args_string":"(cols : Iterable(DataCol))","args_html":"(cols : Iterable(<a href=\"../Crysda/DataCol.html\">DataCol</a>))","location":{"filename":"src/crysda/dataframe.cr","line_number":163,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L163"},"def":{"name":"bind_cols","args":[{"name":"cols","doc":null,"default_value":"","external_name":"cols","restriction":"Iterable(DataCol)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SimpleDataFrame.new(cols)"}},{"id":"bind_rows(df:DataFrame):DataFrame-instance-method","html_id":"bind_rows(df:DataFrame):DataFrame-instance-method","name":"bind_rows","doc":"Adds new rows. Missing entries are set to null. The output of bind_rows will contain a column if that column appears in any of the inputs.\nWhen row-binding, columns are matched by name, and any missing columns will be filled with NA.\nGrouping will be discarded when binding rows","summary":"<p>Adds new rows.</p>","abstract":false,"args":[{"name":"df","doc":null,"default_value":"","external_name":"df","restriction":"DataFrame"}],"args_string":"(df : DataFrame) : DataFrame","args_html":"(df : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":107,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L107"},"def":{"name":"bind_rows","args":[{"name":"df","doc":null,"default_value":"","external_name":"df","restriction":"DataFrame"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"bind_rows([df])"}},{"id":"bind_rows(rows:Iterable(Hash(String,Any)))-instance-method","html_id":"bind_rows(rows:Iterable(Hash(String,Any)))-instance-method","name":"bind_rows","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Iterable(Hash(String, Any))"}],"args_string":"(rows : Iterable(Hash(String, Any)))","args_html":"(rows : Iterable(Hash(String, <a href=\"../Crysda/Any.html\">Any</a>)))","location":{"filename":"src/crysda/dataframe.cr","line_number":134,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L134"},"def":{"name":"bind_rows","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Iterable(Hash(String, Any))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"bind_rows(self, Crysda.dataframe_of(rows))"}},{"id":"bind_rows(dfs:Iterable(DataFrame)):DataFrame-instance-method","html_id":"bind_rows(dfs:Iterable(DataFrame)):DataFrame-instance-method","name":"bind_rows","doc":null,"summary":null,"abstract":false,"args":[{"name":"dfs","doc":null,"default_value":"","external_name":"dfs","restriction":"Iterable(DataFrame)"}],"args_string":"(dfs : Iterable(DataFrame)) : DataFrame","args_html":"(dfs : Iterable(<a href=\"../Crysda/DataFrame.html\">DataFrame</a>)) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":146,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L146"},"def":{"name":"bind_rows","args":[{"name":"dfs","doc":null,"default_value":"","external_name":"dfs","restriction":"Iterable(DataFrame)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"DataFrame.bind_rows(dfs)"}},{"id":"bind_rows(*rows:Hash(String,Any))-instance-method","html_id":"bind_rows(*rows:Hash(String,Any))-instance-method","name":"bind_rows","doc":"Add new rows. Missing entries are set to nil. The output of `bind_rows` will contain a column if that column appears in any of the inputs.\nwhen row-binding, columns are matched by name, and any missing column will be filled with NA\nGrouping will be discarded when binding rows\n```\nrow1 = {\n  \"person\" => \"james\",\n  \"year\"   => 1996,\n  \"weight\" => 54.0,\n  \"sex\"    => \"M\",\n} of String => Any\n\nrow2 = {\n  \"person\" => \"nell\",\n  \"year\"   => 1997,\n  \"weight\" => 48.1,\n  \"sex\"    => \"F\",\n} of String => Any\ndf.bind_rows(row1, row2)\n```","summary":"<p>Add new rows.</p>","abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Hash(String, Any)"}],"args_string":"(*rows : Hash(String, Any))","args_html":"(*rows : Hash(String, <a href=\"../Crysda/Any.html\">Any</a>))","location":{"filename":"src/crysda/dataframe.cr","line_number":130,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L130"},"def":{"name":"bind_rows","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Hash(String, Any)"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"bind_rows(self, Crysda.dataframe_of(rows.to_a))"}},{"id":"bind_rows(*df:DataFrame):DataFrame-instance-method","html_id":"bind_rows(*df:DataFrame):DataFrame-instance-method","name":"bind_rows","doc":null,"summary":null,"abstract":false,"args":[{"name":"df","doc":null,"default_value":"","external_name":"df","restriction":"DataFrame"}],"args_string":"(*df : DataFrame) : DataFrame","args_html":"(*df : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":142,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L142"},"def":{"name":"bind_rows","args":[{"name":"df","doc":null,"default_value":"","external_name":"df","restriction":"DataFrame"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"bind_rows(df.to_a)"}},{"id":"bind_rows(*rows:DataFrameRow)-instance-method","html_id":"bind_rows(*rows:DataFrameRow)-instance-method","name":"bind_rows","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"DataFrameRow"}],"args_string":"(*rows : DataFrameRow)","args_html":"(*rows : <a href=\"../Crysda/DataFrameRow.html\">DataFrameRow</a>)","location":{"filename":"src/crysda/dataframe.cr","line_number":138,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L138"},"def":{"name":"bind_rows","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"DataFrameRow"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"bind_rows(self, Crysda.dataframe_of(rows.to_a))"}},{"id":"cols:Array(DataCol)-instance-method","html_id":"cols:Array(DataCol)-instance-method","name":"cols","doc":"Ordered list of column in this data-frame","summary":"<p>Ordered list of column in this data-frame</p>","abstract":true,"args":[],"args_string":" : Array(DataCol)","args_html":" : Array(<a href=\"../Crysda/DataCol.html\">DataCol</a>)","location":{"filename":"src/crysda/dataframe.cr","line_number":19,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L19"},"def":{"name":"cols","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(DataCol)","visibility":"Public","body":""}},{"id":"complete(*column_names:String):DataFrame-instance-method","html_id":"complete(*column_names:String):DataFrame-instance-method","name":"complete","doc":"Turns implicit missing values into explicit missing values. This is a wrapper around `#expand`","summary":"<p>Turns implicit missing values into explicit missing values.</p>","abstract":false,"args":[{"name":"column_names","doc":null,"default_value":"","external_name":"column_names","restriction":"String"}],"args_string":"(*column_names : String) : DataFrame","args_html":"(*column_names : String) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/reshape.cr","line_number":215,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/reshape.cr#L215"},"def":{"name":"complete","args":[{"name":"column_names","doc":null,"default_value":"","external_name":"column_names","restriction":"String"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"(expand(*column_names)).left_join(self, by: column_names.to_a)"}},{"id":"count(selects:Array(String)=[]ofString,name=&quot;n&quot;):DataFrame-instance-method","html_id":"count(selects:Array(String)=[]ofString,name=&quot;n&quot;):DataFrame-instance-method","name":"count","doc":null,"summary":null,"abstract":false,"args":[{"name":"selects","doc":null,"default_value":"[] of String","external_name":"selects","restriction":"Array(String)"},{"name":"name","doc":null,"default_value":"\"n\"","external_name":"name","restriction":""}],"args_string":"(selects : Array(String) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>, name = <span class=\"s\">&quot;n&quot;</span>) : DataFrame","args_html":"(selects : Array(String) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>, name = <span class=\"s\">&quot;n&quot;</span>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":198,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L198"},"def":{"name":"count","args":[{"name":"selects","doc":null,"default_value":"[] of String","external_name":"selects","restriction":"Array(String)"},{"name":"name","doc":null,"default_value":"\"n\"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"case\nwhen selects.size > 0\n  ((self.select(selects)).group_by(selects)).summarize(name, TableExpression.new do |ec|\n    ec.df.num_row\n  end)\nwhen self.is_a?(GroupedDataFrame)\n  (self.select(selects)).summarize(name, TableExpression.new do |ec|\n    ec.df.num_row\n  end)\nelse\n  (DataFrameBuilder.new(name)).values(num_row)\nend"}},{"id":"count(*selects:String,name=&quot;n&quot;):DataFrame-instance-method","html_id":"count(*selects:String,name=&quot;n&quot;):DataFrame-instance-method","name":"count","doc":"Counts observations by group.\n\nIf no grouping attributes are provided the method will respect the grouping of the receiver, or in cases of an\nungrouped receiver will simply count the rows in the data.frame\n\nselects : The variables to to be used for cross-tabulation.\nname  : The name of the count column resulting table.\n```\ndf.count(\"column name\")\n```","summary":"<p>Counts observations by group.</p>","abstract":false,"args":[{"name":"selects","doc":null,"default_value":"","external_name":"selects","restriction":"String"},{"name":"name","doc":null,"default_value":"\"n\"","external_name":"name","restriction":""}],"args_string":"(*selects : String, name = <span class=\"s\">&quot;n&quot;</span>) : DataFrame","args_html":"(*selects : String, name = <span class=\"s\">&quot;n&quot;</span>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":194,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L194"},"def":{"name":"count","args":[{"name":"selects","doc":null,"default_value":"","external_name":"selects","restriction":"String"},{"name":"name","doc":null,"default_value":"\"n\"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"count(selects.to_a, name)"}},{"id":"count_expr(*exprs:TableExpression,name=&quot;n&quot;,table_expression:TableExpression?=nil):DataFrame-instance-method","html_id":"count_expr(*exprs:TableExpression,name=&quot;n&quot;,table_expression:TableExpression?=nil):DataFrame-instance-method","name":"count_expr","doc":"Counts expressions\n\nIf no grouping attributes are provided the method will respect the grouping of the receiver, or in cases of an\nungrouped receiver will simply count the rows in the data.frame","summary":"<p>Counts expressions</p>","abstract":false,"args":[{"name":"exprs","doc":null,"default_value":"","external_name":"exprs","restriction":"TableExpression"},{"name":"name","doc":null,"default_value":"\"n\"","external_name":"name","restriction":""},{"name":"table_expression","doc":null,"default_value":"nil","external_name":"table_expression","restriction":"TableExpression | ::Nil"}],"args_string":"(*exprs : TableExpression, name = <span class=\"s\">&quot;n&quot;</span>, table_expression : TableExpression? = <span class=\"n\">nil</span>) : DataFrame","args_html":"(*exprs : <a href=\"../Crysda/TableExpression.html\">TableExpression</a>, name = <span class=\"s\">&quot;n&quot;</span>, table_expression : <a href=\"../Crysda/TableExpression.html\">TableExpression</a>? = <span class=\"n\">nil</span>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":210,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L210"},"def":{"name":"count_expr","args":[{"name":"exprs","doc":null,"default_value":"","external_name":"exprs","restriction":"TableExpression"},{"name":"name","doc":null,"default_value":"\"n\"","external_name":"name","restriction":""},{"name":"table_expression","doc":null,"default_value":"nil","external_name":"table_expression","restriction":"TableExpression | ::Nil"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"expr_grouped = (group_by_expr(*exprs, table_expression: table_expression)).tap do |v|\n  print(v)\nend\nexpr_grouped.count(expr_grouped.group_by.names, name: name)\n"}},{"id":"distinct(*selects:String):DataFrame-instance-method","html_id":"distinct(*selects:String):DataFrame-instance-method","name":"distinct","doc":"Retains only unique/distinct rows\nselects : Variables to use when determining uniqueness. If there are multiple rows for a given combination of inputs, only the first row will be preserved.","summary":"<p>Retains only unique/distinct rows selects : Variables to use when determining uniqueness.</p>","abstract":false,"args":[{"name":"selects","doc":null,"default_value":"","external_name":"selects","restriction":"String"}],"args_string":"(*selects : String) : DataFrame","args_html":"(*selects : String) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":217,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L217"},"def":{"name":"distinct","args":[{"name":"selects","doc":null,"default_value":"","external_name":"selects","restriction":"String"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"distinct(selects.to_a)"}},{"id":"distinct(selects:Array(String)=self.names):DataFrame-instance-method","html_id":"distinct(selects:Array(String)=self.names):DataFrame-instance-method","name":"distinct","doc":null,"summary":null,"abstract":false,"args":[{"name":"selects","doc":null,"default_value":"self.names","external_name":"selects","restriction":"Array(String)"}],"args_string":"(selects : Array(String) = <span class=\"k\">self</span>.names) : DataFrame","args_html":"(selects : Array(String) = <span class=\"k\">self</span>.names) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":221,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L221"},"def":{"name":"distinct","args":[{"name":"selects","doc":null,"default_value":"self.names","external_name":"selects","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"((group_by(selects)).slice(1)).ungroup"}},{"id":"expand(*column_names:String):DataFrame-instance-method","html_id":"expand(*column_names:String):DataFrame-instance-method","name":"expand","doc":"`expand` is often useful in conjunction with left_join if you want to convert implicit missing values to explicit\nmissing values.","summary":"<p><code><a href=\"../Crysda/DataFrame.html#expand(*column_names:String):DataFrame-instance-method\">#expand</a></code> is often useful in conjunction with left_join if you want to convert implicit missing values to explicit missing values.</p>","abstract":false,"args":[{"name":"column_names","doc":null,"default_value":"","external_name":"column_names","restriction":"String"}],"args_string":"(*column_names : String) : DataFrame","args_html":"(*column_names : String) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/reshape.cr","line_number":221,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/reshape.cr#L221"},"def":{"name":"expand","args":[{"name":"column_names","doc":null,"default_value":"","external_name":"column_names","restriction":"String"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"dummy_col = Crysda.temp_colname\nfolded = column_names.map do |c|\n  (self.select(c)).distinct\nend.reduce((Crysda.dataframe_of(dummy_col)).values(1)) do |acc, nxt|\n  DataFrame.cartesian_product_without_by(acc, nxt, [dummy_col], true)\nend\n(folded.reject(dummy_col)).sort_by(*column_names)\n"}},{"id":"filter(&block:RowPredicate):DataFrame-instance-method","html_id":"filter(&block:RowPredicate):DataFrame-instance-method","name":"filter","doc":"Filter the rows of a table with a single predicate.\nthe filter() function is used to subset a data frame, retaining all rows that satisfy your conditions.","summary":"<p>Filter the rows of a table with a single predicate.</p>","abstract":true,"args":[],"args_string":"(&block : RowPredicate) : DataFrame","args_html":"(&block : <a href=\"../Crysda/RowPredicate.html\">RowPredicate</a>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":32,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L32"},"def":{"name":"filter","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"RowPredicate"},"return_type":"DataFrame","visibility":"Public","body":""}},{"id":"filter(*predicates:DataFrame->Array(Bool)|Array(Bool?)):DataFrame-instance-method","html_id":"filter(*predicates:DataFrame->Array(Bool)|Array(Bool?)):DataFrame-instance-method","name":"filter","doc":"AND-filter a table with different filters.\nSubset rows with filter\n```\ndf.filter { |e| e.[\"age\"] == 23 }\ndf.filter { |e| e.[\"weight\"] > 50 }\ndf.filter { |e| e[\"first_name\"].matching { |e| e.starts_with?(\"Ho\") } }\n```","summary":"<p>AND-filter a table with different filters.</p>","abstract":false,"args":[{"name":"predicates","doc":null,"default_value":"","external_name":"predicates","restriction":"(DataFrame -> Array(Bool) | Array(Bool | ::Nil))"}],"args_string":"(*predicates : DataFrame -> Array(Bool) | Array(Bool?)) : DataFrame","args_html":"(*predicates : <a href=\"../Crysda/DataFrame.html\">DataFrame</a> -> Array(Bool) | Array(Bool?)) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":238,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L238"},"def":{"name":"filter","args":[{"name":"predicates","doc":null,"default_value":"","external_name":"predicates","restriction":"(DataFrame -> Array(Bool) | Array(Bool | ::Nil))"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"predicates.reduce(self) do |df, p|\n  df.filter(&p)\nend"}},{"id":"filter_by_row(&row_filter:DataFrameRow->Bool):DataFrame-instance-method","html_id":"filter_by_row(&row_filter:DataFrameRow->Bool):DataFrame-instance-method","name":"filter_by_row","doc":"filter rows by Row predicate, which is invoked on each row of the dataframe\n```\ndf = Crysda.dataframe_of(\"person\", \"year\", \"weight\", \"sex\").values(\n  \"max\", 2014, 33.1, \"M\",\n  \"max\", 2016, nil, \"M\",\n  \"anna\", 2015, 39.2, \"F\",\n  \"anna\", 2016, 39.9, \"F\"\n)\ndf.filter_by_row { |f| f[\"year\"].as_i > 2015 }.print\n```","summary":"<p>filter rows by Row predicate, which is invoked on each row of the dataframe <code></code>` df = Crysda.dataframe_of(\"person\", \"year\", \"weight\", \"sex\").values(   \"max\", 2014, 33.1, \"M\",   \"max\", 2016, nil, \"M\",   \"anna\", 2015, 39.2, \"F\",   \"anna\", 2016, 39.9, \"F\" ) df.filter_by_row { |f| f[\"year\"].as_i > 2015 }.print <code></code>`</p>","abstract":false,"args":[],"args_string":"(&row_filter : DataFrameRow -> Bool) : DataFrame","args_html":"(&row_filter : <a href=\"../Crysda/DataFrameRow.html\">DataFrameRow</a> -> Bool) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":252,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L252"},"def":{"name":"filter_by_row","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"row_filter","doc":null,"default_value":"","external_name":"row_filter","restriction":"(DataFrameRow -> Bool)"},"return_type":"DataFrame","visibility":"Public","body":"index = Array(Bool).new.tap do |arr|\n  rows.each do |v|\n    arr << (row_filter.call(v))\n  end\nend\nfilter do\n  index\nend\n"}},{"id":"gather(key:String,value:String,columns:ColumnSelector,convert:Bool=false):DataFrame-instance-method","html_id":"gather(key:String,value:String,columns:ColumnSelector,convert:Bool=false):DataFrame-instance-method","name":"gather","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"ColumnSelector"},{"name":"convert","doc":null,"default_value":"false","external_name":"convert","restriction":"Bool"}],"args_string":"(key : String, value : String, columns : ColumnSelector, convert : Bool = <span class=\"n\">false</span>) : DataFrame","args_html":"(key : String, value : String, columns : <a href=\"../Crysda/ColumnSelector.html\">ColumnSelector</a>, convert : Bool = <span class=\"n\">false</span>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/reshape.cr","line_number":97,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/reshape.cr#L97"},"def":{"name":"gather","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"},{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"ColumnSelector"},{"name":"convert","doc":null,"default_value":"false","external_name":"convert","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"gather(key, value, col_select_as_names(columns), convert)"}},{"id":"gather(key:String,value:String,columns:Array(String)=self.names,convert:Bool=false):DataFrame-instance-method","html_id":"gather(key:String,value:String,columns:Array(String)=self.names,convert:Bool=false):DataFrame-instance-method","name":"gather","doc":"gather takes multiple columns and collapses into key-value pairs, duplicating all other columns as needed. You use\ngather() when you notice that you have columns that are not variables.\n\nkey Name of the key column to create in output.\nvalue Name of the value column to create in output.\ncolumns The colums to gather. The same selectar syntax as for `krangl::select` is supported here\nconvert If TRUE will automatically run `convertType` on the key column. This is useful if the\n               column names are actually numeric, integer, or logical.","summary":"<p>gather takes multiple columns and collapses into key-value pairs, duplicating all other columns as needed.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"},{"name":"columns","doc":null,"default_value":"self.names","external_name":"columns","restriction":"Array(String)"},{"name":"convert","doc":null,"default_value":"false","external_name":"convert","restriction":"Bool"}],"args_string":"(key : String, value : String, columns : Array(String) = <span class=\"k\">self</span>.names, convert : Bool = <span class=\"n\">false</span>) : DataFrame","args_html":"(key : String, value : String, columns : Array(String) = <span class=\"k\">self</span>.names, convert : Bool = <span class=\"n\">false</span>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/reshape.cr","line_number":73,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/reshape.cr#L73"},"def":{"name":"gather","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"},{"name":"columns","doc":null,"default_value":"self.names","external_name":"columns","restriction":"Array(String)"},{"name":"convert","doc":null,"default_value":"false","external_name":"convert","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"if columns.empty?\n  raise(CrysdaException.new((  \"the column selection to be `gather`ed must not be empty\")))\nend\ngather_cols = self.select(columns)\ngather_blk = gather_cols.cols.map do |col|\n  SimpleDataFrame.new(StringCol.new(key, Array(String | ::Nil).new(col.size, col.name.as?(String))), make_value_col(col, value))\nend.bind_rows.try do |g|\n  convert ? convert_type(g, key) : g\nend\nrest = reject(gather_cols.names)\nindex_replication = rest.cols.map do |col|\n  Utils.handle_union(col.name, Array(Any | DataFrame).new(gather_blk.num_row) do |i|\n    col[i % col.size]\n  end)\nend.try do |v|\n  SimpleDataFrame.new(v)\nend\nbind_cols(index_replication, gather_blk)\n"}},{"id":"group_by(by:Iterable(String)):DataFrame-instance-method","html_id":"group_by(by:Iterable(String)):DataFrame-instance-method","name":"group_by","doc":"Creates a grouped data-frame given a list of grouping attributes.\nMost data operations are done on groups defined by variables. `group_by()` takes the receiver data-frame and\nconverts it into a grouped data-frame where operations are performed \"by group\". `ungroup()` removes grouping.\n\nMost verbs like `add_column()`, `summarize()`, etc. will be executed per group if a grouping is present.","summary":"<p>Creates a grouped data-frame given a list of grouping attributes.</p>","abstract":true,"args":[{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"Iterable(String)"}],"args_string":"(by : Iterable(String)) : DataFrame","args_html":"(by : Iterable(String)) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":45,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L45"},"def":{"name":"group_by","args":[{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"Iterable(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":""}},{"id":"group_by(*by:String):DataFrame-instance-method","html_id":"group_by(*by:String):DataFrame-instance-method","name":"group_by","doc":"Creates a grouped data-frame given a list of grouping attributes.\nMost data operations are done on groups defined by variables. `group_by()` takes the receiver data-frame and\nconverts it into a grouped data-frame where operations are performed \"by group\". `ungroup()` removes grouping.\n\nMost verbs like `add_column()`, `summarize()`, etc. will be executed per group if a grouping is present.","summary":"<p>Creates a grouped data-frame given a list of grouping attributes.</p>","abstract":false,"args":[{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"String"}],"args_string":"(*by : String) : DataFrame","args_html":"(*by : String) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":264,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L264"},"def":{"name":"group_by","args":[{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"String"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"group_by(by.to_a)"}},{"id":"group_by(&col_selector:ColumnSelector):DataFrame-instance-method","html_id":"group_by(&col_selector:ColumnSelector):DataFrame-instance-method","name":"group_by","doc":"Creates a grouped data-frame from a column selector function. See `select()` for details about column selection.\n\nMost data operations are done on groups defined by variables. `group_by()` takes the receiver data-frame and\nconverts it into a grouped data-frame where operations are performed \"by group\". `ungroup()` removes grouping.","summary":"<p>Creates a grouped data-frame from a column selector function.</p>","abstract":false,"args":[],"args_string":"(&col_selector : ColumnSelector) : DataFrame","args_html":"(&col_selector : <a href=\"../Crysda/ColumnSelector.html\">ColumnSelector</a>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":277,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L277"},"def":{"name":"group_by","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"col_selector","doc":null,"default_value":"","external_name":"col_selector","restriction":"ColumnSelector"},"return_type":"DataFrame","visibility":"Public","body":"group_by(col_select_as_names(col_selector))"}},{"id":"group_by_expr(table_expression:TableExpression?=nil):DataFrame-instance-method","html_id":"group_by_expr(table_expression:TableExpression?=nil):DataFrame-instance-method","name":"group_by_expr","doc":null,"summary":null,"abstract":false,"args":[{"name":"table_expression","doc":null,"default_value":"nil","external_name":"table_expression","restriction":"TableExpression | ::Nil"}],"args_string":"(table_expression : TableExpression? = <span class=\"n\">nil</span>) : DataFrame","args_html":"(table_expression : <a href=\"../Crysda/TableExpression.html\">TableExpression</a>? = <span class=\"n\">nil</span>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":289,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L289"},"def":{"name":"group_by_expr","args":[{"name":"table_expression","doc":null,"default_value":"nil","external_name":"table_expression","restriction":"TableExpression | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"group_by_expr([] of TableExpression, table_expression)"}},{"id":"group_by_expr(exprs:Iterable(TableExpression),table_expression:TableExpression?=nil):DataFrame-instance-method","html_id":"group_by_expr(exprs:Iterable(TableExpression),table_expression:TableExpression?=nil):DataFrame-instance-method","name":"group_by_expr","doc":null,"summary":null,"abstract":false,"args":[{"name":"exprs","doc":null,"default_value":"","external_name":"exprs","restriction":"Iterable(TableExpression)"},{"name":"table_expression","doc":null,"default_value":"nil","external_name":"table_expression","restriction":"TableExpression | ::Nil"}],"args_string":"(exprs : Iterable(TableExpression), table_expression : TableExpression? = <span class=\"n\">nil</span>) : DataFrame","args_html":"(exprs : Iterable(<a href=\"../Crysda/TableExpression.html\">TableExpression</a>), table_expression : <a href=\"../Crysda/TableExpression.html\">TableExpression</a>? = <span class=\"n\">nil</span>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":293,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L293"},"def":{"name":"group_by_expr","args":[{"name":"exprs","doc":null,"default_value":"","external_name":"exprs","restriction":"Iterable(TableExpression)"},{"name":"table_expression","doc":null,"default_value":"nil","external_name":"table_expression","restriction":"TableExpression | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"table_exprs = ([table_expression] + exprs).select do |v|\n  !v.nil?\nend\ncol_formula = table_exprs.map_with_index do |func, idx|\n  ColumnFormula.new(\"group_by_#{idx + 1}\", func.not_nil!)\nend\n(add_columns(col_formula)).group_by(col_formula.map(&.name))\n"}},{"id":"group_by_expr(*exprs:TableExpression,table_expression:TableExpression?=nil):DataFrame-instance-method","html_id":"group_by_expr(*exprs:TableExpression,table_expression:TableExpression?=nil):DataFrame-instance-method","name":"group_by_expr","doc":"Creates a grouped data-frame from one or more table expressions. See `add_column()` for details about table expressions.\n\nMost data operations are done on groups defined by variables. `group_by()` takes the receiver data-frame and\nconverts it into a grouped data-frame where operations are performed \"by group\". `ungroup()` removes grouping.","summary":"<p>Creates a grouped data-frame from one or more table expressions.</p>","abstract":false,"args":[{"name":"exprs","doc":null,"default_value":"","external_name":"exprs","restriction":"TableExpression"},{"name":"table_expression","doc":null,"default_value":"nil","external_name":"table_expression","restriction":"TableExpression | ::Nil"}],"args_string":"(*exprs : TableExpression, table_expression : TableExpression? = <span class=\"n\">nil</span>) : DataFrame","args_html":"(*exprs : <a href=\"../Crysda/TableExpression.html\">TableExpression</a>, table_expression : <a href=\"../Crysda/TableExpression.html\">TableExpression</a>? = <span class=\"n\">nil</span>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":285,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L285"},"def":{"name":"group_by_expr","args":[{"name":"exprs","doc":null,"default_value":"","external_name":"exprs","restriction":"TableExpression"},{"name":"table_expression","doc":null,"default_value":"nil","external_name":"table_expression","restriction":"TableExpression | ::Nil"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"group_by_expr(exprs.to_a, table_expression)"}},{"id":"grouped_by:DataFrame-instance-method","html_id":"grouped_by:DataFrame-instance-method","name":"grouped_by","doc":"Returns a data-frame of distinct grouping variable tuples for a grouped data-frame.\nAn empty data-frame for ungrouped data","summary":"<p>Returns a data-frame of distinct grouping variable tuples for a grouped data-frame.</p>","abstract":true,"args":[],"args_string":" : DataFrame","args_html":" : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":52,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L52"},"def":{"name":"grouped_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":""}},{"id":"groups:Array(DataFrame)-instance-method","html_id":"groups:Array(DataFrame)-instance-method","name":"groups","doc":"Returns the groups of a grouped data frame or just a reference to self","summary":"<p>Returns the groups of a grouped data frame or just a reference to self</p>","abstract":true,"args":[],"args_string":" : Array(DataFrame)","args_html":" : Array(<a href=\"../Crysda/DataFrame.html\">DataFrame</a>)","location":{"filename":"src/crysda/dataframe.cr","line_number":55,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L55"},"def":{"name":"groups","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(DataFrame)","visibility":"Public","body":""}},{"id":"head(rows=5)-instance-method","html_id":"head(rows=5)-instance-method","name":"head","doc":"return the top rows from dataframe. default to 5","summary":"<p>return the top rows from dataframe.</p>","abstract":false,"args":[{"name":"rows","doc":null,"default_value":"5","external_name":"rows","restriction":""}],"args_string":"(rows = <span class=\"n\">5</span>)","args_html":"(rows = <span class=\"n\">5</span>)","location":{"filename":"src/crysda/dataframe.cr","line_number":301,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L301"},"def":{"name":"head","args":[{"name":"rows","doc":null,"default_value":"5","external_name":"rows","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"take(rows)"}},{"id":"inner_join(right:DataFrame,by:Iterable(Tuple(String,String)),suffices:Tuple(String,String)={&quot;.x&quot;,&quot;.y&quot;}):DataFrame-instance-method","html_id":"inner_join(right:DataFrame,by:Iterable(Tuple(String,String)),suffices:Tuple(String,String)={&quot;.x&quot;,&quot;.y&quot;}):DataFrame-instance-method","name":"inner_join","doc":null,"summary":null,"abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"Iterable(Tuple(String, String))"},{"name":"suffices","doc":null,"default_value":"{\".x\", \".y\"}","external_name":"suffices","restriction":"Tuple(String, String)"}],"args_string":"(right : DataFrame, by : Iterable(Tuple(String, String)), suffices : Tuple(String, String) = {<span class=\"s\">&quot;.x&quot;</span>, <span class=\"s\">&quot;.y&quot;</span>}) : DataFrame","args_html":"(right : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>, by : Iterable(Tuple(String, String)), suffices : Tuple(String, String) = {<span class=\"s\">&quot;.x&quot;</span>, <span class=\"s\">&quot;.y&quot;</span>}) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/joins.cr","line_number":34,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/joins.cr#L34"},"def":{"name":"inner_join","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"Iterable(Tuple(String, String))"},{"name":"suffices","doc":null,"default_value":"{\".x\", \".y\"}","external_name":"suffices","restriction":"Tuple(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"join(self, resolve_unequal_by(right, by), by.to_h.keys, suffices, type: :inner)"}},{"id":"inner_join(right:DataFrame,by:Iterable(String)=default_by(self,right),suffices:Tuple(String,String)={&quot;.x&quot;,&quot;.y&quot;}):DataFrame-instance-method","html_id":"inner_join(right:DataFrame,by:Iterable(String)=default_by(self,right),suffices:Tuple(String,String)={&quot;.x&quot;,&quot;.y&quot;}):DataFrame-instance-method","name":"inner_join","doc":null,"summary":null,"abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"default_by(self, right)","external_name":"by","restriction":"Iterable(String)"},{"name":"suffices","doc":null,"default_value":"{\".x\", \".y\"}","external_name":"suffices","restriction":"Tuple(String, String)"}],"args_string":"(right : DataFrame, by : Iterable(String) = default_by(<span class=\"k\">self</span>, right), suffices : Tuple(String, String) = {<span class=\"s\">&quot;.x&quot;</span>, <span class=\"s\">&quot;.y&quot;</span>}) : DataFrame","args_html":"(right : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>, by : Iterable(String) = default_by(<span class=\"k\">self</span>, right), suffices : Tuple(String, String) = {<span class=\"s\">&quot;.x&quot;</span>, <span class=\"s\">&quot;.y&quot;</span>}) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/joins.cr","line_number":30,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/joins.cr#L30"},"def":{"name":"inner_join","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"default_by(self, right)","external_name":"by","restriction":"Iterable(String)"},{"name":"suffices","doc":null,"default_value":"{\".x\", \".y\"}","external_name":"suffices","restriction":"Tuple(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"join(self, right, by, suffices, type: JoinType::INNER)"}},{"id":"inner_join(right:DataFrame,by:String,suffices:Tuple(String,String)={&quot;.x&quot;,&quot;.y&quot;}):DataFrame-instance-method","html_id":"inner_join(right:DataFrame,by:String,suffices:Tuple(String,String)={&quot;.x&quot;,&quot;.y&quot;}):DataFrame-instance-method","name":"inner_join","doc":null,"summary":null,"abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"String"},{"name":"suffices","doc":null,"default_value":"{\".x\", \".y\"}","external_name":"suffices","restriction":"Tuple(String, String)"}],"args_string":"(right : DataFrame, by : String, suffices : Tuple(String, String) = {<span class=\"s\">&quot;.x&quot;</span>, <span class=\"s\">&quot;.y&quot;</span>}) : DataFrame","args_html":"(right : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>, by : String, suffices : Tuple(String, String) = {<span class=\"s\">&quot;.x&quot;</span>, <span class=\"s\">&quot;.y&quot;</span>}) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/joins.cr","line_number":26,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/joins.cr#L26"},"def":{"name":"inner_join","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"String"},{"name":"suffices","doc":null,"default_value":"{\".x\", \".y\"}","external_name":"suffices","restriction":"Tuple(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"join(self, right, [by], suffices, type: JoinType::INNER)"}},{"id":"left_join(right:DataFrame,by:Iterable(String)=default_by(self,right),suffices:Tuple(String,String)={&quot;.x&quot;,&quot;.y&quot;}):DataFrame-instance-method","html_id":"left_join(right:DataFrame,by:Iterable(String)=default_by(self,right),suffices:Tuple(String,String)={&quot;.x&quot;,&quot;.y&quot;}):DataFrame-instance-method","name":"left_join","doc":null,"summary":null,"abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"default_by(self, right)","external_name":"by","restriction":"Iterable(String)"},{"name":"suffices","doc":null,"default_value":"{\".x\", \".y\"}","external_name":"suffices","restriction":"Tuple(String, String)"}],"args_string":"(right : DataFrame, by : Iterable(String) = default_by(<span class=\"k\">self</span>, right), suffices : Tuple(String, String) = {<span class=\"s\">&quot;.x&quot;</span>, <span class=\"s\">&quot;.y&quot;</span>}) : DataFrame","args_html":"(right : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>, by : Iterable(String) = default_by(<span class=\"k\">self</span>, right), suffices : Tuple(String, String) = {<span class=\"s\">&quot;.x&quot;</span>, <span class=\"s\">&quot;.y&quot;</span>}) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/joins.cr","line_number":14,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/joins.cr#L14"},"def":{"name":"left_join","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"default_by(self, right)","external_name":"by","restriction":"Iterable(String)"},{"name":"suffices","doc":null,"default_value":"{\".x\", \".y\"}","external_name":"suffices","restriction":"Tuple(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"join(self, right, by, suffices, type: JoinType::LEFT)"}},{"id":"left_join(right:DataFrame,by:String,suffices:Tuple(String,String)={&quot;.x&quot;,&quot;.y&quot;}):DataFrame-instance-method","html_id":"left_join(right:DataFrame,by:String,suffices:Tuple(String,String)={&quot;.x&quot;,&quot;.y&quot;}):DataFrame-instance-method","name":"left_join","doc":null,"summary":null,"abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"String"},{"name":"suffices","doc":null,"default_value":"{\".x\", \".y\"}","external_name":"suffices","restriction":"Tuple(String, String)"}],"args_string":"(right : DataFrame, by : String, suffices : Tuple(String, String) = {<span class=\"s\">&quot;.x&quot;</span>, <span class=\"s\">&quot;.y&quot;</span>}) : DataFrame","args_html":"(right : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>, by : String, suffices : Tuple(String, String) = {<span class=\"s\">&quot;.x&quot;</span>, <span class=\"s\">&quot;.y&quot;</span>}) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/joins.cr","line_number":10,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/joins.cr#L10"},"def":{"name":"left_join","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"String"},{"name":"suffices","doc":null,"default_value":"{\".x\", \".y\"}","external_name":"suffices","restriction":"Tuple(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"join(self, right, [by], suffices, type: JoinType::LEFT)"}},{"id":"move_left(*col_names:String):DataFrame-instance-method","html_id":"move_left(*col_names:String):DataFrame-instance-method","name":"move_left","doc":"Push some columns to the left end of a data-frame","summary":"<p>Push some columns to the left end of a data-frame</p>","abstract":false,"args":[{"name":"col_names","doc":null,"default_value":"","external_name":"col_names","restriction":"String"}],"args_string":"(*col_names : String) : DataFrame","args_html":"(*col_names : String) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":312,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L312"},"def":{"name":"move_left","args":[{"name":"col_names","doc":null,"default_value":"","external_name":"col_names","restriction":"String"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"cols = col_names.to_a\nself.select(cols + (names - cols))\n"}},{"id":"move_right(*col_names:String):DataFrame-instance-method","html_id":"move_right(*col_names:String):DataFrame-instance-method","name":"move_right","doc":"Push some columns to the right end of a data-frame","summary":"<p>Push some columns to the right end of a data-frame</p>","abstract":false,"args":[{"name":"col_names","doc":null,"default_value":"","external_name":"col_names","restriction":"String"}],"args_string":"(*col_names : String) : DataFrame","args_html":"(*col_names : String) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":306,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L306"},"def":{"name":"move_right","args":[{"name":"col_names","doc":null,"default_value":"","external_name":"col_names","restriction":"String"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"cols = col_names.to_a\nself.select((names - cols) + cols)\n"}},{"id":"names:Array(String)-instance-method","html_id":"names:Array(String)-instance-method","name":"names","doc":"Ordered list of column names of this data-frame","summary":"<p>Ordered list of column names of this data-frame</p>","abstract":true,"args":[],"args_string":" : Array(String)","args_html":" : Array(String)","location":{"filename":"src/crysda/dataframe.cr","line_number":17,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L17"},"def":{"name":"names","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":""}},{"id":"nest(col_select:ColumnSelector=ColumnSelector.newdo|c|\nc.except(grouped_by().names)\nend,column_name:String=DEF_NEST_COLUMN_NAME):DataFrame-instance-method","html_id":"nest(col_select:ColumnSelector=ColumnSelector.newdo|c|\nc.except(grouped_by().names)\nend,column_name:String=DEF_NEST_COLUMN_NAME):DataFrame-instance-method","name":"nest","doc":"Nest repeated values in a list-variable.\n\nThere are many possible ways one could choose to nest colSelect inside a data frame. nest() creates a list of data\nframes containing all the nested variables: this seems to be the most useful form in practice.\n\nUsage\n\n```\nnest(data, ..., column_name = \"data\")\n```\n\ncol_select - A selection of col_select. If not provided, all except the grouping variables are selected.\ncolumn_name - The name of the new column, as a string or symbol.\nalso see https://github.com/tidyverse/tidyr/blob/master/R/nest.R","summary":"<p>Nest repeated values in a list-variable.</p>","abstract":false,"args":[{"name":"col_select","doc":null,"default_value":"ColumnSelector.new do |c|\n  c.except(grouped_by().names)\nend","external_name":"col_select","restriction":"ColumnSelector"},{"name":"column_name","doc":null,"default_value":"DEF_NEST_COLUMN_NAME","external_name":"column_name","restriction":"String"}],"args_string":"(col_select : ColumnSelector = <span class=\"t\">ColumnSelector</span>.<span class=\"k\">new</span> <span class=\"k\">do</span> <span class=\"o\">|</span>c<span class=\"o\">|</span>\n  c.except(grouped_by().names)\n<span class=\"k\">end</span>, column_name : String = <span class=\"t\">DEF_NEST_COLUMN_NAME</span>) : DataFrame","args_html":"(col_select : <a href=\"../Crysda/ColumnSelector.html\">ColumnSelector</a> = <span class=\"t\">ColumnSelector</span>.<span class=\"k\">new</span> <span class=\"k\">do</span> <span class=\"o\">|</span>c<span class=\"o\">|</span>\n  c.except(grouped_by().names)\n<span class=\"k\">end</span>, column_name : String = <span class=\"t\">DEF_NEST_COLUMN_NAME</span>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/reshape.cr","line_number":169,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/reshape.cr#L169"},"def":{"name":"nest","args":[{"name":"col_select","doc":null,"default_value":"ColumnSelector.new do |c|\n  c.except(grouped_by().names)\nend","external_name":"col_select","restriction":"ColumnSelector"},{"name":"column_name","doc":null,"default_value":"DEF_NEST_COLUMN_NAME","external_name":"column_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"nest_cols = col_select_as_names(col_select)\ncase self\nwhen GroupedDataFrame\n  if (nest_cols & self.by).empty?\n  else\n    raise(CrysdaException.new((    \"can not nest grouping columns\")))\n  end\n  list_col = groups.map do |g|\n    g.select do |c|\n      c.list_of(nest_cols)\n    end\n  end\n  df_cols = Array(DataFrame).new(list_col.size) do |i|\n    list_col[i]\n  end\n  (grouped_by.add_column(column_name) do |_|\n    df_cols\n  end).ungroup\nwhen nest_cols.size == names.size\n  (Crysda.dataframe_of(column_name)).values(self)\nelse\n  group_by do |c|\n    c.except(nest_cols)\n  end.nest(col_select)\nend\n"}},{"id":"num_col:Int32-instance-method","html_id":"num_col:Int32-instance-method","name":"num_col","doc":"Number of columns in this dataframe","summary":"<p>Number of columns in this dataframe</p>","abstract":true,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/crysda/dataframe.cr","line_number":15,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L15"},"def":{"name":"num_col","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"num_row:Int32-instance-method","html_id":"num_row:Int32-instance-method","name":"num_row","doc":"Number of rows in this dataframe","summary":"<p>Number of rows in this dataframe</p>","abstract":true,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/crysda/dataframe.cr","line_number":13,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L13"},"def":{"name":"num_row","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"outer_join(right:DataFrame,by:String,suffices:Tuple(String,String)={&quot;.x&quot;,&quot;.y&quot;}):DataFrame-instance-method","html_id":"outer_join(right:DataFrame,by:String,suffices:Tuple(String,String)={&quot;.x&quot;,&quot;.y&quot;}):DataFrame-instance-method","name":"outer_join","doc":null,"summary":null,"abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"String"},{"name":"suffices","doc":null,"default_value":"{\".x\", \".y\"}","external_name":"suffices","restriction":"Tuple(String, String)"}],"args_string":"(right : DataFrame, by : String, suffices : Tuple(String, String) = {<span class=\"s\">&quot;.x&quot;</span>, <span class=\"s\">&quot;.y&quot;</span>}) : DataFrame","args_html":"(right : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>, by : String, suffices : Tuple(String, String) = {<span class=\"s\">&quot;.x&quot;</span>, <span class=\"s\">&quot;.y&quot;</span>}) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/joins.cr","line_number":57,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/joins.cr#L57"},"def":{"name":"outer_join","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"String"},{"name":"suffices","doc":null,"default_value":"{\".x\", \".y\"}","external_name":"suffices","restriction":"Tuple(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"join(self, right, [by], suffices, type: JoinType::OUTER)"}},{"id":"outer_join(right:DataFrame,by:Iterable(String)=default_by(self,right),suffices:Tuple(String,String)={&quot;.x&quot;,&quot;.y&quot;}):DataFrame-instance-method","html_id":"outer_join(right:DataFrame,by:Iterable(String)=default_by(self,right),suffices:Tuple(String,String)={&quot;.x&quot;,&quot;.y&quot;}):DataFrame-instance-method","name":"outer_join","doc":null,"summary":null,"abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"default_by(self, right)","external_name":"by","restriction":"Iterable(String)"},{"name":"suffices","doc":null,"default_value":"{\".x\", \".y\"}","external_name":"suffices","restriction":"Tuple(String, String)"}],"args_string":"(right : DataFrame, by : Iterable(String) = default_by(<span class=\"k\">self</span>, right), suffices : Tuple(String, String) = {<span class=\"s\">&quot;.x&quot;</span>, <span class=\"s\">&quot;.y&quot;</span>}) : DataFrame","args_html":"(right : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>, by : Iterable(String) = default_by(<span class=\"k\">self</span>, right), suffices : Tuple(String, String) = {<span class=\"s\">&quot;.x&quot;</span>, <span class=\"s\">&quot;.y&quot;</span>}) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/joins.cr","line_number":61,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/joins.cr#L61"},"def":{"name":"outer_join","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"default_by(self, right)","external_name":"by","restriction":"Iterable(String)"},{"name":"suffices","doc":null,"default_value":"{\".x\", \".y\"}","external_name":"suffices","restriction":"Tuple(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"join(self, right, by, suffices, type: JoinType::OUTER)"}},{"id":"print(title=&quot;ADataFrame&quot;,col_names=true,max_rows=PRINT_MAX_ROWS,max_width=PRINT_MAX_WIDTH,max_digits=PRINT_MAX_DIGITS,row_numbers=PRINT_ROW_NUMBERS,output=STDOUT)-instance-method","html_id":"print(title=&quot;ADataFrame&quot;,col_names=true,max_rows=PRINT_MAX_ROWS,max_width=PRINT_MAX_WIDTH,max_digits=PRINT_MAX_DIGITS,row_numbers=PRINT_ROW_NUMBERS,output=STDOUT)-instance-method","name":"print","doc":"Prints a dataframe to output (defaults to STDOUT). df.to_s will also work but has no options","summary":"<p>Prints a dataframe to output (defaults to STDOUT).</p>","abstract":false,"args":[{"name":"title","doc":null,"default_value":"\"A DataFrame\"","external_name":"title","restriction":""},{"name":"col_names","doc":null,"default_value":"true","external_name":"col_names","restriction":""},{"name":"max_rows","doc":null,"default_value":"PRINT_MAX_ROWS","external_name":"max_rows","restriction":""},{"name":"max_width","doc":null,"default_value":"PRINT_MAX_WIDTH","external_name":"max_width","restriction":""},{"name":"max_digits","doc":null,"default_value":"PRINT_MAX_DIGITS","external_name":"max_digits","restriction":""},{"name":"row_numbers","doc":null,"default_value":"PRINT_ROW_NUMBERS","external_name":"row_numbers","restriction":""},{"name":"output","doc":null,"default_value":"STDOUT","external_name":"output","restriction":""}],"args_string":"(title = <span class=\"s\">&quot;A DataFrame&quot;</span>, col_names = <span class=\"n\">true</span>, max_rows = <span class=\"t\">PRINT_MAX_ROWS</span>, max_width = <span class=\"t\">PRINT_MAX_WIDTH</span>, max_digits = <span class=\"t\">PRINT_MAX_DIGITS</span>, row_numbers = <span class=\"t\">PRINT_ROW_NUMBERS</span>, output = <span class=\"t\">STDOUT</span>)","args_html":"(title = <span class=\"s\">&quot;A DataFrame&quot;</span>, col_names = <span class=\"n\">true</span>, max_rows = <span class=\"t\">PRINT_MAX_ROWS</span>, max_width = <span class=\"t\">PRINT_MAX_WIDTH</span>, max_digits = <span class=\"t\">PRINT_MAX_DIGITS</span>, row_numbers = <span class=\"t\">PRINT_ROW_NUMBERS</span>, output = <span class=\"t\">STDOUT</span>)","location":{"filename":"src/crysda/dataframe.cr","line_number":318,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L318"},"def":{"name":"print","args":[{"name":"title","doc":null,"default_value":"\"A DataFrame\"","external_name":"title","restriction":""},{"name":"col_names","doc":null,"default_value":"true","external_name":"col_names","restriction":""},{"name":"max_rows","doc":null,"default_value":"PRINT_MAX_ROWS","external_name":"max_rows","restriction":""},{"name":"max_width","doc":null,"default_value":"PRINT_MAX_WIDTH","external_name":"max_width","restriction":""},{"name":"max_digits","doc":null,"default_value":"PRINT_MAX_DIGITS","external_name":"max_digits","restriction":""},{"name":"row_numbers","doc":null,"default_value":"PRINT_ROW_NUMBERS","external_name":"row_numbers","restriction":""},{"name":"output","doc":null,"default_value":"STDOUT","external_name":"output","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"output.puts(to_string(title, col_names, max_rows, max_width, max_digits, row_numbers))"}},{"id":"reject(columns:Iterable(String)):DataFrame-instance-method","html_id":"reject(columns:Iterable(String)):DataFrame-instance-method","name":"reject","doc":null,"summary":null,"abstract":false,"args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Iterable(String)"}],"args_string":"(columns : Iterable(String)) : DataFrame","args_html":"(columns : Iterable(String)) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":334,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L334"},"def":{"name":"reject","args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Iterable(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"self.select(names - columns.to_a)"}},{"id":"reject(*col_sels:ColumnSelector):DataFrame-instance-method","html_id":"reject(*col_sels:ColumnSelector):DataFrame-instance-method","name":"reject","doc":"remove selected columns","summary":"<p>remove selected columns</p>","abstract":false,"args":[{"name":"col_sels","doc":null,"default_value":"","external_name":"col_sels","restriction":"ColumnSelector"}],"args_string":"(*col_sels : ColumnSelector) : DataFrame","args_html":"(*col_sels : <a href=\"../Crysda/ColumnSelector.html\">ColumnSelector</a>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":348,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L348"},"def":{"name":"reject","args":[{"name":"col_sels","doc":null,"default_value":"","external_name":"col_sels","restriction":"ColumnSelector"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"self.select(*col_sels.map do |v|\n  ColumnSelector.new do |x|\n    x.except(&v)\n  end\nend)"}},{"id":"reject(&col_sel:ColumnSelector):DataFrame-instance-method","html_id":"reject(&col_sel:ColumnSelector):DataFrame-instance-method","name":"reject","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&col_sel : ColumnSelector) : DataFrame","args_html":"(&col_sel : <a href=\"../Crysda/ColumnSelector.html\">ColumnSelector</a>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":343,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L343"},"def":{"name":"reject","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"col_sel","doc":null,"default_value":"","external_name":"col_sel","restriction":"ColumnSelector"},"return_type":"DataFrame","visibility":"Public","body":"self.select do |e|\n  e.except(&col_sel)\nend"}},{"id":"reject(*columns:String):DataFrame-instance-method","html_id":"reject(*columns:String):DataFrame-instance-method","name":"reject","doc":"reject selected columns","summary":"<p>reject selected columns</p>","abstract":false,"args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"String"}],"args_string":"(*columns : String) : DataFrame","args_html":"(*columns : String) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":330,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L330"},"def":{"name":"reject","args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"String"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"self.reject(columns.to_a)"}},{"id":"reject(col_type:DataCol.class):DataFrame-instance-method","html_id":"reject(col_type:DataCol.class):DataFrame-instance-method","name":"reject","doc":"reject column by column type","summary":"<p>reject column by column type</p>","abstract":false,"args":[{"name":"col_type","doc":null,"default_value":"","external_name":"col_type","restriction":"DataCol.class"}],"args_string":"(col_type : <span class=\"t\">DataCol</span>.<span class=\"k\">class</span>) : DataFrame","args_html":"(col_type : <span class=\"t\">DataCol</span>.<span class=\"k\">class</span>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":339,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L339"},"def":{"name":"reject","args":[{"name":"col_type","doc":null,"default_value":"","external_name":"col_type","restriction":"DataCol.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"self.select(names - (self.select(col_type)).names)"}},{"id":"reject?(&pred:DataCol->Bool):DataFrame-instance-method","html_id":"reject?(&pred:DataCol->Bool):DataFrame-instance-method","name":"reject?","doc":"Select or reject columns by predicate","summary":"<p>Select or reject columns by predicate</p>","abstract":false,"args":[],"args_string":"(&pred : DataCol -> Bool) : DataFrame","args_html":"(&pred : <a href=\"../Crysda/DataCol.html\">DataCol</a> -> Bool) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":325,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L325"},"def":{"name":"reject?","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"pred","doc":null,"default_value":"","external_name":"pred","restriction":"(DataCol -> Bool)"},"return_type":"DataFrame","visibility":"Public","body":"self.select((cols.reject(pred)).map(&.name))"}},{"id":"rename(cols:Array(RenamePair)):DataFrame-instance-method","html_id":"rename(cols:Array(RenamePair)):DataFrame-instance-method","name":"rename","doc":"Rename one or several columns. Positions should be preserved.","summary":"<p>Rename one or several columns.</p>","abstract":false,"args":[{"name":"cols","doc":null,"default_value":"","external_name":"cols","restriction":"Array(RenamePair)"}],"args_string":"(cols : Array(RenamePair)) : DataFrame","args_html":"(cols : Array(<a href=\"../Crysda/RenamePair.html\">RenamePair</a>)) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":358,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L358"},"def":{"name":"rename","args":[{"name":"cols","doc":null,"default_value":"","external_name":"cols","restriction":"Array(RenamePair)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"rename(cols.map do |c|\n  RenameRule.new(c[:name], c[:with])\nend)"}},{"id":"rename(rules:Array(RenameRule)):DataFrame-instance-method","html_id":"rename(rules:Array(RenameRule)):DataFrame-instance-method","name":"rename","doc":null,"summary":null,"abstract":false,"args":[{"name":"rules","doc":null,"default_value":"","external_name":"rules","restriction":"Array(RenameRule)"}],"args_string":"(rules : Array(RenameRule)) : DataFrame","args_html":"(rules : Array(<a href=\"../Crysda/RenameRule.html\">RenameRule</a>)) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":366,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L366"},"def":{"name":"rename","args":[{"name":"rules","doc":null,"default_value":"","external_name":"rules","restriction":"Array(RenameRule)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"filtered = rules.select do |r|\n  r.old_name != r.new_name\nend\nname_restored_pos = filtered.reduce(names) do |acc, rule|\n  acc.map do |v|\n    (    v == rule.old_name) ? rule.new_name : v\n  end\nend\nrenamed = filtered.reduce(self) do |df, rule|\n  (df.add_column(rule.as_table_formula)).reject(rule.old_name)\nend\nrenamed.select(name_restored_pos)\n"}},{"id":"rename(*cols:RenamePair):DataFrame-instance-method","html_id":"rename(*cols:RenamePair):DataFrame-instance-method","name":"rename","doc":"Rename one or several columns. Positions should be preserved.","summary":"<p>Rename one or several columns.</p>","abstract":false,"args":[{"name":"cols","doc":null,"default_value":"","external_name":"cols","restriction":"RenamePair"}],"args_string":"(*cols : RenamePair) : DataFrame","args_html":"(*cols : <a href=\"../Crysda/RenamePair.html\">RenamePair</a>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":353,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L353"},"def":{"name":"rename","args":[{"name":"cols","doc":null,"default_value":"","external_name":"cols","restriction":"RenamePair"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"rename(cols.to_a)"}},{"id":"rename(*rules:RenameRule):DataFrame-instance-method","html_id":"rename(*rules:RenameRule):DataFrame-instance-method","name":"rename","doc":null,"summary":null,"abstract":false,"args":[{"name":"rules","doc":null,"default_value":"","external_name":"rules","restriction":"RenameRule"}],"args_string":"(*rules : RenameRule) : DataFrame","args_html":"(*rules : <a href=\"../Crysda/RenameRule.html\">RenameRule</a>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":362,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L362"},"def":{"name":"rename","args":[{"name":"rules","doc":null,"default_value":"","external_name":"rules","restriction":"RenameRule"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"rename(rules.to_a)"}},{"id":"right_join(right:DataFrame,by:Iterable(String)=default_by(self,right),suffices:Tuple(String,String)={&quot;.x&quot;,&quot;.y&quot;}):DataFrame-instance-method","html_id":"right_join(right:DataFrame,by:Iterable(String)=default_by(self,right),suffices:Tuple(String,String)={&quot;.x&quot;,&quot;.y&quot;}):DataFrame-instance-method","name":"right_join","doc":null,"summary":null,"abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"default_by(self, right)","external_name":"by","restriction":"Iterable(String)"},{"name":"suffices","doc":null,"default_value":"{\".x\", \".y\"}","external_name":"suffices","restriction":"Tuple(String, String)"}],"args_string":"(right : DataFrame, by : Iterable(String) = default_by(<span class=\"k\">self</span>, right), suffices : Tuple(String, String) = {<span class=\"s\">&quot;.x&quot;</span>, <span class=\"s\">&quot;.y&quot;</span>}) : DataFrame","args_html":"(right : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>, by : Iterable(String) = default_by(<span class=\"k\">self</span>, right), suffices : Tuple(String, String) = {<span class=\"s\">&quot;.x&quot;</span>, <span class=\"s\">&quot;.y&quot;</span>}) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/joins.cr","line_number":22,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/joins.cr#L22"},"def":{"name":"right_join","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"default_by(self, right)","external_name":"by","restriction":"Iterable(String)"},{"name":"suffices","doc":null,"default_value":"{\".x\", \".y\"}","external_name":"suffices","restriction":"Tuple(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"join(self, right, by, suffices, type: JoinType::RIGHT)"}},{"id":"right_join(right:DataFrame,by:String,suffices:Tuple(String,String)={&quot;.x&quot;,&quot;.y&quot;}):DataFrame-instance-method","html_id":"right_join(right:DataFrame,by:String,suffices:Tuple(String,String)={&quot;.x&quot;,&quot;.y&quot;}):DataFrame-instance-method","name":"right_join","doc":null,"summary":null,"abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"String"},{"name":"suffices","doc":null,"default_value":"{\".x\", \".y\"}","external_name":"suffices","restriction":"Tuple(String, String)"}],"args_string":"(right : DataFrame, by : String, suffices : Tuple(String, String) = {<span class=\"s\">&quot;.x&quot;</span>, <span class=\"s\">&quot;.y&quot;</span>}) : DataFrame","args_html":"(right : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>, by : String, suffices : Tuple(String, String) = {<span class=\"s\">&quot;.x&quot;</span>, <span class=\"s\">&quot;.y&quot;</span>}) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/joins.cr","line_number":18,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/joins.cr#L18"},"def":{"name":"right_join","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"String"},{"name":"suffices","doc":null,"default_value":"{\".x\", \".y\"}","external_name":"suffices","restriction":"Tuple(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"join(self, right, [by], suffices, type: JoinType::RIGHT)"}},{"id":"row(index:Int32):DataFrameRow-instance-method","html_id":"row(index:Int32):DataFrameRow-instance-method","name":"row","doc":"Returns a row by index","summary":"<p>Returns a row by index</p>","abstract":true,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"}],"args_string":"(index : Int32) : DataFrameRow","args_html":"(index : Int32) : <a href=\"../Crysda/DataFrameRow.html\">DataFrameRow</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":25,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L25"},"def":{"name":"row","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrameRow","visibility":"Public","body":""}},{"id":"row_number:Array(Int32)-instance-method","html_id":"row_number:Array(Int32)-instance-method","name":"row_number","doc":"Returns array of row numbers starting from 1","summary":"<p>Returns array of row numbers starting from 1</p>","abstract":false,"args":[],"args_string":" : Array(Int32)","args_html":" : Array(Int32)","location":{"filename":"src/crysda/dataframe.cr","line_number":384,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L384"},"def":{"name":"row_number","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"(1..num_row).to_a"}},{"id":"rows:Iterator(DataFrameRow)-instance-method","html_id":"rows:Iterator(DataFrameRow)-instance-method","name":"rows","doc":"Returns an Iterator over all rows. Per row data is represented as `DataFrameRow`","summary":"<p>Returns an Iterator over all rows.</p>","abstract":true,"args":[],"args_string":" : Iterator(DataFrameRow)","args_html":" : Iterator(<a href=\"../Crysda/DataFrameRow.html\">DataFrameRow</a>)","location":{"filename":"src/crysda/dataframe.cr","line_number":27,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L27"},"def":{"name":"rows","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Iterator(DataFrameRow)","visibility":"Public","body":""}},{"id":"rowwise:DataFrame-instance-method","html_id":"rowwise:DataFrame-instance-method","name":"rowwise","doc":"Creates a grouped data-frame where each group consists of exactly one line.","summary":"<p>Creates a grouped data-frame where each group consists of exactly one line.</p>","abstract":false,"args":[],"args_string":" : DataFrame","args_html":" : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":389,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L389"},"def":{"name":"rowwise","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"rows_as_groups = (1..num_row).map do |index|\n  DataGroup.new(GroupKey.new([AnyVal[index]]), filter do |_|\n    Array(Bool).new(num_row) do |i|\n      i == index\n    end\n  end)\nend\nGroupedDataFrame.new([\"_row_\"], rows_as_groups)\n"}},{"id":"sample_frac(fraction:Float64,replace=false):DataFrame-instance-method","html_id":"sample_frac(fraction:Float64,replace=false):DataFrame-instance-method","name":"sample_frac","doc":"Select random rows from a table.  If receiver is grouped, sampling is done per group.\nfraction - Fraction of rows to sample\nreplace - Sample with or without replacement","summary":"<p>Select random rows from a table.</p>","abstract":false,"args":[{"name":"fraction","doc":null,"default_value":"","external_name":"fraction","restriction":"Float64"},{"name":"replace","doc":null,"default_value":"false","external_name":"replace","restriction":""}],"args_string":"(fraction : Float64, replace = <span class=\"n\">false</span>) : DataFrame","args_html":"(fraction : Float64, replace = <span class=\"n\">false</span>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":400,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L400"},"def":{"name":"sample_frac","args":[{"name":"fraction","doc":null,"default_value":"","external_name":"fraction","restriction":"Float64"},{"name":"replace","doc":null,"default_value":"false","external_name":"replace","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"self.is_a?(GroupedDataFrame) ? self.transform_groups do |df|\n  df.sample_frac(fraction, replace)\nend : sample_n((fraction * num_row).round.to_i, replace)"}},{"id":"sample_n(n:Int32,replace=false):DataFrame-instance-method","html_id":"sample_n(n:Int32,replace=false):DataFrame-instance-method","name":"sample_n","doc":"Select random rows from a table. If receiver is grouped, sampling is done per group.\nn - Number of rows to sample\nreplace - Sample with or without replacement","summary":"<p>Select random rows from a table.</p>","abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int32"},{"name":"replace","doc":null,"default_value":"false","external_name":"replace","restriction":""}],"args_string":"(n : Int32, replace = <span class=\"n\">false</span>) : DataFrame","args_html":"(n : Int32, replace = <span class=\"n\">false</span>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":407,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L407"},"def":{"name":"sample_n","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int32"},{"name":"replace","doc":null,"default_value":"false","external_name":"replace","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"if self.is_a?(GroupedDataFrame)\n  return self.transform_groups do |df|\n    df.sample_n(n, replace)\n  end\nend\nif replace || n <= num_row\nelse\n  raise(CrysdaException.new((  \"can not over-sample data without replace (num_row<#{n})\")))\nend\nif n >= 0\nelse\n  raise(CrysdaException.new((  \"Sample size must be greater equal than 0 but was #{n}\")))\nend\nrnd = Random.new\nsampling = if replace\n  Array(Int32).new(n) do |_|\n    rnd.rand(num_row)\n  end\nelse\n  shuf_idx = (0..(num_row - 1)).to_a.tap do |arr|\n    arr.shuffle!(rnd)\n  end\n  shuf_idx[...n]\nend\nSimpleDataFrame.new(cols.map do |col|\n  Utils.handle_union(col, col.name, Array(Any | DataFrame).new(sampling.size) do |i|\n    col[sampling[i]]\n  end)\nend)\n"}},{"id":"schema(max_digits=3,max_width=PRINT_MAX_WIDTH,output=STDOUT)-instance-method","html_id":"schema(max_digits=3,max_width=PRINT_MAX_WIDTH,output=STDOUT)-instance-method","name":"schema","doc":"Prints the schema (that is column names, types, and the first few values per column) of a dataframe to output (defaults to STDOUT).","summary":"<p>Prints the schema (that is column names, types, and the first few values per column) of a dataframe to output (defaults to STDOUT).</p>","abstract":false,"args":[{"name":"max_digits","doc":null,"default_value":"3","external_name":"max_digits","restriction":""},{"name":"max_width","doc":null,"default_value":"PRINT_MAX_WIDTH","external_name":"max_width","restriction":""},{"name":"output","doc":null,"default_value":"STDOUT","external_name":"output","restriction":""}],"args_string":"(max_digits = <span class=\"n\">3</span>, max_width = <span class=\"t\">PRINT_MAX_WIDTH</span>, output = <span class=\"t\">STDOUT</span>)","args_html":"(max_digits = <span class=\"n\">3</span>, max_width = <span class=\"t\">PRINT_MAX_WIDTH</span>, output = <span class=\"t\">STDOUT</span>)","location":{"filename":"src/crysda/dataframe.cr","line_number":426,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L426"},"def":{"name":"schema","args":[{"name":"max_digits","doc":null,"default_value":"3","external_name":"max_digits","restriction":""},{"name":"max_width","doc":null,"default_value":"PRINT_MAX_WIDTH","external_name":"max_width","restriction":""},{"name":"output","doc":null,"default_value":"STDOUT","external_name":"output","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if self.is_a?(GroupedDataFrame)\n  return self.ungroup.schema(max_digits, max_width)\nend\ntopn = self\noutput.puts(\"DataFrame with #{num_row} observations\")\nname_padding = topn.cols.map do |__arg3|\n  __arg3.name.size\nend.max? || 0\ntype_labels = topn.cols.map do |col|\n  Crysda.get_col_type(col, true)\nend\ntype_padding = type_labels.map(&.size).max? || 0\nval_printer = Utils.create_value_printer(max_digits)\n(topn.cols.zip(type_labels)).each do |col, lbl|\n  sfv = (col.values.first(255)).map do |v|\n    val_printer.call(v)\n  end.join(\", \")\n  sfv = sfv.size > max_width ? sfv[...max_width] + \"...\" : sfv\n  output.puts(\"#{col.name.pad_end(name_padding)} #{lbl.pad_end(type_padding)} #{sfv}\")\nend\n"}},{"id":"select(which:Array(Bool?)):DataFrame-instance-method","html_id":"select(which:Array(Bool?)):DataFrame-instance-method","name":"select","doc":null,"summary":null,"abstract":false,"args":[{"name":"which","doc":null,"default_value":"","external_name":"which","restriction":"Array(Bool | ::Nil)"}],"args_string":"(which : Array(Bool?)) : DataFrame","args_html":"(which : Array(Bool?)) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":466,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L466"},"def":{"name":"select","args":[{"name":"which","doc":null,"default_value":"","external_name":"which","restriction":"Array(Bool | ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"self.select do\n  which\nend"}},{"id":"select(*col_sels:ColumnSelector):DataFrame-instance-method","html_id":"select(*col_sels:ColumnSelector):DataFrame-instance-method","name":"select","doc":null,"summary":null,"abstract":false,"args":[{"name":"col_sels","doc":null,"default_value":"","external_name":"col_sels","restriction":"ColumnSelector"}],"args_string":"(*col_sels : ColumnSelector) : DataFrame","args_html":"(*col_sels : <a href=\"../Crysda/ColumnSelector.html\">ColumnSelector</a>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":462,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L462"},"def":{"name":"select","args":[{"name":"col_sels","doc":null,"default_value":"","external_name":"col_sels","restriction":"ColumnSelector"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"self.select(&reduce_col_selectors(col_sels.to_a))"}},{"id":"select(*columns:String):DataFrame-instance-method","html_id":"select(*columns:String):DataFrame-instance-method","name":"select","doc":null,"summary":null,"abstract":false,"args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"String"}],"args_string":"(*columns : String) : DataFrame","args_html":"(*columns : String) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":448,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L448"},"def":{"name":"select","args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"String"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"self.select(columns.to_a)"}},{"id":"select(&col_sel:ColumnSelector):DataFrame-instance-method","html_id":"select(&col_sel:ColumnSelector):DataFrame-instance-method","name":"select","doc":"Keeps only the variables that match any of the given expression","summary":"<p>Keeps only the variables that match any of the given expression</p>","abstract":false,"args":[],"args_string":"(&col_sel : ColumnSelector) : DataFrame","args_html":"(&col_sel : <a href=\"../Crysda/ColumnSelector.html\">ColumnSelector</a>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":458,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L458"},"def":{"name":"select","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"col_sel","doc":null,"default_value":"","external_name":"col_sel","restriction":"ColumnSelector"},"return_type":"DataFrame","visibility":"Public","body":"self.select(col_select_as_names(col_sel))"}},{"id":"select(columns:Iterable(String)):DataFrame-instance-method","html_id":"select(columns:Iterable(String)):DataFrame-instance-method","name":"select","doc":"Create a new data frame with only selected columns","summary":"<p>Create a new data frame with only selected columns</p>","abstract":true,"args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Iterable(String)"}],"args_string":"(columns : Iterable(String)) : DataFrame","args_html":"(columns : Iterable(String)) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":29,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L29"},"def":{"name":"select","args":[{"name":"columns","doc":null,"default_value":"","external_name":"columns","restriction":"Iterable(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":""}},{"id":"select(col_type:DataCol.class):DataFrame-instance-method","html_id":"select(col_type:DataCol.class):DataFrame-instance-method","name":"select","doc":"Select column by column type","summary":"<p>Select column by column type</p>","abstract":false,"args":[{"name":"col_type","doc":null,"default_value":"","external_name":"col_type","restriction":"DataCol.class"}],"args_string":"(col_type : <span class=\"t\">DataCol</span>.<span class=\"k\">class</span>) : DataFrame","args_html":"(col_type : <span class=\"t\">DataCol</span>.<span class=\"k\">class</span>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":453,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L453"},"def":{"name":"select","args":[{"name":"col_type","doc":null,"default_value":"","external_name":"col_type","restriction":"DataCol.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"self.select((cols.select(col_type)).map(&.name))"}},{"id":"select?(&pred:DataCol->Bool):DataFrame-instance-method","html_id":"select?(&pred:DataCol->Bool):DataFrame-instance-method","name":"select?","doc":"Select or reject columns by predicate","summary":"<p>Select or reject columns by predicate</p>","abstract":false,"args":[],"args_string":"(&pred : DataCol -> Bool) : DataFrame","args_html":"(&pred : <a href=\"../Crysda/DataCol.html\">DataCol</a> -> Bool) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":444,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L444"},"def":{"name":"select?","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"pred","doc":null,"default_value":"","external_name":"pred","restriction":"(DataCol -> Bool)"},"return_type":"DataFrame","visibility":"Public","body":"self.select((cols.select(pred)).map(&.name))"}},{"id":"semi_join(right:DataFrame,by:String):DataFrame-instance-method","html_id":"semi_join(right:DataFrame,by:String):DataFrame-instance-method","name":"semi_join","doc":"Special case of inner join against distinct right side","summary":"<p>Special case of inner join against distinct right side</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"String"}],"args_string":"(right : DataFrame, by : String) : DataFrame","args_html":"(right : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>, by : String) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/joins.cr","line_number":39,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/joins.cr#L39"},"def":{"name":"semi_join","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"semi_join(right, [by])"}},{"id":"semi_join(right:DataFrame,by:Iterable(Tuple(String,String))):DataFrame-instance-method","html_id":"semi_join(right:DataFrame,by:Iterable(Tuple(String,String))):DataFrame-instance-method","name":"semi_join","doc":null,"summary":null,"abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"Iterable(Tuple(String, String))"}],"args_string":"(right : DataFrame, by : Iterable(Tuple(String, String))) : DataFrame","args_html":"(right : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>, by : Iterable(Tuple(String, String))) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/joins.cr","line_number":43,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/joins.cr#L43"},"def":{"name":"semi_join","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"Iterable(Tuple(String, String))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"semi_join(resolve_unequal_by(right, by), by.to_h.keys)"}},{"id":"semi_join(right:DataFrame,by:Iterable(String)=default_by(self,right),suffices:Tuple(String,String)={&quot;.x&quot;,&quot;.y&quot;}):DataFrame-instance-method","html_id":"semi_join(right:DataFrame,by:Iterable(String)=default_by(self,right),suffices:Tuple(String,String)={&quot;.x&quot;,&quot;.y&quot;}):DataFrame-instance-method","name":"semi_join","doc":null,"summary":null,"abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"default_by(self, right)","external_name":"by","restriction":"Iterable(String)"},{"name":"suffices","doc":null,"default_value":"{\".x\", \".y\"}","external_name":"suffices","restriction":"Tuple(String, String)"}],"args_string":"(right : DataFrame, by : Iterable(String) = default_by(<span class=\"k\">self</span>, right), suffices : Tuple(String, String) = {<span class=\"s\">&quot;.x&quot;</span>, <span class=\"s\">&quot;.y&quot;</span>}) : DataFrame","args_html":"(right : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>, by : Iterable(String) = default_by(<span class=\"k\">self</span>, right), suffices : Tuple(String, String) = {<span class=\"s\">&quot;.x&quot;</span>, <span class=\"s\">&quot;.y&quot;</span>}) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/joins.cr","line_number":47,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/joins.cr#L47"},"def":{"name":"semi_join","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"DataFrame"},{"name":"by","doc":null,"default_value":"default_by(self, right)","external_name":"by","restriction":"Iterable(String)"},{"name":"suffices","doc":null,"default_value":"{\".x\", \".y\"}","external_name":"suffices","restriction":"Tuple(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"right_reduced = (right.distinct(by)).select(by)\njoin(self, right_reduced, by, suffices, type: JoinType::INNER)\n"}},{"id":"separate(column:String,into:Array(String),sep:Regex|String=/[^\\w]/,remove:Bool=true,convert:Bool=false):DataFrame-instance-method","html_id":"separate(column:String,into:Array(String),sep:Regex|String=/[^\\w]/,remove:Bool=true,convert:Bool=false):DataFrame-instance-method","name":"separate","doc":"Given either regular expression or a vector of character positions, separate() turns a single character column into multiple columns.\n\ncolumn - Bare column name.\ninto - Names of new variables to create as character vector.\nsep - Separator between columns. If String, is interpreted as a regular expression. The default value is a regular expression that matches any sequence of non-alphanumeric values.\nremove - If true, remove input column from output data frame.\nconvert - If set, attempt to do a type conversion will be run on all new columns. This is useful if the value column was a mix of variables that was coerced to a string.","summary":"<p>Given either regular expression or a vector of character positions, separate() turns a single character column into multiple columns.</p>","abstract":false,"args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"String"},{"name":"into","doc":null,"default_value":"","external_name":"into","restriction":"Array(String)"},{"name":"sep","doc":null,"default_value":"/[^\\w]/","external_name":"sep","restriction":"Regex | String"},{"name":"remove","doc":null,"default_value":"true","external_name":"remove","restriction":"Bool"},{"name":"convert","doc":null,"default_value":"false","external_name":"convert","restriction":"Bool"}],"args_string":"(column : String, into : Array(String), sep : Regex | String = <span class=\"s\">/[^\\w]/</span>, remove : Bool = <span class=\"n\">true</span>, convert : Bool = <span class=\"n\">false</span>) : DataFrame","args_html":"(column : String, into : Array(String), sep : Regex | String = <span class=\"s\">/[^\\w]/</span>, remove : Bool = <span class=\"n\">true</span>, convert : Bool = <span class=\"n\">false</span>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/reshape.cr","line_number":131,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/reshape.cr#L131"},"def":{"name":"separate","args":[{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"String"},{"name":"into","doc":null,"default_value":"","external_name":"into","restriction":"Array(String)"},{"name":"sep","doc":null,"default_value":"/[^\\w]/","external_name":"sep","restriction":"Regex | String"},{"name":"remove","doc":null,"default_value":"true","external_name":"remove","restriction":"Bool"},{"name":"convert","doc":null,"default_value":"false","external_name":"convert","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"sep_col = self[column]\nstr_sep = sep.is_a?(String) ? sep.to_regex : sep\nsplit_data = sep_col.as_s.map do |v|\n  v.try(&.split(str_sep)) || ([] of String)\nend\nsplit_widths = split_data.map do |d|\n  d.try(&.size)\nend.reject do |__arg5|\n  __arg5.nil?\nend.uniq\nnum_splits = split_widths.first || 0\nif split_widths.size == 1\nelse\n  raise(CrysdaException.new((  \"unequal splits are not yet supported\")))\nend\nif num_splits == into.size\nelse\n  raise(CrysdaException.new((  \"mismatch between number of splits #{num_splits} and provided new column names '#{into}'\")))\nend\nsplit_cols = (0..(num_splits - 1)).map do |index|\n  StringCol.new(into[index], split_data.map do |v|\n    v[index] == MISSING_VALUE ? nil : v[index]\n  end)\nend.map do |v|\n  convert ? Utils.get_col(v) : v\nend\nrest = remove ? reject(column) : self\nbind_cols(rest, SimpleDataFrame.new(split_cols))\n"}},{"id":"set_names(*new_name:String):DataFrame-instance-method","html_id":"set_names(*new_name:String):DataFrame-instance-method","name":"set_names","doc":"Replace current column names with new ones. The number of provided names must match the number of columns.","summary":"<p>Replace current column names with new ones.</p>","abstract":false,"args":[{"name":"new_name","doc":null,"default_value":"","external_name":"new_name","restriction":"String"}],"args_string":"(*new_name : String) : DataFrame","args_html":"(*new_name : String) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":471,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L471"},"def":{"name":"set_names","args":[{"name":"new_name","doc":null,"default_value":"","external_name":"new_name","restriction":"String"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"set_names(new_name.to_a)"}},{"id":"set_names(new_names:Array(String)):DataFrame-instance-method","html_id":"set_names(new_names:Array(String)):DataFrame-instance-method","name":"set_names","doc":"Replace current column names with new ones. The number of provided names must match the number of columns.","summary":"<p>Replace current column names with new ones.</p>","abstract":false,"args":[{"name":"new_names","doc":null,"default_value":"","external_name":"new_names","restriction":"Array(String)"}],"args_string":"(new_names : Array(String)) : DataFrame","args_html":"(new_names : Array(String)) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":476,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L476"},"def":{"name":"set_names","args":[{"name":"new_names","doc":null,"default_value":"","external_name":"new_names","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"rename((names.zip(new_names)).map do |old, newn|\n  RenamePair.new(name: old, with: newn)\nend)"}},{"id":"shuffle:DataFrame-instance-method","html_id":"shuffle:DataFrame-instance-method","name":"shuffle","doc":"Randomize the row order of a data-frame.","summary":"<p>Randomize the row order of a data-frame.</p>","abstract":false,"args":[],"args_string":" : DataFrame","args_html":" : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":481,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L481"},"def":{"name":"shuffle","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"sample_n(num_row)"}},{"id":"slice(*slices:Int32)-instance-method","html_id":"slice(*slices:Int32)-instance-method","name":"slice","doc":"Select rows by position while taking into account grouping in a data-frame.","summary":"<p>Select rows by position while taking into account grouping in a data-frame.</p>","abstract":false,"args":[{"name":"slices","doc":null,"default_value":"","external_name":"slices","restriction":"Int32"}],"args_string":"(*slices : Int32)","args_html":"(*slices : Int32)","location":{"filename":"src/crysda/dataframe.cr","line_number":486,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L486"},"def":{"name":"slice","args":[{"name":"slices","doc":null,"default_value":"","external_name":"slices","restriction":"Int32"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"filter(&->(ec : ExpressionContext) do\n  ec.df.row_number.map do |e|\n    e.in?(slices)\n  end\nend)"}},{"id":"slice(slices:Range)-instance-method","html_id":"slice(slices:Range)-instance-method","name":"slice","doc":"Select rows by position while taking into account grouping in a data-frame.","summary":"<p>Select rows by position while taking into account grouping in a data-frame.</p>","abstract":false,"args":[{"name":"slices","doc":null,"default_value":"","external_name":"slices","restriction":"Range"}],"args_string":"(slices : Range)","args_html":"(slices : Range)","location":{"filename":"src/crysda/dataframe.cr","line_number":491,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L491"},"def":{"name":"slice","args":[{"name":"slices","doc":null,"default_value":"","external_name":"slices","restriction":"Range"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"filter(&->(ec : ExpressionContext) do\n  ec.df.row_number.map do |e|\n    slices.includes?(e)\n  end\nend)"}},{"id":"sort_by(exp:Iterable(SortExpression))-instance-method","html_id":"sort_by(exp:Iterable(SortExpression))-instance-method","name":"sort_by","doc":null,"summary":null,"abstract":false,"args":[{"name":"exp","doc":null,"default_value":"","external_name":"exp","restriction":"Iterable(SortExpression)"}],"args_string":"(exp : Iterable(SortExpression))","args_html":"(exp : Iterable(<a href=\"../Crysda/SortExpression.html\">SortExpression</a>))","location":{"filename":"src/crysda/dataframe.cr","line_number":517,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L517"},"def":{"name":"sort_by","args":[{"name":"exp","doc":null,"default_value":"","external_name":"exp","restriction":"Iterable(SortExpression)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sort_bys = exp.map_with_index do |expr, idx|\n  ColumnFormula.new(\"__sort#{idx}\", TableExpression.new do |e|\n    sc = SortingContext.new(e.df)\n    ret = expr.call(sc)\n    if ret.is_a?(String)\n      raise(InvalidSortingPredicateException.new(ret))\n    end\n    ret\n  end)\nend\nsort_by_names = sort_bys.map(&.name)\n((add_columns(sort_bys)).sort_by(sort_by_names)).reject(sort_by_names)\n"}},{"id":"sort_by(&exp:SortExpression)-instance-method","html_id":"sort_by(&exp:SortExpression)-instance-method","name":"sort_by","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&exp : SortExpression)","args_html":"(&exp : <a href=\"../Crysda/SortExpression.html\">SortExpression</a>)","location":{"filename":"src/crysda/dataframe.cr","line_number":513,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L513"},"def":{"name":"sort_by","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"exp","doc":null,"default_value":"","external_name":"exp","restriction":"SortExpression"},"return_type":"","visibility":"Public","body":"sort_by([exp])"}},{"id":"sort_by(*by:String):DataFrame-instance-method","html_id":"sort_by(*by:String):DataFrame-instance-method","name":"sort_by","doc":null,"summary":null,"abstract":false,"args":[{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"String"}],"args_string":"(*by : String) : DataFrame","args_html":"(*by : String) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":509,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L509"},"def":{"name":"sort_by","args":[{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"String"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"sort_by(by.to_a)"}},{"id":"sort_by:DataFrame-instance-method","html_id":"sort_by:DataFrame-instance-method","name":"sort_by","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : DataFrame","args_html":" : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":505,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L505"},"def":{"name":"sort_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"sort_by([] of String)"}},{"id":"sort_by(by:Iterable(String)):DataFrame-instance-method","html_id":"sort_by(by:Iterable(String)):DataFrame-instance-method","name":"sort_by","doc":"Resorts the receiver in ascending order (small values to go top of table). The first argument defines the\nprimary attribute to sort by. Additional ones are used to resolve ties.\n\nMissing values will come last in the sorted table.","summary":"<p>Resorts the receiver in ascending order (small values to go top of table).</p>","abstract":true,"args":[{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"Iterable(String)"}],"args_string":"(by : Iterable(String)) : DataFrame","args_html":"(by : Iterable(String)) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":39,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L39"},"def":{"name":"sort_by","args":[{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"Iterable(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":""}},{"id":"sort_desc_by(*by:String):DataFrame-instance-method","html_id":"sort_desc_by(*by:String):DataFrame-instance-method","name":"sort_desc_by","doc":"Resorts the receiver in descending order (small values to go bottom of table). The first argument defines the\nprimary attribute to sort by. Additional ones are used to resolve ties.","summary":"<p>Resorts the receiver in descending order (small values to go bottom of table).</p>","abstract":false,"args":[{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"String"}],"args_string":"(*by : String) : DataFrame","args_html":"(*by : String) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":497,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L497"},"def":{"name":"sort_desc_by","args":[{"name":"by","doc":null,"default_value":"","external_name":"by","restriction":"String"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"sort_by(by.map do |s|\n  SortExpression.new do |e|\n    e.desc(s)\n  end\nend)"}},{"id":"spread(key:String,value:String,fill=nil,convert=false):DataFrame-instance-method","html_id":"spread(key:String,value:String,fill=nil,convert=false):DataFrame-instance-method","name":"spread","doc":"spread a key-value pair across multiple columns.\n\nkey The bare (unquoted) name of the column whose values will be used as column headings.\nvalue The bare (unquoted) name of the column whose values will populate the cells.\nfill If set, missing values will be replaced with this value -  **NOT IMPLEMENTED**\nconvert If set, attempt to do a type conversion will be run on all new columns. This is useful if the value column\nwas a mix of variables that was coerced to a string.","summary":"<p>spread a key-value pair across multiple columns.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"},{"name":"fill","doc":null,"default_value":"nil","external_name":"fill","restriction":""},{"name":"convert","doc":null,"default_value":"false","external_name":"convert","restriction":""}],"args_string":"(key : String, value : String, fill = <span class=\"n\">nil</span>, convert = <span class=\"n\">false</span>) : DataFrame","args_html":"(key : String, value : String, fill = <span class=\"n\">nil</span>, convert = <span class=\"n\">false</span>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/reshape.cr","line_number":12,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/reshape.cr#L12"},"def":{"name":"spread","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"},{"name":"fill","doc":null,"default_value":"nil","external_name":"fill","restriction":""},{"name":"convert","doc":null,"default_value":"false","external_name":"convert","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"new_cols = self[key].values.uniq\nif new_cols.is_a?(Array(Any))\n  if (names & new_cols).empty?\n  else\n    raise(CrysdaException.new((    \"spread columns do already exist in data-frame\")))\n  end\nend\nby_spread_grp = (group_by(names - [key, value])).as(GroupedDataFrame)\nspread_grp = by_spread_grp.data_groups.map do |v|\n  grp_df = v.df\n  if ((grp_df.select(key)).distinct(key)).num_row == grp_df.num_row\n  else\n    raise(CrysdaException.new((    \"key value mapping is not unique\")))\n  end\n  spread_blk = (SimpleDataFrame.new(Utils.handle_union(key, new_cols))).left_join(grp_df.select(key, value))\n  grp_spread = SimpleDataFrame.new((spread_blk.as(SimpleDataFrame)).rows.to_a.map do |r|\n    if r[value].raw.is_a?(DataFrame)\n      (DFCol.new(r[key].to_s, [r[value].as_df])).as(DataCol)\n    else\n      (AnyCol.new(r[key].to_s, [r[value].raw.as(Any)])).as(DataCol)\n    end\n  end)\n  bind_cols((grp_df.reject(key, value)).distinct, grp_spread)\nend\nspread_with_ghashes = spread_grp.bind_rows\ntype_coerced = new_cols.map(&.to_s).reverse.reduce(spread_with_ghashes) do |df, spread_col|\n  df.add_column(spread_col) do |_|\n    Utils.handle_union(spread_col, df[spread_col].values)\n  end\nend\nif (convert)\n  type_coerced = new_cols.map(&.to_s).select do |s|\n    type_coerced[s].is_a?(StringCol)\n  end.reverse.reduce(type_coerced) do |df, spread_col|\n    convert_type(df, spread_col)\n  end\nend\nif fill.nil?\nend\ntype_coerced\n"}},{"id":"summarize(name:String,&block:TableExpression):DataFrame-instance-method","html_id":"summarize(name:String,&block:TableExpression):DataFrame-instance-method","name":"summarize","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String, &block : TableExpression) : DataFrame","args_html":"(name : String, &block : <a href=\"../Crysda/TableExpression.html\">TableExpression</a>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":540,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L540"},"def":{"name":"summarize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"TableExpression"},"return_type":"DataFrame","visibility":"Public","body":"summarize(ColumnFormula.new(name, block))"}},{"id":"summarize(*sum_rules:ColumnFormula):DataFrame-instance-method","html_id":"summarize(*sum_rules:ColumnFormula):DataFrame-instance-method","name":"summarize","doc":null,"summary":null,"abstract":false,"args":[{"name":"sum_rules","doc":null,"default_value":"","external_name":"sum_rules","restriction":"ColumnFormula"}],"args_string":"(*sum_rules : ColumnFormula) : DataFrame","args_html":"(*sum_rules : <a href=\"../Crysda/ColumnFormula.html\">ColumnFormula</a>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":532,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L532"},"def":{"name":"summarize","args":[{"name":"sum_rules","doc":null,"default_value":"","external_name":"sum_rules","restriction":"ColumnFormula"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"summarize(sum_rules.to_a)"}},{"id":"summarize(sum_rules:Array(ColumnFormula)):DataFrame-instance-method","html_id":"summarize(sum_rules:Array(ColumnFormula)):DataFrame-instance-method","name":"summarize","doc":"Creates a summary of a table or a group. The provided expression is expected to evaluate to a scalar value and not into a column.\n`summarize()` is typically used on grouped data created by group_by(). The output will have one row for each group.","summary":"<p>Creates a summary of a table or a group.</p>","abstract":true,"args":[{"name":"sum_rules","doc":null,"default_value":"","external_name":"sum_rules","restriction":"Array(ColumnFormula)"}],"args_string":"(sum_rules : Array(ColumnFormula)) : DataFrame","args_html":"(sum_rules : Array(<a href=\"../Crysda/ColumnFormula.html\">ColumnFormula</a>)) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":59,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L59"},"def":{"name":"summarize","args":[{"name":"sum_rules","doc":null,"default_value":"","external_name":"sum_rules","restriction":"Array(ColumnFormula)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":""}},{"id":"summarize(name:String,block:TableExpression):DataFrame-instance-method","html_id":"summarize(name:String,block:TableExpression):DataFrame-instance-method","name":"summarize","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"TableExpression"}],"args_string":"(name : String, block : TableExpression) : DataFrame","args_html":"(name : String, block : <a href=\"../Crysda/TableExpression.html\">TableExpression</a>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":536,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L536"},"def":{"name":"summarize","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"TableExpression"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"summarize(ColumnFormula.new(name, block))"}},{"id":"summarize_at(&col_sel:ColumnSelector):DataFrame-instance-method","html_id":"summarize_at(&col_sel:ColumnSelector):DataFrame-instance-method","name":"summarize_at","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&col_sel : ColumnSelector) : DataFrame","args_html":"(&col_sel : <a href=\"../Crysda/ColumnSelector.html\">ColumnSelector</a>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":544,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L544"},"def":{"name":"summarize_at","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"col_sel","doc":null,"default_value":"","external_name":"col_sel","restriction":"ColumnSelector"},"return_type":"DataFrame","visibility":"Public","body":"summarize_at(col_sel, [] of AggFunc)"}},{"id":"summarize_at(col_sel:ColumnSelector,aggfuns:Array(AggFunc)):DataFrame-instance-method","html_id":"summarize_at(col_sel:ColumnSelector,aggfuns:Array(AggFunc)):DataFrame-instance-method","name":"summarize_at","doc":null,"summary":null,"abstract":false,"args":[{"name":"col_sel","doc":null,"default_value":"","external_name":"col_sel","restriction":"ColumnSelector"},{"name":"aggfuns","doc":null,"default_value":"","external_name":"aggfuns","restriction":"Array(AggFunc)"}],"args_string":"(col_sel : ColumnSelector, aggfuns : Array(AggFunc)) : DataFrame","args_html":"(col_sel : <a href=\"../Crysda/ColumnSelector.html\">ColumnSelector</a>, aggfuns : Array(<a href=\"../Crysda/AggFunc.html\">AggFunc</a>)) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":552,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L552"},"def":{"name":"summarize_at","args":[{"name":"col_sel","doc":null,"default_value":"","external_name":"col_sel","restriction":"ColumnSelector"},{"name":"aggfuns","doc":null,"default_value":"","external_name":"aggfuns","restriction":"Array(AggFunc)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"summarize_at(col_sel, ->(sb : SummarizeBuilder) do\n  aggfuns.each do |f|\n    sb.add(f.value, f.suffix)\n  end\nend)"}},{"id":"summarize_at(col_sel:ColumnSelector,op:SummarizeFunc?=nil):DataFrame-instance-method","html_id":"summarize_at(col_sel:ColumnSelector,op:SummarizeFunc?=nil):DataFrame-instance-method","name":"summarize_at","doc":null,"summary":null,"abstract":false,"args":[{"name":"col_sel","doc":null,"default_value":"","external_name":"col_sel","restriction":"ColumnSelector"},{"name":"op","doc":null,"default_value":"nil","external_name":"op","restriction":"SummarizeFunc | ::Nil"}],"args_string":"(col_sel : ColumnSelector, op : SummarizeFunc? = <span class=\"n\">nil</span>) : DataFrame","args_html":"(col_sel : <a href=\"../Crysda/ColumnSelector.html\">ColumnSelector</a>, op : <a href=\"../Crysda/SummarizeFunc.html\">SummarizeFunc</a>? = <span class=\"n\">nil</span>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":556,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L556"},"def":{"name":"summarize_at","args":[{"name":"col_sel","doc":null,"default_value":"","external_name":"col_sel","restriction":"ColumnSelector"},{"name":"op","doc":null,"default_value":"nil","external_name":"op","restriction":"SummarizeFunc | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"sb = SummarizeBuilder.new(self, col_sel)\nif op\n  op.call(sb)\nend\nsb.build\n"}},{"id":"summarize_at(col_sel:ColumnSelector,*aggfuns:AggFunc):DataFrame-instance-method","html_id":"summarize_at(col_sel:ColumnSelector,*aggfuns:AggFunc):DataFrame-instance-method","name":"summarize_at","doc":null,"summary":null,"abstract":false,"args":[{"name":"col_sel","doc":null,"default_value":"","external_name":"col_sel","restriction":"ColumnSelector"},{"name":"aggfuns","doc":null,"default_value":"","external_name":"aggfuns","restriction":"AggFunc"}],"args_string":"(col_sel : ColumnSelector, *aggfuns : AggFunc) : DataFrame","args_html":"(col_sel : <a href=\"../Crysda/ColumnSelector.html\">ColumnSelector</a>, *aggfuns : <a href=\"../Crysda/AggFunc.html\">AggFunc</a>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":548,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L548"},"def":{"name":"summarize_at","args":[{"name":"col_sel","doc":null,"default_value":"","external_name":"col_sel","restriction":"ColumnSelector"},{"name":"aggfuns","doc":null,"default_value":"","external_name":"aggfuns","restriction":"AggFunc"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"summarize_at(col_sel, aggfuns.to_a)"}},{"id":"tail(rows=5)-instance-method","html_id":"tail(rows=5)-instance-method","name":"tail","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"5","external_name":"rows","restriction":""}],"args_string":"(rows = <span class=\"n\">5</span>)","args_html":"(rows = <span class=\"n\">5</span>)","location":{"filename":"src/crysda/dataframe.cr","line_number":572,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L572"},"def":{"name":"tail","args":[{"name":"rows","doc":null,"default_value":"5","external_name":"rows","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"take_last(rows)"}},{"id":"take(rows=5)-instance-method","html_id":"take(rows=5)-instance-method","name":"take","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"5","external_name":"rows","restriction":""}],"args_string":"(rows = <span class=\"n\">5</span>)","args_html":"(rows = <span class=\"n\">5</span>)","location":{"filename":"src/crysda/dataframe.cr","line_number":564,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L564"},"def":{"name":"take","args":[{"name":"rows","doc":null,"default_value":"5","external_name":"rows","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"filter do |ec|\n  ec.df.row_number.map(&.<=(rows))\nend"}},{"id":"take_last(rows:Int32)-instance-method","html_id":"take_last(rows:Int32)-instance-method","name":"take_last","doc":null,"summary":null,"abstract":false,"args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Int32"}],"args_string":"(rows : Int32)","args_html":"(rows : Int32)","location":{"filename":"src/crysda/dataframe.cr","line_number":568,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L568"},"def":{"name":"take_last","args":[{"name":"rows","doc":null,"default_value":"","external_name":"rows","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"filter do |ec|\n  ec.df.row_number.map(&.>(num_row - rows))\nend"}},{"id":"to_h-instance-method","html_id":"to_h-instance-method","name":"to_h","doc":"Expose a view on the data as Hash from column names to nullable arrays.","summary":"<p>Expose a view on the data as Hash from column names to nullable arrays.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/dataframe.cr","line_number":582,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L582"},"def":{"name":"to_h","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"names.map do |v|\n  {v, self[v].values}\nend.to_h"}},{"id":"to_s(io:Nil)-instance-method","html_id":"to_s(io:Nil)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"Nil"}],"args_string":"(io : Nil)","args_html":"(io : Nil)","location":{"filename":"src/crysda/dataframe.cr","line_number":653,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L653"},"def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << to_string"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/dataframe.cr","line_number":649,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L649"},"def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_string"}},{"id":"to_string(title=&quot;ADataFrame&quot;,col_names=true,max_rows=PRINT_MAX_ROWS,max_width=PRINT_MAX_WIDTH,max_digits=PRINT_MAX_DIGITS,row_numbers=PRINT_ROW_NUMBERS)-instance-method","html_id":"to_string(title=&quot;ADataFrame&quot;,col_names=true,max_rows=PRINT_MAX_ROWS,max_width=PRINT_MAX_WIDTH,max_digits=PRINT_MAX_DIGITS,row_numbers=PRINT_ROW_NUMBERS)-instance-method","name":"to_string","doc":"Converts dataframe to its string representation. This is being invoked via `print` and `to_s`","summary":"<p>Converts dataframe to its string representation.</p>","abstract":false,"args":[{"name":"title","doc":null,"default_value":"\"A DataFrame\"","external_name":"title","restriction":""},{"name":"col_names","doc":null,"default_value":"true","external_name":"col_names","restriction":""},{"name":"max_rows","doc":null,"default_value":"PRINT_MAX_ROWS","external_name":"max_rows","restriction":""},{"name":"max_width","doc":null,"default_value":"PRINT_MAX_WIDTH","external_name":"max_width","restriction":""},{"name":"max_digits","doc":null,"default_value":"PRINT_MAX_DIGITS","external_name":"max_digits","restriction":""},{"name":"row_numbers","doc":null,"default_value":"PRINT_ROW_NUMBERS","external_name":"row_numbers","restriction":""}],"args_string":"(title = <span class=\"s\">&quot;A DataFrame&quot;</span>, col_names = <span class=\"n\">true</span>, max_rows = <span class=\"t\">PRINT_MAX_ROWS</span>, max_width = <span class=\"t\">PRINT_MAX_WIDTH</span>, max_digits = <span class=\"t\">PRINT_MAX_DIGITS</span>, row_numbers = <span class=\"t\">PRINT_ROW_NUMBERS</span>)","args_html":"(title = <span class=\"s\">&quot;A DataFrame&quot;</span>, col_names = <span class=\"n\">true</span>, max_rows = <span class=\"t\">PRINT_MAX_ROWS</span>, max_width = <span class=\"t\">PRINT_MAX_WIDTH</span>, max_digits = <span class=\"t\">PRINT_MAX_DIGITS</span>, row_numbers = <span class=\"t\">PRINT_ROW_NUMBERS</span>)","location":{"filename":"src/crysda/dataframe.cr","line_number":587,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L587"},"def":{"name":"to_string","args":[{"name":"title","doc":null,"default_value":"\"A DataFrame\"","external_name":"title","restriction":""},{"name":"col_names","doc":null,"default_value":"true","external_name":"col_names","restriction":""},{"name":"max_rows","doc":null,"default_value":"PRINT_MAX_ROWS","external_name":"max_rows","restriction":""},{"name":"max_width","doc":null,"default_value":"PRINT_MAX_WIDTH","external_name":"max_width","restriction":""},{"name":"max_digits","doc":null,"default_value":"PRINT_MAX_DIGITS","external_name":"max_digits","restriction":""},{"name":"row_numbers","doc":null,"default_value":"PRINT_ROW_NUMBERS","external_name":"row_numbers","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"df = self\nif self.is_a?(SimpleDataFrame)\nelse\n  df = self.ungroup.as(SimpleDataFrame)\nend\nmax_rows_or_inf = max_rows < 0 ? Int32::MAX : max_rows\nprint_data = (df.take(Math.min(num_row, max_rows_or_inf))).try do |pd|\n  if row_numbers && pd.num_row > 0\n    (pd.add_column(\" \") do |c|\n      c.row_num\n    end).move_left(\" \")\n  else\n    pd\n  end\nend\nval_printer = Utils.create_value_printer(max_digits)\ncol_widths = print_data.cols.map do |c|\n  c.values.map do |v|\n    (val_printer.call(v)).size\n  end.max? || 20\nend\nheader_widths = print_data.names.map(&.size)\ncol_spacing = 3\npadding = (col_widths.zip(header_widths)).map do |col, head|\n  [col, head].max + col_spacing\nend.tap do |v|\n  v.size > 0 ? (  v[0] = v[0] - col_spacing) : v\nend\nString.build do |sb|\n  sb << \"#{title}: #{num_row} x #{num_col}\\n\"\n  if self.is_a?(GroupedDataFrame)\n    sb << \"Groups: #{self.by.join(\", \")} [#{self.groups.size}]\\n\"\n  end\n  num_print_cols = (padding.scan_left(0) do |acc, val|\n    acc + val\n  end).each_with_index.take_while do |v|\n    v[0] < max_width\n  end.to_a.last[1]\n  width_trimmed = print_data.select(print_data.names.first(num_print_cols))\n  if (  col_names)\n    (sb << width_trimmed.cols.map_with_index do |col, idx|\n      col.name.pad_start(padding[idx])\n    end.join) << \"\\n\"\n  end\n  width_trimmed.rows.to_a.map(&.values).map do |row_data|\n    (sb << row_data.map_with_index do |val, idx|\n      (val_printer.call(val)).pad_start(padding[idx])\n    end.join) << \"\\n\"\n  end\n  and = Array(String).new\n  if (  max_rows_or_inf < df.num_row)\n    and << \"and #{df.num_row - max_rows_or_inf} more rows\"\n  end\n  if (  num_print_cols < print_data.num_col)\n    left_out_cols = print_data.select(names[num_print_cols..])\n    and << \"#{print_data.num_col - num_print_cols} more variables: #{left_out_cols.names.join(\", \")}\"\n  end\n  sb << ((and.join(\", and \")).wrap(max_width))\nend.strip\n"}},{"id":"transmute(*formula:ColumnFormula)-instance-method","html_id":"transmute(*formula:ColumnFormula)-instance-method","name":"transmute","doc":"Create a new dataframe based on a list of column-formulas which are evaluated in the context of the this instance.","summary":"<p>Create a new dataframe based on a list of column-formulas which are evaluated in the context of the this instance.</p>","abstract":false,"args":[{"name":"formula","doc":null,"default_value":"","external_name":"formula","restriction":"ColumnFormula"}],"args_string":"(*formula : ColumnFormula)","args_html":"(*formula : <a href=\"../Crysda/ColumnFormula.html\">ColumnFormula</a>)","location":{"filename":"src/crysda/dataframe.cr","line_number":577,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L577"},"def":{"name":"transmute","args":[{"name":"formula","doc":null,"default_value":"","external_name":"formula","restriction":"ColumnFormula"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(add_columns(*formula)).select(formula.map(&.name))"}},{"id":"ungroup:DataFrame-instance-method","html_id":"ungroup:DataFrame-instance-method","name":"ungroup","doc":"Removes the grouping (if present from a data frame)","summary":"<p>Removes the grouping (if present from a data frame)</p>","abstract":true,"args":[],"args_string":" : DataFrame","args_html":" : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/dataframe.cr","line_number":48,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L48"},"def":{"name":"ungroup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":""}},{"id":"unite(col_name:String,which:Array(String),sep:String=&quot;_&quot;,remove:Bool=true):DataFrame-instance-method","html_id":"unite(col_name:String,which:Array(String),sep:String=&quot;_&quot;,remove:Bool=true):DataFrame-instance-method","name":"unite","doc":"Convenience function to paste together multiple columns into one.\n\ncolName - Name of the column to add\nwhich - Names of columns which should be concatenated together\nsep - Separator to use between values.\nremove - If true, remove input columns from output data frame.\n\nsee `separate`","summary":"<p>Convenience function to paste together multiple columns into one.</p>","abstract":false,"args":[{"name":"col_name","doc":null,"default_value":"","external_name":"col_name","restriction":"String"},{"name":"which","doc":null,"default_value":"","external_name":"which","restriction":"Array(String)"},{"name":"sep","doc":null,"default_value":"\"_\"","external_name":"sep","restriction":"String"},{"name":"remove","doc":null,"default_value":"true","external_name":"remove","restriction":"Bool"}],"args_string":"(col_name : String, which : Array(String), sep : String = <span class=\"s\">&quot;_&quot;</span>, remove : Bool = <span class=\"n\">true</span>) : DataFrame","args_html":"(col_name : String, which : Array(String), sep : String = <span class=\"s\">&quot;_&quot;</span>, remove : Bool = <span class=\"n\">true</span>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/reshape.cr","line_number":109,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/reshape.cr#L109"},"def":{"name":"unite","args":[{"name":"col_name","doc":null,"default_value":"","external_name":"col_name","restriction":"String"},{"name":"which","doc":null,"default_value":"","external_name":"which","restriction":"Array(String)"},{"name":"sep","doc":null,"default_value":"\"_\"","external_name":"sep","restriction":"String"},{"name":"remove","doc":null,"default_value":"true","external_name":"remove","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"if which.empty?\n  raise(CrysdaException.new((  \"the column selection to be `unite`ed must not be empty\")))\nend\nunite_blk = self.select(which)\nunite_res = unite_blk.rows.to_a.map do |r|\n  r.values.map(&.to_s).join(sep)\nend\nrest = remove ? reject(unite_blk.names) : self\nrest.add_column(col_name) do |_|\n  unite_res\nend\n"}},{"id":"unite(col_name:String,*which:ColumnSelector,sep:String=&quot;_&quot;,remove:Bool=true):DataFrame-instance-method","html_id":"unite(col_name:String,*which:ColumnSelector,sep:String=&quot;_&quot;,remove:Bool=true):DataFrame-instance-method","name":"unite","doc":null,"summary":null,"abstract":false,"args":[{"name":"col_name","doc":null,"default_value":"","external_name":"col_name","restriction":"String"},{"name":"which","doc":null,"default_value":"","external_name":"which","restriction":"ColumnSelector"},{"name":"sep","doc":null,"default_value":"\"_\"","external_name":"sep","restriction":"String"},{"name":"remove","doc":null,"default_value":"true","external_name":"remove","restriction":"Bool"}],"args_string":"(col_name : String, *which : ColumnSelector, sep : String = <span class=\"s\">&quot;_&quot;</span>, remove : Bool = <span class=\"n\">true</span>) : DataFrame","args_html":"(col_name : String, *which : <a href=\"../Crysda/ColumnSelector.html\">ColumnSelector</a>, sep : String = <span class=\"s\">&quot;_&quot;</span>, remove : Bool = <span class=\"n\">true</span>) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/reshape.cr","line_number":120,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/reshape.cr#L120"},"def":{"name":"unite","args":[{"name":"col_name","doc":null,"default_value":"","external_name":"col_name","restriction":"String"},{"name":"which","doc":null,"default_value":"","external_name":"which","restriction":"ColumnSelector"},{"name":"sep","doc":null,"default_value":"\"_\"","external_name":"sep","restriction":"String"},{"name":"remove","doc":null,"default_value":"true","external_name":"remove","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"unite(col_name, which: col_select_as_names(reduce_col_selectors(which.to_a)), sep: sep, remove: remove)"}},{"id":"unnest(column_name:String):DataFrame-instance-method","html_id":"unnest(column_name:String):DataFrame-instance-method","name":"unnest","doc":"If you have a list-column, this makes each element of the list its own row. It unfolds data vertically. unnest() can handle list-columns that can atomic vectors, lists, or data frames (but not a mixture of the different types).","summary":"<p>If you have a list-column, this makes each element of the list its own row.</p>","abstract":false,"args":[{"name":"column_name","doc":null,"default_value":"","external_name":"column_name","restriction":"String"}],"args_string":"(column_name : String) : DataFrame","args_html":"(column_name : String) : <a href=\"../Crysda/DataFrame.html\">DataFrame</a>","location":{"filename":"src/crysda/reshape.cr","line_number":188,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/reshape.cr#L188"},"def":{"name":"unnest","args":[{"name":"column_name","doc":null,"default_value":"","external_name":"column_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DataFrame","visibility":"Public","body":"first_or_nil = self[column_name].values.reject do |__arg6|\n  __arg6.nil?\nend.first\nif (col = first_or_nil) && (!col.is_a?(DataFrame))\n  repackaged = case col\n  when Iterable\n    add_column(column_name) do |c|\n      c[column_name].map do |vals|\n        ((Crysda.dataframe_of(column_name)).values(vals)).as(DataFrame)\n      end\n    end\n  else\n    raise(CrysdaException.new((    \"Unnesting failed because of unsupported list column type\")))\n  end\n  return repackaged.unnest(column_name)\nend\ndata_col = self[column_name].values.as(Array(DataFrame | ::Nil))\nreplication_index = data_col.map_with_index do |df, row|\n  Array(Int32).new(df.try(&.num_row) || 1) do |_|\n    row\n  end\nend.flatten\nleft = DataFrame.replicate_by_index(reject(column_name), replication_index)\nunnested = data_col.map do |c|\n  c || DataFrame.empty\nend.bind_rows\nbind_cols(left, unnested)\n"}},{"id":"write_csv(filename:String,separator:Char=&#39;,&#39;,quote_char:Char=&#39;&quot;&#39;):Nil-instance-method","html_id":"write_csv(filename:String,separator:Char=&#39;,&#39;,quote_char:Char=&#39;&quot;&#39;):Nil-instance-method","name":"write_csv","doc":"Save the current dataframe to `separator` delimited file.","summary":"<p>Save the current dataframe to <code>separator</code> delimited file.</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"separator","doc":null,"default_value":"','","external_name":"separator","restriction":"Char"},{"name":"quote_char","doc":null,"default_value":"'\"'","external_name":"quote_char","restriction":"Char"}],"args_string":"(filename : String, separator : Char = <span class=\"s\">&#39;,&#39;</span>, quote_char : Char = <span class=\"s\">&#39;&quot;&#39;</span>) : Nil","args_html":"(filename : String, separator : Char = <span class=\"s\">&#39;,&#39;</span>, quote_char : Char = <span class=\"s\">&#39;&quot;&#39;</span>) : Nil","location":{"filename":"src/crysda/dataframe.cr","line_number":658,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L658"},"def":{"name":"write_csv","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"separator","doc":null,"default_value":"','","external_name":"separator","restriction":"Char"},{"name":"quote_char","doc":null,"default_value":"'\"'","external_name":"quote_char","restriction":"Char"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"File.open(filename, \"w\") do |file|\n  write_csv(file, separator, quote_char)\nend"}},{"id":"write_csv(io:IO,separator:Char=&#39;,&#39;,quote_char:Char=&#39;&quot;&#39;):Nil-instance-method","html_id":"write_csv(io:IO,separator:Char=&#39;,&#39;,quote_char:Char=&#39;&quot;&#39;):Nil-instance-method","name":"write_csv","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"separator","doc":null,"default_value":"','","external_name":"separator","restriction":"Char"},{"name":"quote_char","doc":null,"default_value":"'\"'","external_name":"quote_char","restriction":"Char"}],"args_string":"(io : IO, separator : Char = <span class=\"s\">&#39;,&#39;</span>, quote_char : Char = <span class=\"s\">&#39;&quot;&#39;</span>) : Nil","args_html":"(io : IO, separator : Char = <span class=\"s\">&#39;,&#39;</span>, quote_char : Char = <span class=\"s\">&#39;&quot;&#39;</span>) : Nil","location":{"filename":"src/crysda/dataframe.cr","line_number":664,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/dataframe.cr#L664"},"def":{"name":"write_csv","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"separator","doc":null,"default_value":"','","external_name":"separator","restriction":"Char"},{"name":"quote_char","doc":null,"default_value":"'\"'","external_name":"quote_char","restriction":"Char"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"io.puts(names.join(\"#{separator}\"))\nCSV.build(io, separator, quote_char) do |csv|\n  row_data.each.each do |drow|\n    csv.row do |r|\n      drow.each do |v|\n        r << (v.raw.nil? ? MISSING_VALUE : v)\n      end\n    end\n  end\nend\n"}}],"macros":[],"types":[]},{"html_id":"crysda/Crysda/DataFrameRow","path":"Crysda/DataFrameRow.html","kind":"alias","full_name":"Crysda::DataFrameRow","name":"DataFrameRow","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crysda/context.cr","line_number":13,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/context.cr#L13"}],"repository_name":"crysda","program":false,"enum":false,"alias":true,"aliased":"Hash(String, Crysda::AnyVal)","aliased_html":"Hash(String, <a href=\"../Crysda/AnyVal.html\">Crysda::AnyVal</a>)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crysda/Crysda/DFCol","path":"Crysda/DFCol.html","kind":"struct","full_name":"Crysda::DFCol","name":"DFCol","abstract":false,"superclass":{"html_id":"crysda/Crysda/DataCol","kind":"struct","full_name":"Crysda::DataCol","name":"DataCol"},"ancestors":[{"html_id":"crysda/Crysda/DataCol","kind":"struct","full_name":"Crysda::DataCol","name":"DataCol"},{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crysda/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/columns.cr","line_number":789,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L789"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"Column for DataFrame types. This is used in nesting the dataframes inside a dataframe","summary":"<p>Column for DataFrame types.</p>","class_methods":[],"constructors":[{"id":"new(name:String,val:Array(DataFrame?))-class-method","html_id":"new(name:String,val:Array(DataFrame?))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Array(DataFrame | ::Nil)"}],"args_string":"(name : String, val : Array(DataFrame?))","args_html":"(name : String, val : Array(<a href=\"../Crysda/DataFrame.html\">DataFrame</a>?))","location":{"filename":"src/crysda/columns.cr","line_number":790,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L790"},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Array(DataFrame | ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, val)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"compare(left:Int32,right:Int32,null_last=true):Int32-instance-method","html_id":"compare(left:Int32,right:Int32,null_last=true):Int32-instance-method","name":"compare","doc":null,"summary":null,"abstract":false,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int32"},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int32"},{"name":"null_last","doc":null,"default_value":"true","external_name":"null_last","restriction":""}],"args_string":"(left : Int32, right : Int32, null_last = <span class=\"n\">true</span>) : Int32","args_html":"(left : Int32, right : Int32, null_last = <span class=\"n\">true</span>) : Int32","location":{"filename":"src/crysda/columns.cr","line_number":799,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L799"},"def":{"name":"compare","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int32"},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int32"},{"name":"null_last","doc":null,"default_value":"true","external_name":"null_last","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"a = @values[left]\nb = @values[right]\ncase\nwhen a == b\n  0\nwhen a.nil?\n  null_last ? 1 : -1\nwhen b.nil?\n  null_last ? -1 : 1\nelse\n  (  a != b) ? (  a) ? -1 : 1 : 0\nend\n"}},{"id":"values:Array(DataFrame?)-instance-method","html_id":"values:Array(DataFrame?)-instance-method","name":"values","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(DataFrame?)","args_html":" : Array(<a href=\"../Crysda/DataFrame.html\">DataFrame</a>?)","location":{"filename":"src/crysda/columns.cr","line_number":795,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L795"},"def":{"name":"values","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(DataFrame | ::Nil)","visibility":"Public","body":"@values"}}],"macros":[],"types":[]},{"html_id":"crysda/Crysda/DuplicateColumnNameException","path":"Crysda/DuplicateColumnNameException.html","kind":"class","full_name":"Crysda::DuplicateColumnNameException","name":"DuplicateColumnNameException","abstract":false,"superclass":{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crysda/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/context.cr","line_number":62,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/context.cr#L62"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(names:Array(String))-class-method","html_id":"new(names:Array(String))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"names","doc":null,"default_value":"","external_name":"names","restriction":"Array(String)"}],"args_string":"(names : Array(String))","args_html":"(names : Array(String))","location":{"filename":"src/crysda/context.cr","line_number":63,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/context.cr#L63"},"def":{"name":"new","args":[{"name":"names","doc":null,"default_value":"","external_name":"names","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(names)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crysda/Crysda/Float64Col","path":"Crysda/Float64Col.html","kind":"struct","full_name":"Crysda::Float64Col","name":"Float64Col","abstract":false,"superclass":{"html_id":"crysda/Crysda/DataCol","kind":"struct","full_name":"Crysda::DataCol","name":"DataCol"},"ancestors":[{"html_id":"crysda/Crysda/DataCol","kind":"struct","full_name":"Crysda::DataCol","name":"DataCol"},{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crysda/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/columns.cr","line_number":481,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L481"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"Column for Float64 types","summary":"<p>Column for Float64 types</p>","class_methods":[],"constructors":[{"id":"new(name:String,val:Array(Float64?))-class-method","html_id":"new(name:String,val:Array(Float64?))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Array(Float64 | ::Nil)"}],"args_string":"(name : String, val : Array(Float64?))","args_html":"(name : String, val : Array(Float64?))","location":{"filename":"src/crysda/columns.cr","line_number":484,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L484"},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Array(Float64 | ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, val)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"<(val:Number)-instance-method","html_id":"<(val:Number)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"args_string":"(val : Number)","args_html":"(val : Number)","location":{"filename":"src/crysda/columns.cr","line_number":505,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L505"},"def":{"name":"<","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values.map_non_nil do |v|\n  v.not_nil! < val\nend.nil_as_false"}},{"id":"<(val:Float64Col)-instance-method","html_id":"<(val:Float64Col)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Float64Col"}],"args_string":"(val : Float64Col)","args_html":"(val : <a href=\"../Crysda/Float64Col.html\">Float64Col</a>)","location":{"filename":"src/crysda/columns.cr","line_number":505,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L505"},"def":{"name":"<","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Float64Col"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(values.zip(val.values)).map do |a, b|\n  a && b ? a < b : nil\nend.nil_as_false"}},{"id":"<=(val:Number)-instance-method","html_id":"<=(val:Number)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"args_string":"(val : Number)","args_html":"(val : Number)","location":{"filename":"src/crysda/columns.cr","line_number":505,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L505"},"def":{"name":"<=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values.map_non_nil do |v|\n  v.not_nil! <= val\nend.nil_as_false"}},{"id":"<=(val:Float64Col)-instance-method","html_id":"<=(val:Float64Col)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Float64Col"}],"args_string":"(val : Float64Col)","args_html":"(val : <a href=\"../Crysda/Float64Col.html\">Float64Col</a>)","location":{"filename":"src/crysda/columns.cr","line_number":505,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L505"},"def":{"name":"<=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Float64Col"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(values.zip(val.values)).map do |a, b|\n  a && b ? a <= b : nil\nend.nil_as_false"}},{"id":"==(val:Number)-instance-method","html_id":"==(val:Number)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"args_string":"(val : Number)","args_html":"(val : Number)","location":{"filename":"src/crysda/columns.cr","line_number":505,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L505"},"def":{"name":"==","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values.map_non_nil do |v|\n  v.not_nil! == val\nend.nil_as_false"}},{"id":"==(val:Float64Col)-instance-method","html_id":"==(val:Float64Col)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Float64Col"}],"args_string":"(val : Float64Col)","args_html":"(val : <a href=\"../Crysda/Float64Col.html\">Float64Col</a>)","location":{"filename":"src/crysda/columns.cr","line_number":505,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L505"},"def":{"name":"==","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Float64Col"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(values.zip(val.values)).map do |a, b|\n  a && b ? a == b : nil\nend.nil_as_false"}},{"id":">(val:Number)-instance-method","html_id":">(val:Number)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"args_string":"(val : Number)","args_html":"(val : Number)","location":{"filename":"src/crysda/columns.cr","line_number":505,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L505"},"def":{"name":">","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values.map_non_nil do |v|\n  v.not_nil! > val\nend.nil_as_false"}},{"id":">(val:Float64Col)-instance-method","html_id":">(val:Float64Col)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Float64Col"}],"args_string":"(val : Float64Col)","args_html":"(val : <a href=\"../Crysda/Float64Col.html\">Float64Col</a>)","location":{"filename":"src/crysda/columns.cr","line_number":505,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L505"},"def":{"name":">","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Float64Col"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(values.zip(val.values)).map do |a, b|\n  a && b ? a > b : nil\nend.nil_as_false"}},{"id":">=(val:Number)-instance-method","html_id":">=(val:Number)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"args_string":"(val : Number)","args_html":"(val : Number)","location":{"filename":"src/crysda/columns.cr","line_number":505,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L505"},"def":{"name":">=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values.map_non_nil do |v|\n  v.not_nil! >= val\nend.nil_as_false"}},{"id":">=(val:Float64Col)-instance-method","html_id":">=(val:Float64Col)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Float64Col"}],"args_string":"(val : Float64Col)","args_html":"(val : <a href=\"../Crysda/Float64Col.html\">Float64Col</a>)","location":{"filename":"src/crysda/columns.cr","line_number":505,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L505"},"def":{"name":">=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Float64Col"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(values.zip(val.values)).map do |a, b|\n  a && b ? a >= b : nil\nend.nil_as_false"}},{"id":"compare(left:Int32,right:Int32,null_last=true):Int32-instance-method","html_id":"compare(left:Int32,right:Int32,null_last=true):Int32-instance-method","name":"compare","doc":null,"summary":null,"abstract":false,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int32"},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int32"},{"name":"null_last","doc":null,"default_value":"true","external_name":"null_last","restriction":""}],"args_string":"(left : Int32, right : Int32, null_last = <span class=\"n\">true</span>) : Int32","args_html":"(left : Int32, right : Int32, null_last = <span class=\"n\">true</span>) : Int32","location":{"filename":"src/crysda/columns.cr","line_number":493,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L493"},"def":{"name":"compare","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int32"},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int32"},{"name":"null_last","doc":null,"default_value":"true","external_name":"null_last","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"a = @values[left]\nb = @values[right]\ncase\nwhen a == b\n  0\nwhen a.nil?\n  null_last ? 1 : -1\nwhen b.nil?\n  null_last ? -1 : 1\nelse\n  (a.not_nil! <=> b.not_nil!) || (null_last ? -1 : 1)\nend\n"}},{"id":"div(val)-instance-method","html_id":"div(val)-instance-method","name":"div","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/crysda/columns.cr","line_number":525,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L525"},"def":{"name":"div","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"do_op(val, ->(a : Float64, b : Float64) do\n  a / b\nend)"}},{"id":"minus(val)-instance-method","html_id":"minus(val)-instance-method","name":"minus","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/crysda/columns.cr","line_number":520,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L520"},"def":{"name":"minus","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"do_op(val, ->(a : Float64, b : Float64) do\n  a - b\nend)"}},{"id":"plus(val)-instance-method","html_id":"plus(val)-instance-method","name":"plus","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/crysda/columns.cr","line_number":515,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L515"},"def":{"name":"plus","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"do_op(val, ->(a : Float64, b : Float64) do\n  a + b\nend)"}},{"id":"times(val)-instance-method","html_id":"times(val)-instance-method","name":"times","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/crysda/columns.cr","line_number":530,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L530"},"def":{"name":"times","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"do_op(val, ->(a : Float64, b : Float64) do\n  a * b\nend)"}},{"id":"values:Array(Float64?)-instance-method","html_id":"values:Array(Float64?)-instance-method","name":"values","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Float64?)","args_html":" : Array(Float64?)","location":{"filename":"src/crysda/columns.cr","line_number":489,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L489"},"def":{"name":"values","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Float64 | ::Nil)","visibility":"Public","body":"@values"}}],"macros":[],"types":[]},{"html_id":"crysda/Crysda/HashBuilder","path":"Crysda/HashBuilder.html","kind":"struct","full_name":"Crysda::HashBuilder","name":"HashBuilder","abstract":false,"superclass":{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crysda/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/utils.cr","line_number":371,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L371"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"Custom Hashing helper. This provides a calculated hash of contents which is consistent on each and every run. This doesn't conflict with and/or override  Crystal Hashing functionality which is used for object equality checks.\nHash value generated by this builder is only used for internal grouping purposes to ensure the consistency on each and every run/invocation.\nRefer to `CustomColumnValue` for more details and usage purposes.","summary":"<p>Custom Hashing helper.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/utils.cr","line_number":379,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L379"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add(val:Bool)-instance-method","html_id":"add(val:Bool)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Bool"}],"args_string":"(val : Bool)","args_html":"(val : Bool)","location":{"filename":"src/crysda/utils.cr","line_number":384,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L384"},"def":{"name":"add","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@total = (@total &* @const) &+ (val ? 0 : 1)\nself\n"}},{"id":"add(val:Char)-instance-method","html_id":"add(val:Char)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Char"}],"args_string":"(val : Char)","args_html":"(val : Char)","location":{"filename":"src/crysda/utils.cr","line_number":389,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L389"},"def":{"name":"add","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Char"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add(val.ord)"}},{"id":"add(val:String)-instance-method","html_id":"add(val:String)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"String"}],"args_string":"(val : String)","args_html":"(val : String)","location":{"filename":"src/crysda/utils.cr","line_number":393,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L393"},"def":{"name":"add","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add(val.chars)"}},{"id":"add(val:AnyVal)-instance-method","html_id":"add(val:AnyVal)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"AnyVal"}],"args_string":"(val : AnyVal)","args_html":"(val : <a href=\"../Crysda/AnyVal.html\">AnyVal</a>)","location":{"filename":"src/crysda/utils.cr","line_number":397,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L397"},"def":{"name":"add","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"AnyVal"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add(val.raw)"}},{"id":"add(val:Nil)-instance-method","html_id":"add(val:Nil)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Nil"}],"args_string":"(val : Nil)","args_html":"(val : Nil)","location":{"filename":"src/crysda/utils.cr","line_number":401,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L401"},"def":{"name":"add","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@total = Int64::MAX - 123000\nself\n"}},{"id":"add(val:Iterable)-instance-method","html_id":"add(val:Iterable)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Iterable"}],"args_string":"(val : Iterable)","args_html":"(val : Iterable)","location":{"filename":"src/crysda/utils.cr","line_number":406,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L406"},"def":{"name":"add","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Iterable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"val.each do |v|\n  add(v)\nend\nself\n"}},{"id":"add(value:Float32)-instance-method","html_id":"add(value:Float32)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float32"}],"args_string":"(value : Float32)","args_html":"(value : Float32)","location":{"filename":"src/crysda/utils.cr","line_number":413,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L413"},"def":{"name":"add","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"normalized_hash = float_normalize_wrap(value) do |val|\n  unsafe_int = val.unsafe_as(Int32)\n  exp = (((unsafe_int >> 23) & 255) - 127)\n  mantissa = unsafe_int & ((1 << 23) - 1)\n  if exp > -127\n    exp = exp - 23\n    mantissa = mantissa | (1 << 23)\n  else\n    exp = exp - 22\n  end\n  {mantissa.to_i64, exp}\nend\nadd(normalized_hash)\n"}},{"id":"add(value:Float64)-instance-method","html_id":"add(value:Float64)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float64"}],"args_string":"(value : Float64)","args_html":"(value : Float64)","location":{"filename":"src/crysda/utils.cr","line_number":433,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L433"},"def":{"name":"add","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"normalized_hash = float_normalize_wrap(value) do |val|\n  unsafe_int = val.unsafe_as(Int64)\n  exp = (((unsafe_int >> 52) & 2047) - 1023)\n  mantissa = unsafe_int & ((1_u64 << 52) - 1)\n  if exp > -1023\n    exp = exp - 52\n    mantissa = mantissa | (1_u64 << 52)\n  else\n    exp = exp - 51\n  end\n  {mantissa.to_i64, exp}\nend\nadd(normalized_hash)\n"}},{"id":"add(value:Float)-instance-method","html_id":"add(value:Float)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float"}],"args_string":"(value : Float)","args_html":"(value : Float)","location":{"filename":"src/crysda/utils.cr","line_number":454,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L454"},"def":{"name":"add","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"normalized_hash = float_normalize_wrap(value) do |val|\n  frac, exp = Math.frexp(val)\n  float_normalize_reference(val, frac, exp)\nend\nadd(normalized_hash)\n"}},{"id":"add(val:Int)-instance-method","html_id":"add(val:Int)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int"}],"args_string":"(val : Int)","args_html":"(val : Int)","location":{"filename":"src/crysda/utils.cr","line_number":470,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L470"},"def":{"name":"add","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@total = (@total &* @const) &+ val\nself\n"}},{"id":"add(val:UUID)-instance-method","html_id":"add(val:UUID)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"UUID"}],"args_string":"(val : UUID)","args_html":"(val : UUID)","location":{"filename":"src/crysda/utils.cr","line_number":462,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L462"},"def":{"name":"add","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"UUID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add(val.to_s)"}},{"id":"add(val:CustomColumnValue)-instance-method","html_id":"add(val:CustomColumnValue)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"CustomColumnValue"}],"args_string":"(val : CustomColumnValue)","args_html":"(val : <a href=\"../Crysda/CustomColumnValue.html\">CustomColumnValue</a>)","location":{"filename":"src/crysda/utils.cr","line_number":466,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L466"},"def":{"name":"add","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"CustomColumnValue"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add(val.hashcode)"}},{"id":"add(val)-instance-method","html_id":"add(val)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/crysda/utils.cr","line_number":475,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L475"},"def":{"name":"add","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add(val.hash)"}},{"id":"hashcode(val)-instance-method","html_id":"hashcode(val)-instance-method","name":"hashcode","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/crysda/utils.cr","line_number":483,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L483"},"def":{"name":"hashcode","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add(val)\nret = @total\nreset\nret\n"}},{"id":"hashcode:Int64-instance-method","html_id":"hashcode:Int64-instance-method","name":"hashcode","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","args_html":" : Int64","location":{"filename":"src/crysda/utils.cr","line_number":479,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/utils.cr#L479"},"def":{"name":"hashcode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@total"}}],"macros":[],"types":[]},{"html_id":"crysda/Crysda/Int32Col","path":"Crysda/Int32Col.html","kind":"struct","full_name":"Crysda::Int32Col","name":"Int32Col","abstract":false,"superclass":{"html_id":"crysda/Crysda/DataCol","kind":"struct","full_name":"Crysda::DataCol","name":"DataCol"},"ancestors":[{"html_id":"crysda/Crysda/DataCol","kind":"struct","full_name":"Crysda::DataCol","name":"DataCol"},{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crysda/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/columns.cr","line_number":551,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L551"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"Column for Int32 types","summary":"<p>Column for Int32 types</p>","class_methods":[],"constructors":[{"id":"new(name:String,val:Array(Int32?))-class-method","html_id":"new(name:String,val:Array(Int32?))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Array(Int32 | ::Nil)"}],"args_string":"(name : String, val : Array(Int32?))","args_html":"(name : String, val : Array(Int32?))","location":{"filename":"src/crysda/columns.cr","line_number":554,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L554"},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Array(Int32 | ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, val)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"<(val:Number)-instance-method","html_id":"<(val:Number)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"args_string":"(val : Number)","args_html":"(val : Number)","location":{"filename":"src/crysda/columns.cr","line_number":576,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L576"},"def":{"name":"<","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values.map_non_nil do |v|\n  v.not_nil! < val\nend.nil_as_false"}},{"id":"<(val:Int32Col|Int64Col|Float64Col)-instance-method","html_id":"<(val:Int32Col|Int64Col|Float64Col)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int32Col | Int64Col | Float64Col"}],"args_string":"(val : Int32Col | Int64Col | Float64Col)","args_html":"(val : <a href=\"../Crysda/Int32Col.html\">Int32Col</a> | <a href=\"../Crysda/Int64Col.html\">Int64Col</a> | <a href=\"../Crysda/Float64Col.html\">Float64Col</a>)","location":{"filename":"src/crysda/columns.cr","line_number":576,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L576"},"def":{"name":"<","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int32Col | Int64Col | Float64Col"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(values.zip(val.values)).map do |a, b|\n  a && b ? a < b : nil\nend.nil_as_false"}},{"id":"<=(val:Number)-instance-method","html_id":"<=(val:Number)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"args_string":"(val : Number)","args_html":"(val : Number)","location":{"filename":"src/crysda/columns.cr","line_number":576,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L576"},"def":{"name":"<=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values.map_non_nil do |v|\n  v.not_nil! <= val\nend.nil_as_false"}},{"id":"<=(val:Int32Col|Int64Col|Float64Col)-instance-method","html_id":"<=(val:Int32Col|Int64Col|Float64Col)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int32Col | Int64Col | Float64Col"}],"args_string":"(val : Int32Col | Int64Col | Float64Col)","args_html":"(val : <a href=\"../Crysda/Int32Col.html\">Int32Col</a> | <a href=\"../Crysda/Int64Col.html\">Int64Col</a> | <a href=\"../Crysda/Float64Col.html\">Float64Col</a>)","location":{"filename":"src/crysda/columns.cr","line_number":576,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L576"},"def":{"name":"<=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int32Col | Int64Col | Float64Col"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(values.zip(val.values)).map do |a, b|\n  a && b ? a <= b : nil\nend.nil_as_false"}},{"id":"==(val:Number)-instance-method","html_id":"==(val:Number)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"args_string":"(val : Number)","args_html":"(val : Number)","location":{"filename":"src/crysda/columns.cr","line_number":576,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L576"},"def":{"name":"==","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values.map_non_nil do |v|\n  v.not_nil! == val\nend.nil_as_false"}},{"id":"==(val:Int32Col|Int64Col|Float64Col)-instance-method","html_id":"==(val:Int32Col|Int64Col|Float64Col)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int32Col | Int64Col | Float64Col"}],"args_string":"(val : Int32Col | Int64Col | Float64Col)","args_html":"(val : <a href=\"../Crysda/Int32Col.html\">Int32Col</a> | <a href=\"../Crysda/Int64Col.html\">Int64Col</a> | <a href=\"../Crysda/Float64Col.html\">Float64Col</a>)","location":{"filename":"src/crysda/columns.cr","line_number":576,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L576"},"def":{"name":"==","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int32Col | Int64Col | Float64Col"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(values.zip(val.values)).map do |a, b|\n  a && b ? a == b : nil\nend.nil_as_false"}},{"id":">(val:Number)-instance-method","html_id":">(val:Number)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"args_string":"(val : Number)","args_html":"(val : Number)","location":{"filename":"src/crysda/columns.cr","line_number":576,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L576"},"def":{"name":">","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values.map_non_nil do |v|\n  v.not_nil! > val\nend.nil_as_false"}},{"id":">(val:Int32Col|Int64Col|Float64Col)-instance-method","html_id":">(val:Int32Col|Int64Col|Float64Col)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int32Col | Int64Col | Float64Col"}],"args_string":"(val : Int32Col | Int64Col | Float64Col)","args_html":"(val : <a href=\"../Crysda/Int32Col.html\">Int32Col</a> | <a href=\"../Crysda/Int64Col.html\">Int64Col</a> | <a href=\"../Crysda/Float64Col.html\">Float64Col</a>)","location":{"filename":"src/crysda/columns.cr","line_number":576,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L576"},"def":{"name":">","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int32Col | Int64Col | Float64Col"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(values.zip(val.values)).map do |a, b|\n  a && b ? a > b : nil\nend.nil_as_false"}},{"id":">=(val:Number)-instance-method","html_id":">=(val:Number)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"args_string":"(val : Number)","args_html":"(val : Number)","location":{"filename":"src/crysda/columns.cr","line_number":576,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L576"},"def":{"name":">=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values.map_non_nil do |v|\n  v.not_nil! >= val\nend.nil_as_false"}},{"id":">=(val:Int32Col|Int64Col|Float64Col)-instance-method","html_id":">=(val:Int32Col|Int64Col|Float64Col)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int32Col | Int64Col | Float64Col"}],"args_string":"(val : Int32Col | Int64Col | Float64Col)","args_html":"(val : <a href=\"../Crysda/Int32Col.html\">Int32Col</a> | <a href=\"../Crysda/Int64Col.html\">Int64Col</a> | <a href=\"../Crysda/Float64Col.html\">Float64Col</a>)","location":{"filename":"src/crysda/columns.cr","line_number":576,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L576"},"def":{"name":">=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int32Col | Int64Col | Float64Col"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(values.zip(val.values)).map do |a, b|\n  a && b ? a >= b : nil\nend.nil_as_false"}},{"id":"compare(left:Int32,right:Int32,null_last=true):Int32-instance-method","html_id":"compare(left:Int32,right:Int32,null_last=true):Int32-instance-method","name":"compare","doc":null,"summary":null,"abstract":false,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int32"},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int32"},{"name":"null_last","doc":null,"default_value":"true","external_name":"null_last","restriction":""}],"args_string":"(left : Int32, right : Int32, null_last = <span class=\"n\">true</span>) : Int32","args_html":"(left : Int32, right : Int32, null_last = <span class=\"n\">true</span>) : Int32","location":{"filename":"src/crysda/columns.cr","line_number":563,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L563"},"def":{"name":"compare","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int32"},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int32"},{"name":"null_last","doc":null,"default_value":"true","external_name":"null_last","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"a = @values[left]\nb = @values[right]\ncase\nwhen a == b\n  0\nwhen a.nil?\n  null_last ? 1 : -1\nwhen b.nil?\n  null_last ? -1 : 1\nelse\n  (a.not_nil! <=> b.not_nil!) || (null_last ? -1 : 1)\nend\n"}},{"id":"div(val)-instance-method","html_id":"div(val)-instance-method","name":"div","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/crysda/columns.cr","line_number":596,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L596"},"def":{"name":"div","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"double_op(val, ->(a : Float64, b : Float64) do\n  a / b\nend)"}},{"id":"minus(val)-instance-method","html_id":"minus(val)-instance-method","name":"minus","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/crysda/columns.cr","line_number":591,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L591"},"def":{"name":"minus","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"do_op(val, ->(a : Int32, b : Int32) do\n  a - b\nend, ->(a : Float64, b : Float64) do\n  a - b\nend)"}},{"id":"plus(val)-instance-method","html_id":"plus(val)-instance-method","name":"plus","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/crysda/columns.cr","line_number":586,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L586"},"def":{"name":"plus","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"do_op(val, ->(a : Int32, b : Int32) do\n  a + b\nend, ->(a : Float64, b : Float64) do\n  a + b\nend)"}},{"id":"times(val)-instance-method","html_id":"times(val)-instance-method","name":"times","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/crysda/columns.cr","line_number":600,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L600"},"def":{"name":"times","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"do_op(val, ->(a : Int32, b : Int32) do\n  a * b\nend, ->(a : Float64, b : Float64) do\n  a * b\nend)"}},{"id":"values:Array(Int32?)-instance-method","html_id":"values:Array(Int32?)-instance-method","name":"values","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int32?)","args_html":" : Array(Int32?)","location":{"filename":"src/crysda/columns.cr","line_number":559,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L559"},"def":{"name":"values","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32 | ::Nil)","visibility":"Public","body":"@values"}}],"macros":[],"types":[]},{"html_id":"crysda/Crysda/Int64Col","path":"Crysda/Int64Col.html","kind":"struct","full_name":"Crysda::Int64Col","name":"Int64Col","abstract":false,"superclass":{"html_id":"crysda/Crysda/DataCol","kind":"struct","full_name":"Crysda::DataCol","name":"DataCol"},"ancestors":[{"html_id":"crysda/Crysda/DataCol","kind":"struct","full_name":"Crysda::DataCol","name":"DataCol"},{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crysda/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/columns.cr","line_number":645,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L645"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"Column for Int64 types","summary":"<p>Column for Int64 types</p>","class_methods":[],"constructors":[{"id":"new(name:String,val:Array(Int64?))-class-method","html_id":"new(name:String,val:Array(Int64?))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Array(Int64 | ::Nil)"}],"args_string":"(name : String, val : Array(Int64?))","args_html":"(name : String, val : Array(Int64?))","location":{"filename":"src/crysda/columns.cr","line_number":648,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L648"},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Array(Int64 | ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, val)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"<(val:Number)-instance-method","html_id":"<(val:Number)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"args_string":"(val : Number)","args_html":"(val : Number)","location":{"filename":"src/crysda/columns.cr","line_number":669,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L669"},"def":{"name":"<","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values.map_non_nil do |v|\n  v.not_nil! < val\nend.nil_as_false"}},{"id":"<(val:Int64Col)-instance-method","html_id":"<(val:Int64Col)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int64Col"}],"args_string":"(val : Int64Col)","args_html":"(val : <a href=\"../Crysda/Int64Col.html\">Int64Col</a>)","location":{"filename":"src/crysda/columns.cr","line_number":669,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L669"},"def":{"name":"<","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int64Col"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(values.zip(val.values)).map do |a, b|\n  a && b ? a < b : nil\nend.nil_as_false"}},{"id":"<=(val:Number)-instance-method","html_id":"<=(val:Number)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"args_string":"(val : Number)","args_html":"(val : Number)","location":{"filename":"src/crysda/columns.cr","line_number":669,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L669"},"def":{"name":"<=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values.map_non_nil do |v|\n  v.not_nil! <= val\nend.nil_as_false"}},{"id":"<=(val:Int64Col)-instance-method","html_id":"<=(val:Int64Col)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int64Col"}],"args_string":"(val : Int64Col)","args_html":"(val : <a href=\"../Crysda/Int64Col.html\">Int64Col</a>)","location":{"filename":"src/crysda/columns.cr","line_number":669,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L669"},"def":{"name":"<=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int64Col"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(values.zip(val.values)).map do |a, b|\n  a && b ? a <= b : nil\nend.nil_as_false"}},{"id":"==(val:Number)-instance-method","html_id":"==(val:Number)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"args_string":"(val : Number)","args_html":"(val : Number)","location":{"filename":"src/crysda/columns.cr","line_number":669,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L669"},"def":{"name":"==","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values.map_non_nil do |v|\n  v.not_nil! == val\nend.nil_as_false"}},{"id":"==(val:Int64Col)-instance-method","html_id":"==(val:Int64Col)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int64Col"}],"args_string":"(val : Int64Col)","args_html":"(val : <a href=\"../Crysda/Int64Col.html\">Int64Col</a>)","location":{"filename":"src/crysda/columns.cr","line_number":669,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L669"},"def":{"name":"==","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int64Col"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(values.zip(val.values)).map do |a, b|\n  a && b ? a == b : nil\nend.nil_as_false"}},{"id":">(val:Number)-instance-method","html_id":">(val:Number)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"args_string":"(val : Number)","args_html":"(val : Number)","location":{"filename":"src/crysda/columns.cr","line_number":669,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L669"},"def":{"name":">","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values.map_non_nil do |v|\n  v.not_nil! > val\nend.nil_as_false"}},{"id":">(val:Int64Col)-instance-method","html_id":">(val:Int64Col)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int64Col"}],"args_string":"(val : Int64Col)","args_html":"(val : <a href=\"../Crysda/Int64Col.html\">Int64Col</a>)","location":{"filename":"src/crysda/columns.cr","line_number":669,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L669"},"def":{"name":">","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int64Col"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(values.zip(val.values)).map do |a, b|\n  a && b ? a > b : nil\nend.nil_as_false"}},{"id":">=(val:Number)-instance-method","html_id":">=(val:Number)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"args_string":"(val : Number)","args_html":"(val : Number)","location":{"filename":"src/crysda/columns.cr","line_number":669,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L669"},"def":{"name":">=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"values.map_non_nil do |v|\n  v.not_nil! >= val\nend.nil_as_false"}},{"id":">=(val:Int64Col)-instance-method","html_id":">=(val:Int64Col)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int64Col"}],"args_string":"(val : Int64Col)","args_html":"(val : <a href=\"../Crysda/Int64Col.html\">Int64Col</a>)","location":{"filename":"src/crysda/columns.cr","line_number":669,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L669"},"def":{"name":">=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int64Col"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(values.zip(val.values)).map do |a, b|\n  a && b ? a >= b : nil\nend.nil_as_false"}},{"id":"compare(left:Int32,right:Int32,null_last=true):Int32-instance-method","html_id":"compare(left:Int32,right:Int32,null_last=true):Int32-instance-method","name":"compare","doc":null,"summary":null,"abstract":false,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int32"},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int32"},{"name":"null_last","doc":null,"default_value":"true","external_name":"null_last","restriction":""}],"args_string":"(left : Int32, right : Int32, null_last = <span class=\"n\">true</span>) : Int32","args_html":"(left : Int32, right : Int32, null_last = <span class=\"n\">true</span>) : Int32","location":{"filename":"src/crysda/columns.cr","line_number":657,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L657"},"def":{"name":"compare","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int32"},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int32"},{"name":"null_last","doc":null,"default_value":"true","external_name":"null_last","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"a = @values[left]\nb = @values[right]\ncase\nwhen a == b\n  0\nwhen a.nil?\n  null_last ? 1 : -1\nwhen b.nil?\n  null_last ? -1 : 1\nelse\n  (a.not_nil! <=> b.not_nil!) || (null_last ? -1 : 1)\nend\n"}},{"id":"div(val)-instance-method","html_id":"div(val)-instance-method","name":"div","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/crysda/columns.cr","line_number":689,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L689"},"def":{"name":"div","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"double_op(val, ->(a : Float64, b : Float64) do\n  a / b\nend)"}},{"id":"minus(val)-instance-method","html_id":"minus(val)-instance-method","name":"minus","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/crysda/columns.cr","line_number":684,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L684"},"def":{"name":"minus","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"do_op(val, ->(a : Int64, b : Int64) do\n  a - b\nend, ->(a : Float64, b : Float64) do\n  a - b\nend)"}},{"id":"plus(val)-instance-method","html_id":"plus(val)-instance-method","name":"plus","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/crysda/columns.cr","line_number":679,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L679"},"def":{"name":"plus","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"do_op(val, ->(a : Int64, b : Int64) do\n  a + b\nend, ->(a : Float64, b : Float64) do\n  a + b\nend)"}},{"id":"times(val)-instance-method","html_id":"times(val)-instance-method","name":"times","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/crysda/columns.cr","line_number":693,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L693"},"def":{"name":"times","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"do_op(val, ->(a : Int64, b : Int64) do\n  a * b\nend, ->(a : Float64, b : Float64) do\n  a * b\nend)"}},{"id":"values:Array(Int64?)-instance-method","html_id":"values:Array(Int64?)-instance-method","name":"values","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int64?)","args_html":" : Array(Int64?)","location":{"filename":"src/crysda/columns.cr","line_number":653,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L653"},"def":{"name":"values","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int64 | ::Nil)","visibility":"Public","body":"@values"}}],"macros":[],"types":[]},{"html_id":"crysda/Crysda/InvalidColumnOperationException","path":"Crysda/InvalidColumnOperationException.html","kind":"class","full_name":"Crysda::InvalidColumnOperationException","name":"InvalidColumnOperationException","abstract":false,"superclass":{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crysda/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/columns.cr","line_number":15,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L15"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crysda/Crysda/InvalidColumnSelectException","path":"Crysda/InvalidColumnSelectException.html","kind":"class","full_name":"Crysda::InvalidColumnSelectException","name":"InvalidColumnSelectException","abstract":false,"superclass":{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crysda/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/select.cr","line_number":21,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L21"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"Exception raised when an invalid column selection is being made, or when one tries to use both positive and negative selections.","summary":"<p>Exception raised when an invalid column selection is being made, or when one tries to use both positive and negative selections.</p>","class_methods":[],"constructors":[{"id":"new(col_names:Array(String),selection:Array(Bool?))-class-method","html_id":"new(col_names:Array(String),selection:Array(Bool?))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"col_names","doc":null,"default_value":"","external_name":"col_names","restriction":"Array(String)"},{"name":"selection","doc":null,"default_value":"","external_name":"selection","restriction":"Array(Bool | ::Nil)"}],"args_string":"(col_names : Array(String), selection : Array(Bool?))","args_html":"(col_names : Array(String), selection : Array(Bool?))","location":{"filename":"src/crysda/select.cr","line_number":22,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L22"},"def":{"name":"new","args":[{"name":"col_names","doc":null,"default_value":"","external_name":"col_names","restriction":"Array(String)"},{"name":"selection","doc":null,"default_value":"","external_name":"selection","restriction":"Array(Bool | ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(col_names, selection)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crysda/Crysda/InvalidSortingPredicateException","path":"Crysda/InvalidSortingPredicateException.html","kind":"class","full_name":"Crysda::InvalidSortingPredicateException","name":"InvalidSortingPredicateException","abstract":false,"superclass":{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crysda/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/columns.cr","line_number":21,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L21"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(val)-class-method","html_id":"new(val)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/crysda/columns.cr","line_number":22,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L22"},"def":{"name":"new","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(val)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crysda/Crysda/List","path":"Crysda/List.html","kind":"module","full_name":"Crysda::List(T)","name":"List","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crysda/context.cr","line_number":76,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/context.cr#L76"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"Helper for creating a list of Types","summary":"<p>Helper for creating a list of Types</p>","class_methods":[{"id":"of-class-method","html_id":"of-class-method","name":"of","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/context.cr","line_number":81,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/context.cr#L81"},"def":{"name":"of","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ArrayList(T).new"}},{"id":"of(*args:T)-class-method","html_id":"of(*args:T)-class-method","name":"of","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"T"}],"args_string":"(*args : T)","args_html":"(*args : T)","location":{"filename":"src/crysda/context.cr","line_number":77,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/context.cr#L77"},"def":{"name":"of","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"T"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ArrayList(T).new(*args)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crysda/Crysda/MissingValueException","path":"Crysda/MissingValueException.html","kind":"class","full_name":"Crysda::MissingValueException","name":"MissingValueException","abstract":false,"superclass":{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crysda/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/columns.cr","line_number":18,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L18"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crysda/Crysda/NonScalarValueException","path":"Crysda/NonScalarValueException.html","kind":"class","full_name":"Crysda::NonScalarValueException","name":"NonScalarValueException","abstract":false,"superclass":{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crysda/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/columns.cr","line_number":27,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L27"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(tf:ColumnFormula,result)-class-method","html_id":"new(tf:ColumnFormula,result)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"tf","doc":null,"default_value":"","external_name":"tf","restriction":"ColumnFormula"},{"name":"result","doc":null,"default_value":"","external_name":"result","restriction":""}],"args_string":"(tf : ColumnFormula, result)","args_html":"(tf : <a href=\"../Crysda/ColumnFormula.html\">ColumnFormula</a>, result)","location":{"filename":"src/crysda/columns.cr","line_number":28,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L28"},"def":{"name":"new","args":[{"name":"tf","doc":null,"default_value":"","external_name":"tf","restriction":"ColumnFormula"},{"name":"result","doc":null,"default_value":"","external_name":"result","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(tf, result)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crysda/Crysda/RenamePair","path":"Crysda/RenamePair.html","kind":"alias","full_name":"Crysda::RenamePair","name":"RenamePair","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crysda/select.cr","line_number":7,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L7"}],"repository_name":"crysda","program":false,"enum":false,"alias":true,"aliased":"NamedTuple(name: String, with: String)","aliased_html":"{name: String, with: String}","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"`NamedTuple` used to `rename` columns. name represents the current **name** of column which should be renamed to **with** value.","summary":"<p><code>NamedTuple</code> used to <code>rename</code> columns.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crysda/Crysda/RenameRule","path":"Crysda/RenameRule.html","kind":"struct","full_name":"Crysda::RenameRule","name":"RenameRule","abstract":false,"superclass":{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crysda/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/select.cr","line_number":35,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L35"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(old_name:String,new_name:String)-class-method","html_id":"new(old_name:String,new_name:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"old_name","doc":null,"default_value":"","external_name":"old_name","restriction":"String"},{"name":"new_name","doc":null,"default_value":"","external_name":"new_name","restriction":"String"}],"args_string":"(old_name : String, new_name : String)","args_html":"(old_name : String, new_name : String)","location":{"filename":"src/crysda/select.cr","line_number":35,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L35"},"def":{"name":"new","args":[{"name":"old_name","doc":null,"default_value":"","external_name":"old_name","restriction":"String"},{"name":"new_name","doc":null,"default_value":"","external_name":"new_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(old_name, new_name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"as_table_formula-instance-method","html_id":"as_table_formula-instance-method","name":"as_table_formula","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/select.cr","line_number":36,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L36"},"def":{"name":"as_table_formula","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ColumnFormula.new(new_name, TableExpression.new do |df|\n  df[old_name]\nend)"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crysda/select.cr","line_number":35,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L35"},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@old_name.clone, @new_name.clone)"}},{"id":"copy_with(old_name_old_name=@old_name,new_name_new_name=@new_name)-instance-method","html_id":"copy_with(old_name_old_name=@old_name,new_name_new_name=@new_name)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_old_name","doc":null,"default_value":"@old_name","external_name":"old_name","restriction":""},{"name":"_new_name","doc":null,"default_value":"@new_name","external_name":"new_name","restriction":""}],"args_string":"(old_name _old_name = @old_name, new_name _new_name = @new_name)","args_html":"(old_name _old_name = @old_name, new_name _new_name = @new_name)","location":{"filename":"src/crysda/select.cr","line_number":35,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L35"},"def":{"name":"copy_with","args":[{"name":"_old_name","doc":null,"default_value":"@old_name","external_name":"old_name","restriction":""},{"name":"_new_name","doc":null,"default_value":"@new_name","external_name":"new_name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(_old_name, _new_name)"}},{"id":"new_name:String-instance-method","html_id":"new_name:String-instance-method","name":"new_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":null,"def":{"name":"new_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@new_name"}},{"id":"old_name:String-instance-method","html_id":"old_name:String-instance-method","name":"old_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":null,"def":{"name":"old_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@old_name"}}],"macros":[],"types":[]},{"html_id":"crysda/Crysda/RowPredicate","path":"Crysda/RowPredicate.html","kind":"alias","full_name":"Crysda::RowPredicate","name":"RowPredicate","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crysda/context.cr","line_number":6,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/context.cr#L6"}],"repository_name":"crysda","program":false,"enum":false,"alias":true,"aliased":"Proc(Crysda::ExpressionContext, (Array(Bool | Nil) | Array(Bool)))","aliased_html":"Crysda::ExpressionContext -> Array(Bool?) | Array(Bool)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"Row predicate `Proc` used in `filter` block.","summary":"<p>Row predicate <code>Proc</code> used in <code>filter</code> block.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crysda/Crysda/SelectException","path":"Crysda/SelectException.html","kind":"class","full_name":"Crysda::SelectException","name":"SelectException","abstract":false,"superclass":{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crysda/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/select.cr","line_number":10,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/select.cr#L10"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"Exception raised during `select` operations","summary":"<p>Exception raised during <code>select</code> operations</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crysda/Crysda/SortExpression","path":"Crysda/SortExpression.html","kind":"alias","full_name":"Crysda::SortExpression","name":"SortExpression","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crysda/context.cr","line_number":12,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/context.cr#L12"}],"repository_name":"crysda","program":false,"enum":false,"alias":true,"aliased":"Proc(Crysda::SortingContext, (Bool | Crysda::CustomColumnValue | Crysda::DataCol | Float32 | Float64 | Int32 | Int64 | JSON::Any | String | Time | UUID | Nil))","aliased_html":"Crysda::SortingContext -> Bool | <a href=\"../Crysda/CustomColumnValue.html\">Crysda::CustomColumnValue</a> | <a href=\"../Crysda/DataCol.html\">Crysda::DataCol</a> | Float32 | Float64 | Int32 | Int64 | JSON::Any | String | Time | UUID | Nil","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crysda/Crysda/StringCol","path":"Crysda/StringCol.html","kind":"struct","full_name":"Crysda::StringCol","name":"StringCol","abstract":false,"superclass":{"html_id":"crysda/Crysda/DataCol","kind":"struct","full_name":"Crysda::DataCol","name":"DataCol"},"ancestors":[{"html_id":"crysda/Crysda/DataCol","kind":"struct","full_name":"Crysda::DataCol","name":"DataCol"},{"html_id":"crysda/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crysda/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/columns.cr","line_number":437,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L437"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":"Column for String types","summary":"<p>Column for String types</p>","class_methods":[],"constructors":[{"id":"new(name:String,val:Array(String?))-class-method","html_id":"new(name:String,val:Array(String?))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Array(String | ::Nil)"}],"args_string":"(name : String, val : Array(String?))","args_html":"(name : String, val : Array(String?))","location":{"filename":"src/crysda/columns.cr","line_number":438,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L438"},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Array(String | ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, val)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"<(val:String)-instance-method","html_id":"<(val:String)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"String"}],"args_string":"(val : String)","args_html":"(val : String)","location":{"filename":"src/crysda/columns.cr","line_number":459,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L459"},"def":{"name":"<","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@values.map_non_nil do |v|\n  v.not_nil! < val\nend.nil_as_false"}},{"id":"<(val:StringCol)-instance-method","html_id":"<(val:StringCol)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"StringCol"}],"args_string":"(val : StringCol)","args_html":"(val : <a href=\"../Crysda/StringCol.html\">StringCol</a>)","location":{"filename":"src/crysda/columns.cr","line_number":459,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L459"},"def":{"name":"<","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"StringCol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@values.zip(val.values)).map do |a, b|\n  a && b ? a < b : nil\nend.nil_as_false"}},{"id":"<=(val:String)-instance-method","html_id":"<=(val:String)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"String"}],"args_string":"(val : String)","args_html":"(val : String)","location":{"filename":"src/crysda/columns.cr","line_number":459,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L459"},"def":{"name":"<=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@values.map_non_nil do |v|\n  v.not_nil! <= val\nend.nil_as_false"}},{"id":"<=(val:StringCol)-instance-method","html_id":"<=(val:StringCol)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"StringCol"}],"args_string":"(val : StringCol)","args_html":"(val : <a href=\"../Crysda/StringCol.html\">StringCol</a>)","location":{"filename":"src/crysda/columns.cr","line_number":459,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L459"},"def":{"name":"<=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"StringCol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@values.zip(val.values)).map do |a, b|\n  a && b ? a <= b : nil\nend.nil_as_false"}},{"id":">(val:String)-instance-method","html_id":">(val:String)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"String"}],"args_string":"(val : String)","args_html":"(val : String)","location":{"filename":"src/crysda/columns.cr","line_number":459,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L459"},"def":{"name":">","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@values.map_non_nil do |v|\n  v.not_nil! > val\nend.nil_as_false"}},{"id":">(val:StringCol)-instance-method","html_id":">(val:StringCol)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"StringCol"}],"args_string":"(val : StringCol)","args_html":"(val : <a href=\"../Crysda/StringCol.html\">StringCol</a>)","location":{"filename":"src/crysda/columns.cr","line_number":459,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L459"},"def":{"name":">","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"StringCol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@values.zip(val.values)).map do |a, b|\n  a && b ? a > b : nil\nend.nil_as_false"}},{"id":">=(val:String)-instance-method","html_id":">=(val:String)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"String"}],"args_string":"(val : String)","args_html":"(val : String)","location":{"filename":"src/crysda/columns.cr","line_number":459,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L459"},"def":{"name":">=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@values.map_non_nil do |v|\n  v.not_nil! >= val\nend.nil_as_false"}},{"id":">=(val:StringCol)-instance-method","html_id":">=(val:StringCol)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"StringCol"}],"args_string":"(val : StringCol)","args_html":"(val : <a href=\"../Crysda/StringCol.html\">StringCol</a>)","location":{"filename":"src/crysda/columns.cr","line_number":459,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L459"},"def":{"name":">=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"StringCol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@values.zip(val.values)).map do |a, b|\n  a && b ? a >= b : nil\nend.nil_as_false"}},{"id":"compare(left:Int32,right:Int32,null_last=true):Int32-instance-method","html_id":"compare(left:Int32,right:Int32,null_last=true):Int32-instance-method","name":"compare","doc":null,"summary":null,"abstract":false,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int32"},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int32"},{"name":"null_last","doc":null,"default_value":"true","external_name":"null_last","restriction":""}],"args_string":"(left : Int32, right : Int32, null_last = <span class=\"n\">true</span>) : Int32","args_html":"(left : Int32, right : Int32, null_last = <span class=\"n\">true</span>) : Int32","location":{"filename":"src/crysda/columns.cr","line_number":447,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L447"},"def":{"name":"compare","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int32"},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int32"},{"name":"null_last","doc":null,"default_value":"true","external_name":"null_last","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"a = @values[left]\nb = @values[right]\ncase\nwhen a == b\n  0\nwhen a.nil?\n  null_last ? 1 : -1\nwhen b.nil?\n  null_last ? -1 : 1\nelse\n  (a.not_nil! <=> b.not_nil!) || (null_last ? -1 : 1)\nend\n"}},{"id":"plus(val:DataCol)-instance-method","html_id":"plus(val:DataCol)-instance-method","name":"plus","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"DataCol"}],"args_string":"(val : DataCol)","args_html":"(val : <a href=\"../Crysda/DataCol.html\">DataCol</a>)","location":{"filename":"src/crysda/columns.cr","line_number":469,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L469"},"def":{"name":"plus","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"DataCol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if val.is_a?(DataCol)\nelse\n  raise(UnSupportedOperationException.new)\nend\nStringCol.new(Crysda.temp_colname, @values.map_with_index do |v, i|\n  na_aware_plus(v, val.values[i].to_s)\nend)\n"}},{"id":"values:Array(String?)-instance-method","html_id":"values:Array(String?)-instance-method","name":"values","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String?)","args_html":" : Array(String?)","location":{"filename":"src/crysda/columns.cr","line_number":443,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L443"},"def":{"name":"values","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String | ::Nil)","visibility":"Public","body":"@values"}}],"macros":[],"types":[]},{"html_id":"crysda/Crysda/SumFormula","path":"Crysda/SumFormula.html","kind":"alias","full_name":"Crysda::SumFormula","name":"SumFormula","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crysda/columns.cr","line_number":10,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/columns.cr#L10"}],"repository_name":"crysda","program":false,"enum":false,"alias":true,"aliased":"Proc(Crysda::DataCol, (Bool | Crysda::CustomColumnValue | Float32 | Float64 | Int32 | Int64 | JSON::Any | String | Time | UUID | Nil))","aliased_html":"<a href=\"../Crysda/DataCol.html\">Crysda::DataCol</a> -> Bool | <a href=\"../Crysda/CustomColumnValue.html\">Crysda::CustomColumnValue</a> | Float32 | Float64 | Int32 | Int64 | JSON::Any | String | Time | UUID | Nil","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crysda/Crysda/SummarizeFunc","path":"Crysda/SummarizeFunc.html","kind":"alias","full_name":"Crysda::SummarizeFunc","name":"SummarizeFunc","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crysda/context.cr","line_number":14,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/context.cr#L14"}],"repository_name":"crysda","program":false,"enum":false,"alias":true,"aliased":"Proc(Crysda::SummarizeBuilder, Nil)","aliased_html":"Crysda::SummarizeBuilder -> Nil","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crysda/Crysda/TableExpression","path":"Crysda/TableExpression.html","kind":"alias","full_name":"Crysda::TableExpression","name":"TableExpression","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crysda/context.cr","line_number":7,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/context.cr#L7"}],"repository_name":"crysda","program":false,"enum":false,"alias":true,"aliased":"Proc(Crysda::ExpressionContext, (Array(Bool | Nil) | Array(Bool) | Array(Crysda::CustomColumnValue) | Array(Crysda::DataFrame | Nil) | Array(Crysda::DataFrame) | Array(Float32 | Nil) | Array(Float32) | Array(Float64 | Nil) | Array(Float64) | Array(Int32 | Nil) | Array(Int32) | Array(Int64 | Nil) | Array(Int64) | Array(String | Nil) | Array(String) | Bool | Crysda::CustomColumnValue | Crysda::DataCol | Float32 | Float64 | Int32 | Int64 | JSON::Any | String | Time | UUID | Nil))","aliased_html":"Crysda::ExpressionContext -> Array(Bool?) | Array(Bool) | Array(<a href=\"../Crysda/CustomColumnValue.html\">Crysda::CustomColumnValue</a>) | Array(<a href=\"../Crysda/DataFrame.html\">Crysda::DataFrame</a>?) | Array(<a href=\"../Crysda/DataFrame.html\">Crysda::DataFrame</a>) | Array(Float32?) | Array(Float32) | Array(Float64?) | Array(Float64) | Array(Int32?) | Array(Int32) | Array(Int64?) | Array(Int64) | Array(String?) | Array(String) | Bool | <a href=\"../Crysda/CustomColumnValue.html\">Crysda::CustomColumnValue</a> | <a href=\"../Crysda/DataCol.html\">Crysda::DataCol</a> | Float32 | Float64 | Int32 | Int64 | JSON::Any | String | Time | UUID | Nil","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crysda/Crysda/UnSupportedOperationException","path":"Crysda/UnSupportedOperationException.html","kind":"class","full_name":"Crysda::UnSupportedOperationException","name":"UnSupportedOperationException","abstract":false,"superclass":{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crysda/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crysda/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crysda/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crysda/context.cr","line_number":59,"url":"https://github.com/naqvis/CrysDA/blob/77c527b796833fe3fb8a5d75e29692236c59471a/src/crysda/context.cr#L59"}],"repository_name":"crysda","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crysda/Crysda","kind":"module","full_name":"Crysda","name":"Crysda"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]}}